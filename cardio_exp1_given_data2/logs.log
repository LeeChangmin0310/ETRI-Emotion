2025-08-19 18:21:03,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 18:21:03,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 18:21:03,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 18:21:03,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 18:43:15,476:INFO:PyCaret ClassificationExperiment
2025-08-19 18:43:15,477:INFO:Logging name: clf-default-name
2025-08-19 18:43:15,477:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:43:15,477:INFO:version 3.3.2
2025-08-19 18:43:15,477:INFO:Initializing setup()
2025-08-19 18:43:15,477:INFO:self.USI: 9069
2025-08-19 18:43:15,477:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:43:15,477:INFO:Checking environment
2025-08-19 18:43:15,477:INFO:python_version: 3.10.18
2025-08-19 18:43:15,477:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:43:15,477:INFO:machine: arm64
2025-08-19 18:43:15,477:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:43:15,478:INFO:Memory: svmem(total=17179869184, available=3110436864, percent=81.9, used=5902270464, free=331104256, active=2798452736, inactive=2744975360, wired=3103817728)
2025-08-19 18:43:15,478:INFO:Physical Core: 8
2025-08-19 18:43:15,478:INFO:Logical Core: 8
2025-08-19 18:43:15,478:INFO:Checking libraries
2025-08-19 18:43:15,478:INFO:System:
2025-08-19 18:43:15,478:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:43:15,478:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:43:15,478:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:43:15,478:INFO:PyCaret required dependencies:
2025-08-19 18:43:15,564:INFO:                 pip: 25.2
2025-08-19 18:43:15,564:INFO:          setuptools: 80.9.0
2025-08-19 18:43:15,564:INFO:             pycaret: 3.3.2
2025-08-19 18:43:15,564:INFO:             IPython: 8.37.0
2025-08-19 18:43:15,564:INFO:          ipywidgets: 8.1.7
2025-08-19 18:43:15,564:INFO:                tqdm: 4.67.1
2025-08-19 18:43:15,564:INFO:               numpy: 1.25.2
2025-08-19 18:43:15,564:INFO:              pandas: 2.1.4
2025-08-19 18:43:15,564:INFO:              jinja2: 3.1.6
2025-08-19 18:43:15,564:INFO:               scipy: 1.9.3
2025-08-19 18:43:15,564:INFO:              joblib: 1.3.2
2025-08-19 18:43:15,564:INFO:             sklearn: 1.4.2
2025-08-19 18:43:15,564:INFO:                pyod: 2.0.5
2025-08-19 18:43:15,564:INFO:            imblearn: 0.12.4
2025-08-19 18:43:15,564:INFO:   category_encoders: 2.7.0
2025-08-19 18:43:15,564:INFO:            lightgbm: 4.6.0
2025-08-19 18:43:15,564:INFO:               numba: 0.61.2
2025-08-19 18:43:15,564:INFO:            requests: 2.32.4
2025-08-19 18:43:15,564:INFO:          matplotlib: 3.7.2
2025-08-19 18:43:15,564:INFO:          scikitplot: 0.3.7
2025-08-19 18:43:15,564:INFO:         yellowbrick: 1.5
2025-08-19 18:43:15,564:INFO:              plotly: 5.24.1
2025-08-19 18:43:15,564:INFO:    plotly-resampler: Not installed
2025-08-19 18:43:15,564:INFO:             kaleido: 1.0.0
2025-08-19 18:43:15,564:INFO:           schemdraw: 0.15
2025-08-19 18:43:15,564:INFO:         statsmodels: 0.14.5
2025-08-19 18:43:15,564:INFO:              sktime: 0.26.0
2025-08-19 18:43:15,564:INFO:               tbats: 1.1.3
2025-08-19 18:43:15,564:INFO:            pmdarima: 2.0.4
2025-08-19 18:43:15,564:INFO:              psutil: 7.0.0
2025-08-19 18:43:15,564:INFO:          markupsafe: 3.0.2
2025-08-19 18:43:15,564:INFO:             pickle5: Not installed
2025-08-19 18:43:15,564:INFO:         cloudpickle: 3.1.1
2025-08-19 18:43:15,564:INFO:         deprecation: 2.1.0
2025-08-19 18:43:15,564:INFO:              xxhash: 3.5.0
2025-08-19 18:43:15,564:INFO:           wurlitzer: 3.1.1
2025-08-19 18:43:15,564:INFO:PyCaret optional dependencies:
2025-08-19 18:43:15,596:INFO:                shap: 0.48.0
2025-08-19 18:43:15,596:INFO:           interpret: Not installed
2025-08-19 18:43:15,596:INFO:                umap: Not installed
2025-08-19 18:43:15,596:INFO:     ydata_profiling: Not installed
2025-08-19 18:43:15,596:INFO:  explainerdashboard: Not installed
2025-08-19 18:43:15,596:INFO:             autoviz: Not installed
2025-08-19 18:43:15,597:INFO:           fairlearn: Not installed
2025-08-19 18:43:15,597:INFO:          deepchecks: Not installed
2025-08-19 18:43:15,597:INFO:             xgboost: 3.0.4
2025-08-19 18:43:15,597:INFO:            catboost: 1.2.8
2025-08-19 18:43:15,597:INFO:              kmodes: Not installed
2025-08-19 18:43:15,597:INFO:             mlxtend: 0.23.4
2025-08-19 18:43:15,597:INFO:       statsforecast: Not installed
2025-08-19 18:43:15,597:INFO:        tune_sklearn: Not installed
2025-08-19 18:43:15,597:INFO:                 ray: Not installed
2025-08-19 18:43:15,597:INFO:            hyperopt: Not installed
2025-08-19 18:43:15,597:INFO:              optuna: 4.4.0
2025-08-19 18:43:15,597:INFO:               skopt: Not installed
2025-08-19 18:43:15,597:INFO:              mlflow: Not installed
2025-08-19 18:43:15,597:INFO:              gradio: Not installed
2025-08-19 18:43:15,597:INFO:             fastapi: Not installed
2025-08-19 18:43:15,597:INFO:             uvicorn: Not installed
2025-08-19 18:43:15,597:INFO:              m2cgen: Not installed
2025-08-19 18:43:15,597:INFO:           evidently: Not installed
2025-08-19 18:43:15,597:INFO:               fugue: Not installed
2025-08-19 18:43:15,597:INFO:           streamlit: Not installed
2025-08-19 18:43:15,597:INFO:             prophet: Not installed
2025-08-19 18:43:15,597:INFO:None
2025-08-19 18:43:15,597:INFO:Set up data.
2025-08-19 18:43:15,609:INFO:Set up folding strategy.
2025-08-19 18:43:15,609:INFO:Set up train/test split.
2025-08-19 18:43:15,609:INFO:Set up data.
2025-08-19 18:43:16,144:INFO:Set up index.
2025-08-19 18:43:16,146:INFO:Assigning column types.
2025-08-19 18:43:16,150:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:43:16,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:43:16,186:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:43:16,208:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:43:16,210:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:43:16,292:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:43:16,293:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:43:16,306:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:43:16,307:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:43:16,307:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:43:16,327:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:43:16,339:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:43:16,340:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:43:16,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:43:16,373:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:43:16,374:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:43:16,374:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:43:16,407:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:43:16,408:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:43:16,446:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:43:16,447:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:43:16,455:INFO:Preparing preprocessing pipeline...
2025-08-19 18:43:16,458:INFO:Set up label encoding.
2025-08-19 18:43:16,458:INFO:Set up simple imputation.
2025-08-19 18:43:16,461:INFO:Set up encoding of categorical features.
2025-08-19 18:43:16,546:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:43:16,551:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:43:16,551:INFO:Creating final display dataframe.
2025-08-19 18:43:16,671:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              9069
2025-08-19 18:43:16,736:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:43:16,739:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:43:16,771:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:43:16,772:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:43:16,773:INFO:setup() successfully completed in 1.3s...............
2025-08-19 18:43:16,774:INFO:Initializing compare_models()
2025-08-19 18:43:16,774:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:43:16,774:INFO:Checking exceptions
2025-08-19 18:43:16,776:INFO:Preparing display monitor
2025-08-19 18:43:16,777:INFO:Initializing Logistic Regression
2025-08-19 18:43:16,777:INFO:Total runtime is 8.980433146158854e-07 minutes
2025-08-19 18:43:16,778:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:16,778:INFO:Initializing create_model()
2025-08-19 18:43:16,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:16,778:INFO:Checking exceptions
2025-08-19 18:43:16,778:INFO:Importing libraries
2025-08-19 18:43:16,778:INFO:Copying training dataset
2025-08-19 18:43:16,779:INFO:Defining folds
2025-08-19 18:43:16,779:INFO:Declaring metric variables
2025-08-19 18:43:16,779:INFO:Importing untrained model
2025-08-19 18:43:16,779:INFO:Logistic Regression Imported successfully
2025-08-19 18:43:16,779:INFO:Starting cross validation
2025-08-19 18:43:16,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:20,526:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:20,715:INFO:Calculating mean and std
2025-08-19 18:43:20,715:INFO:Creating metrics dataframe
2025-08-19 18:43:20,729:INFO:Uploading results into container
2025-08-19 18:43:20,730:INFO:Uploading model into container now
2025-08-19 18:43:20,731:INFO:_master_model_container: 1
2025-08-19 18:43:20,731:INFO:_display_container: 2
2025-08-19 18:43:20,732:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:43:20,732:INFO:create_model() successfully completed......................................
2025-08-19 18:43:20,914:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:20,914:INFO:Creating metrics dataframe
2025-08-19 18:43:20,915:INFO:Initializing K Neighbors Classifier
2025-08-19 18:43:20,915:INFO:Total runtime is 0.06896568139394124 minutes
2025-08-19 18:43:20,915:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:20,916:INFO:Initializing create_model()
2025-08-19 18:43:20,916:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:20,916:INFO:Checking exceptions
2025-08-19 18:43:20,916:INFO:Importing libraries
2025-08-19 18:43:20,916:INFO:Copying training dataset
2025-08-19 18:43:20,917:INFO:Defining folds
2025-08-19 18:43:20,917:INFO:Declaring metric variables
2025-08-19 18:43:20,917:INFO:Importing untrained model
2025-08-19 18:43:20,917:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:43:20,917:INFO:Starting cross validation
2025-08-19 18:43:20,918:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:21,075:INFO:Calculating mean and std
2025-08-19 18:43:21,075:INFO:Creating metrics dataframe
2025-08-19 18:43:21,076:INFO:Uploading results into container
2025-08-19 18:43:21,076:INFO:Uploading model into container now
2025-08-19 18:43:21,076:INFO:_master_model_container: 2
2025-08-19 18:43:21,076:INFO:_display_container: 2
2025-08-19 18:43:21,076:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:43:21,076:INFO:create_model() successfully completed......................................
2025-08-19 18:43:21,129:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:21,129:INFO:Creating metrics dataframe
2025-08-19 18:43:21,131:INFO:Initializing Naive Bayes
2025-08-19 18:43:21,131:INFO:Total runtime is 0.0725612998008728 minutes
2025-08-19 18:43:21,131:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:21,131:INFO:Initializing create_model()
2025-08-19 18:43:21,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:21,131:INFO:Checking exceptions
2025-08-19 18:43:21,131:INFO:Importing libraries
2025-08-19 18:43:21,131:INFO:Copying training dataset
2025-08-19 18:43:21,133:INFO:Defining folds
2025-08-19 18:43:21,133:INFO:Declaring metric variables
2025-08-19 18:43:21,133:INFO:Importing untrained model
2025-08-19 18:43:21,133:INFO:Naive Bayes Imported successfully
2025-08-19 18:43:21,133:INFO:Starting cross validation
2025-08-19 18:43:21,134:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:21,230:INFO:Calculating mean and std
2025-08-19 18:43:21,230:INFO:Creating metrics dataframe
2025-08-19 18:43:21,231:INFO:Uploading results into container
2025-08-19 18:43:21,232:INFO:Uploading model into container now
2025-08-19 18:43:21,232:INFO:_master_model_container: 3
2025-08-19 18:43:21,232:INFO:_display_container: 2
2025-08-19 18:43:21,232:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:43:21,232:INFO:create_model() successfully completed......................................
2025-08-19 18:43:21,301:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:21,302:INFO:Creating metrics dataframe
2025-08-19 18:43:21,303:INFO:Initializing Decision Tree Classifier
2025-08-19 18:43:21,303:INFO:Total runtime is 0.07542370160420735 minutes
2025-08-19 18:43:21,303:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:21,303:INFO:Initializing create_model()
2025-08-19 18:43:21,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:21,303:INFO:Checking exceptions
2025-08-19 18:43:21,303:INFO:Importing libraries
2025-08-19 18:43:21,303:INFO:Copying training dataset
2025-08-19 18:43:21,305:INFO:Defining folds
2025-08-19 18:43:21,305:INFO:Declaring metric variables
2025-08-19 18:43:21,305:INFO:Importing untrained model
2025-08-19 18:43:21,306:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:43:21,306:INFO:Starting cross validation
2025-08-19 18:43:21,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:21,471:INFO:Calculating mean and std
2025-08-19 18:43:21,472:INFO:Creating metrics dataframe
2025-08-19 18:43:21,473:INFO:Uploading results into container
2025-08-19 18:43:21,473:INFO:Uploading model into container now
2025-08-19 18:43:21,473:INFO:_master_model_container: 4
2025-08-19 18:43:21,473:INFO:_display_container: 2
2025-08-19 18:43:21,473:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:43:21,473:INFO:create_model() successfully completed......................................
2025-08-19 18:43:21,525:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:21,526:INFO:Creating metrics dataframe
2025-08-19 18:43:21,527:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:43:21,527:INFO:Total runtime is 0.07915513118108113 minutes
2025-08-19 18:43:21,527:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:21,527:INFO:Initializing create_model()
2025-08-19 18:43:21,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:21,527:INFO:Checking exceptions
2025-08-19 18:43:21,527:INFO:Importing libraries
2025-08-19 18:43:21,527:INFO:Copying training dataset
2025-08-19 18:43:21,529:INFO:Defining folds
2025-08-19 18:43:21,529:INFO:Declaring metric variables
2025-08-19 18:43:21,529:INFO:Importing untrained model
2025-08-19 18:43:21,529:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:43:21,529:INFO:Starting cross validation
2025-08-19 18:43:21,530:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:21,633:INFO:Calculating mean and std
2025-08-19 18:43:21,633:INFO:Creating metrics dataframe
2025-08-19 18:43:21,635:INFO:Uploading results into container
2025-08-19 18:43:21,635:INFO:Uploading model into container now
2025-08-19 18:43:21,635:INFO:_master_model_container: 5
2025-08-19 18:43:21,636:INFO:_display_container: 2
2025-08-19 18:43:21,636:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:43:21,636:INFO:create_model() successfully completed......................................
2025-08-19 18:43:21,688:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:21,688:INFO:Creating metrics dataframe
2025-08-19 18:43:21,689:INFO:Initializing Ridge Classifier
2025-08-19 18:43:21,689:INFO:Total runtime is 0.08186306556065877 minutes
2025-08-19 18:43:21,689:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:21,689:INFO:Initializing create_model()
2025-08-19 18:43:21,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:21,689:INFO:Checking exceptions
2025-08-19 18:43:21,689:INFO:Importing libraries
2025-08-19 18:43:21,689:INFO:Copying training dataset
2025-08-19 18:43:21,691:INFO:Defining folds
2025-08-19 18:43:21,691:INFO:Declaring metric variables
2025-08-19 18:43:21,691:INFO:Importing untrained model
2025-08-19 18:43:21,691:INFO:Ridge Classifier Imported successfully
2025-08-19 18:43:21,691:INFO:Starting cross validation
2025-08-19 18:43:21,692:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:21,757:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:21,838:INFO:Calculating mean and std
2025-08-19 18:43:21,838:INFO:Creating metrics dataframe
2025-08-19 18:43:21,839:INFO:Uploading results into container
2025-08-19 18:43:21,843:INFO:Uploading model into container now
2025-08-19 18:43:21,843:INFO:_master_model_container: 6
2025-08-19 18:43:21,843:INFO:_display_container: 2
2025-08-19 18:43:21,843:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:43:21,843:INFO:create_model() successfully completed......................................
2025-08-19 18:43:21,900:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:21,900:INFO:Creating metrics dataframe
2025-08-19 18:43:21,901:INFO:Initializing Random Forest Classifier
2025-08-19 18:43:21,901:INFO:Total runtime is 0.08539231618245442 minutes
2025-08-19 18:43:21,901:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:21,901:INFO:Initializing create_model()
2025-08-19 18:43:21,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:21,901:INFO:Checking exceptions
2025-08-19 18:43:21,901:INFO:Importing libraries
2025-08-19 18:43:21,901:INFO:Copying training dataset
2025-08-19 18:43:21,903:INFO:Defining folds
2025-08-19 18:43:21,903:INFO:Declaring metric variables
2025-08-19 18:43:21,903:INFO:Importing untrained model
2025-08-19 18:43:21,903:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:43:21,903:INFO:Starting cross validation
2025-08-19 18:43:21,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:22,621:INFO:Calculating mean and std
2025-08-19 18:43:22,622:INFO:Creating metrics dataframe
2025-08-19 18:43:22,623:INFO:Uploading results into container
2025-08-19 18:43:22,623:INFO:Uploading model into container now
2025-08-19 18:43:22,623:INFO:_master_model_container: 7
2025-08-19 18:43:22,623:INFO:_display_container: 2
2025-08-19 18:43:22,624:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:43:22,624:INFO:create_model() successfully completed......................................
2025-08-19 18:43:22,681:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:22,681:INFO:Creating metrics dataframe
2025-08-19 18:43:22,683:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:43:22,683:INFO:Total runtime is 0.0984208861986796 minutes
2025-08-19 18:43:22,683:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:22,683:INFO:Initializing create_model()
2025-08-19 18:43:22,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:22,683:INFO:Checking exceptions
2025-08-19 18:43:22,683:INFO:Importing libraries
2025-08-19 18:43:22,683:INFO:Copying training dataset
2025-08-19 18:43:22,684:INFO:Defining folds
2025-08-19 18:43:22,684:INFO:Declaring metric variables
2025-08-19 18:43:22,685:INFO:Importing untrained model
2025-08-19 18:43:22,685:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:43:22,685:INFO:Starting cross validation
2025-08-19 18:43:22,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:22,717:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,717:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,720:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,722:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,732:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,742:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,748:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,765:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,765:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,771:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:43:22,790:INFO:Calculating mean and std
2025-08-19 18:43:22,790:INFO:Creating metrics dataframe
2025-08-19 18:43:22,791:INFO:Uploading results into container
2025-08-19 18:43:22,792:INFO:Uploading model into container now
2025-08-19 18:43:22,792:INFO:_master_model_container: 8
2025-08-19 18:43:22,792:INFO:_display_container: 2
2025-08-19 18:43:22,792:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:43:22,792:INFO:create_model() successfully completed......................................
2025-08-19 18:43:22,846:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:22,846:INFO:Creating metrics dataframe
2025-08-19 18:43:22,848:INFO:Initializing Ada Boost Classifier
2025-08-19 18:43:22,848:INFO:Total runtime is 0.10117112000783283 minutes
2025-08-19 18:43:22,848:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:22,848:INFO:Initializing create_model()
2025-08-19 18:43:22,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:22,848:INFO:Checking exceptions
2025-08-19 18:43:22,848:INFO:Importing libraries
2025-08-19 18:43:22,848:INFO:Copying training dataset
2025-08-19 18:43:22,850:INFO:Defining folds
2025-08-19 18:43:22,850:INFO:Declaring metric variables
2025-08-19 18:43:22,850:INFO:Importing untrained model
2025-08-19 18:43:22,850:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:43:22,850:INFO:Starting cross validation
2025-08-19 18:43:22,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:22,881:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:22,882:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:22,885:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:22,901:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:22,925:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:22,930:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:22,934:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:22,935:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:23,113:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:23,125:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:43:23,254:INFO:Calculating mean and std
2025-08-19 18:43:23,254:INFO:Creating metrics dataframe
2025-08-19 18:43:23,255:INFO:Uploading results into container
2025-08-19 18:43:23,255:INFO:Uploading model into container now
2025-08-19 18:43:23,255:INFO:_master_model_container: 9
2025-08-19 18:43:23,255:INFO:_display_container: 2
2025-08-19 18:43:23,256:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:43:23,256:INFO:create_model() successfully completed......................................
2025-08-19 18:43:23,310:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:23,310:INFO:Creating metrics dataframe
2025-08-19 18:43:23,311:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:43:23,312:INFO:Total runtime is 0.10890223185221354 minutes
2025-08-19 18:43:23,312:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:23,312:INFO:Initializing create_model()
2025-08-19 18:43:23,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:23,312:INFO:Checking exceptions
2025-08-19 18:43:23,312:INFO:Importing libraries
2025-08-19 18:43:23,312:INFO:Copying training dataset
2025-08-19 18:43:23,314:INFO:Defining folds
2025-08-19 18:43:23,314:INFO:Declaring metric variables
2025-08-19 18:43:23,314:INFO:Importing untrained model
2025-08-19 18:43:23,314:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:43:23,314:INFO:Starting cross validation
2025-08-19 18:43:23,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:24,442:INFO:Calculating mean and std
2025-08-19 18:43:24,443:INFO:Creating metrics dataframe
2025-08-19 18:43:24,444:INFO:Uploading results into container
2025-08-19 18:43:24,444:INFO:Uploading model into container now
2025-08-19 18:43:24,444:INFO:_master_model_container: 10
2025-08-19 18:43:24,444:INFO:_display_container: 2
2025-08-19 18:43:24,445:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:43:24,445:INFO:create_model() successfully completed......................................
2025-08-19 18:43:24,507:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:24,507:INFO:Creating metrics dataframe
2025-08-19 18:43:24,508:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:43:24,508:INFO:Total runtime is 0.1288490136464437 minutes
2025-08-19 18:43:24,508:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:24,509:INFO:Initializing create_model()
2025-08-19 18:43:24,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:24,509:INFO:Checking exceptions
2025-08-19 18:43:24,509:INFO:Importing libraries
2025-08-19 18:43:24,509:INFO:Copying training dataset
2025-08-19 18:43:24,510:INFO:Defining folds
2025-08-19 18:43:24,510:INFO:Declaring metric variables
2025-08-19 18:43:24,510:INFO:Importing untrained model
2025-08-19 18:43:24,510:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:43:24,510:INFO:Starting cross validation
2025-08-19 18:43:24,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:24,569:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:24,616:INFO:Calculating mean and std
2025-08-19 18:43:24,616:INFO:Creating metrics dataframe
2025-08-19 18:43:24,617:INFO:Uploading results into container
2025-08-19 18:43:24,617:INFO:Uploading model into container now
2025-08-19 18:43:24,617:INFO:_master_model_container: 11
2025-08-19 18:43:24,617:INFO:_display_container: 2
2025-08-19 18:43:24,617:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:43:24,617:INFO:create_model() successfully completed......................................
2025-08-19 18:43:24,670:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:24,671:INFO:Creating metrics dataframe
2025-08-19 18:43:24,672:INFO:Initializing Extra Trees Classifier
2025-08-19 18:43:24,672:INFO:Total runtime is 0.13157716989517212 minutes
2025-08-19 18:43:24,672:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:24,672:INFO:Initializing create_model()
2025-08-19 18:43:24,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:24,672:INFO:Checking exceptions
2025-08-19 18:43:24,672:INFO:Importing libraries
2025-08-19 18:43:24,672:INFO:Copying training dataset
2025-08-19 18:43:24,674:INFO:Defining folds
2025-08-19 18:43:24,674:INFO:Declaring metric variables
2025-08-19 18:43:24,674:INFO:Importing untrained model
2025-08-19 18:43:24,674:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:43:24,674:INFO:Starting cross validation
2025-08-19 18:43:24,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:25,054:INFO:Calculating mean and std
2025-08-19 18:43:25,054:INFO:Creating metrics dataframe
2025-08-19 18:43:25,055:INFO:Uploading results into container
2025-08-19 18:43:25,055:INFO:Uploading model into container now
2025-08-19 18:43:25,055:INFO:_master_model_container: 12
2025-08-19 18:43:25,055:INFO:_display_container: 2
2025-08-19 18:43:25,056:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:43:25,056:INFO:create_model() successfully completed......................................
2025-08-19 18:43:25,118:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:25,118:INFO:Creating metrics dataframe
2025-08-19 18:43:25,119:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:43:25,119:INFO:Total runtime is 0.1390298326810201 minutes
2025-08-19 18:43:25,119:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:25,119:INFO:Initializing create_model()
2025-08-19 18:43:25,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:25,119:INFO:Checking exceptions
2025-08-19 18:43:25,119:INFO:Importing libraries
2025-08-19 18:43:25,120:INFO:Copying training dataset
2025-08-19 18:43:25,121:INFO:Defining folds
2025-08-19 18:43:25,121:INFO:Declaring metric variables
2025-08-19 18:43:25,122:INFO:Importing untrained model
2025-08-19 18:43:25,122:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:43:25,122:INFO:Starting cross validation
2025-08-19 18:43:25,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:25,339:INFO:Calculating mean and std
2025-08-19 18:43:25,340:INFO:Creating metrics dataframe
2025-08-19 18:43:25,341:INFO:Uploading results into container
2025-08-19 18:43:25,341:INFO:Uploading model into container now
2025-08-19 18:43:25,341:INFO:_master_model_container: 13
2025-08-19 18:43:25,341:INFO:_display_container: 2
2025-08-19 18:43:25,341:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:43:25,342:INFO:create_model() successfully completed......................................
2025-08-19 18:43:25,478:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:25,479:INFO:Creating metrics dataframe
2025-08-19 18:43:25,480:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:43:25,480:INFO:Total runtime is 0.14504915078481037 minutes
2025-08-19 18:43:25,480:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:25,481:INFO:Initializing create_model()
2025-08-19 18:43:25,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:25,481:INFO:Checking exceptions
2025-08-19 18:43:25,481:INFO:Importing libraries
2025-08-19 18:43:25,481:INFO:Copying training dataset
2025-08-19 18:43:25,482:INFO:Defining folds
2025-08-19 18:43:25,482:INFO:Declaring metric variables
2025-08-19 18:43:25,482:INFO:Importing untrained model
2025-08-19 18:43:25,483:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:43:25,483:INFO:Starting cross validation
2025-08-19 18:43:25,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:29,136:INFO:Calculating mean and std
2025-08-19 18:43:29,136:INFO:Creating metrics dataframe
2025-08-19 18:43:29,138:INFO:Uploading results into container
2025-08-19 18:43:29,138:INFO:Uploading model into container now
2025-08-19 18:43:29,138:INFO:_master_model_container: 14
2025-08-19 18:43:29,138:INFO:_display_container: 2
2025-08-19 18:43:29,139:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:43:29,139:INFO:create_model() successfully completed......................................
2025-08-19 18:43:29,204:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:29,204:INFO:Creating metrics dataframe
2025-08-19 18:43:29,205:INFO:Initializing CatBoost Classifier
2025-08-19 18:43:29,205:INFO:Total runtime is 0.2071327805519104 minutes
2025-08-19 18:43:29,205:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:29,206:INFO:Initializing create_model()
2025-08-19 18:43:29,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:29,206:INFO:Checking exceptions
2025-08-19 18:43:29,206:INFO:Importing libraries
2025-08-19 18:43:29,206:INFO:Copying training dataset
2025-08-19 18:43:29,208:INFO:Defining folds
2025-08-19 18:43:29,208:INFO:Declaring metric variables
2025-08-19 18:43:29,208:INFO:Importing untrained model
2025-08-19 18:43:29,208:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:43:29,209:INFO:Starting cross validation
2025-08-19 18:43:29,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:39,955:INFO:Calculating mean and std
2025-08-19 18:43:39,971:INFO:Creating metrics dataframe
2025-08-19 18:43:39,974:INFO:Uploading results into container
2025-08-19 18:43:39,975:INFO:Uploading model into container now
2025-08-19 18:43:39,975:INFO:_master_model_container: 15
2025-08-19 18:43:39,975:INFO:_display_container: 2
2025-08-19 18:43:39,975:INFO:<catboost.core.CatBoostClassifier object at 0x309919030>
2025-08-19 18:43:39,975:INFO:create_model() successfully completed......................................
2025-08-19 18:43:40,059:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:40,059:INFO:Creating metrics dataframe
2025-08-19 18:43:40,060:INFO:Initializing Dummy Classifier
2025-08-19 18:43:40,060:INFO:Total runtime is 0.38804720242818197 minutes
2025-08-19 18:43:40,060:INFO:SubProcess create_model() called ==================================
2025-08-19 18:43:40,061:INFO:Initializing create_model()
2025-08-19 18:43:40,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e7b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:40,061:INFO:Checking exceptions
2025-08-19 18:43:40,061:INFO:Importing libraries
2025-08-19 18:43:40,061:INFO:Copying training dataset
2025-08-19 18:43:40,062:INFO:Defining folds
2025-08-19 18:43:40,063:INFO:Declaring metric variables
2025-08-19 18:43:40,063:INFO:Importing untrained model
2025-08-19 18:43:40,063:INFO:Dummy Classifier Imported successfully
2025-08-19 18:43:40,063:INFO:Starting cross validation
2025-08-19 18:43:40,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:40,112:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,120:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,123:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,124:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,128:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,144:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,158:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,166:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,175:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,206:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:43:40,215:INFO:Calculating mean and std
2025-08-19 18:43:40,215:INFO:Creating metrics dataframe
2025-08-19 18:43:40,216:INFO:Uploading results into container
2025-08-19 18:43:40,216:INFO:Uploading model into container now
2025-08-19 18:43:40,216:INFO:_master_model_container: 16
2025-08-19 18:43:40,217:INFO:_display_container: 2
2025-08-19 18:43:40,217:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:43:40,217:INFO:create_model() successfully completed......................................
2025-08-19 18:43:40,273:INFO:SubProcess create_model() end ==================================
2025-08-19 18:43:40,273:INFO:Creating metrics dataframe
2025-08-19 18:43:40,275:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:43:40,276:INFO:Initializing create_model()
2025-08-19 18:43:40,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:40,276:INFO:Checking exceptions
2025-08-19 18:43:40,277:INFO:Importing libraries
2025-08-19 18:43:40,277:INFO:Copying training dataset
2025-08-19 18:43:40,278:INFO:Defining folds
2025-08-19 18:43:40,278:INFO:Declaring metric variables
2025-08-19 18:43:40,278:INFO:Importing untrained model
2025-08-19 18:43:40,278:INFO:Declaring custom model
2025-08-19 18:43:40,278:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:43:40,279:INFO:Cross validation set to False
2025-08-19 18:43:40,279:INFO:Fitting Model
2025-08-19 18:43:40,413:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:43:40,413:INFO:create_model() successfully completed......................................
2025-08-19 18:43:40,473:INFO:_master_model_container: 16
2025-08-19 18:43:40,473:INFO:_display_container: 2
2025-08-19 18:43:40,474:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:43:40,474:INFO:compare_models() successfully completed......................................
2025-08-19 18:43:40,474:INFO:Initializing create_model()
2025-08-19 18:43:40,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:40,474:INFO:Checking exceptions
2025-08-19 18:43:40,475:INFO:Importing libraries
2025-08-19 18:43:40,475:INFO:Copying training dataset
2025-08-19 18:43:40,477:INFO:Defining folds
2025-08-19 18:43:40,477:INFO:Declaring metric variables
2025-08-19 18:43:40,477:INFO:Importing untrained model
2025-08-19 18:43:40,477:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:43:40,477:INFO:Starting cross validation
2025-08-19 18:43:40,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:41,175:INFO:Calculating mean and std
2025-08-19 18:43:41,176:INFO:Creating metrics dataframe
2025-08-19 18:43:41,177:INFO:Finalizing model
2025-08-19 18:43:41,291:INFO:Uploading results into container
2025-08-19 18:43:41,291:INFO:Uploading model into container now
2025-08-19 18:43:41,291:INFO:_master_model_container: 17
2025-08-19 18:43:41,291:INFO:_display_container: 3
2025-08-19 18:43:41,291:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:43:41,291:INFO:create_model() successfully completed......................................
2025-08-19 18:43:41,346:INFO:Initializing finalize_model()
2025-08-19 18:43:41,346:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:43:41,346:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:43:41,347:INFO:Initializing create_model()
2025-08-19 18:43:41,347:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:41,347:INFO:Checking exceptions
2025-08-19 18:43:41,348:INFO:Importing libraries
2025-08-19 18:43:41,348:INFO:Copying training dataset
2025-08-19 18:43:41,348:INFO:Defining folds
2025-08-19 18:43:41,348:INFO:Declaring metric variables
2025-08-19 18:43:41,348:INFO:Importing untrained model
2025-08-19 18:43:41,348:INFO:Declaring custom model
2025-08-19 18:43:41,349:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:43:41,349:INFO:Cross validation set to False
2025-08-19 18:43:41,349:INFO:Fitting Model
2025-08-19 18:43:41,472:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:43:41,472:INFO:create_model() successfully completed......................................
2025-08-19 18:43:41,526:INFO:_master_model_container: 17
2025-08-19 18:43:41,527:INFO:_display_container: 3
2025-08-19 18:43:41,531:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:43:41,531:INFO:finalize_model() successfully completed......................................
2025-08-19 18:43:41,589:INFO:Initializing predict_model()
2025-08-19 18:43:41,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:43:41,589:INFO:Checking exceptions
2025-08-19 18:43:41,589:INFO:Preloading libraries
2025-08-19 18:43:41,589:INFO:Set up data.
2025-08-19 18:43:41,592:INFO:Set up index.
2025-08-19 18:43:41,692:INFO:Initializing create_model()
2025-08-19 18:43:41,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:41,692:INFO:Checking exceptions
2025-08-19 18:43:41,693:INFO:Importing libraries
2025-08-19 18:43:41,693:INFO:Copying training dataset
2025-08-19 18:43:41,695:INFO:Defining folds
2025-08-19 18:43:41,695:INFO:Declaring metric variables
2025-08-19 18:43:41,695:INFO:Importing untrained model
2025-08-19 18:43:41,695:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:43:41,695:INFO:Starting cross validation
2025-08-19 18:43:41,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:51,014:INFO:Calculating mean and std
2025-08-19 18:43:51,015:INFO:Creating metrics dataframe
2025-08-19 18:43:51,019:INFO:Finalizing model
2025-08-19 18:43:52,565:INFO:Uploading results into container
2025-08-19 18:43:52,566:INFO:Uploading model into container now
2025-08-19 18:43:52,566:INFO:_master_model_container: 18
2025-08-19 18:43:52,566:INFO:_display_container: 5
2025-08-19 18:43:52,566:INFO:<catboost.core.CatBoostClassifier object at 0x3076d7640>
2025-08-19 18:43:52,566:INFO:create_model() successfully completed......................................
2025-08-19 18:43:52,688:INFO:Initializing finalize_model()
2025-08-19 18:43:52,688:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=<catboost.core.CatBoostClassifier object at 0x3076d7640>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:43:52,691:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x3076d7640>
2025-08-19 18:43:52,693:INFO:Initializing create_model()
2025-08-19 18:43:52,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=<catboost.core.CatBoostClassifier object at 0x3076d7640>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:52,693:INFO:Checking exceptions
2025-08-19 18:43:52,699:INFO:Importing libraries
2025-08-19 18:43:52,699:INFO:Copying training dataset
2025-08-19 18:43:52,700:INFO:Defining folds
2025-08-19 18:43:52,700:INFO:Declaring metric variables
2025-08-19 18:43:52,700:INFO:Importing untrained model
2025-08-19 18:43:52,700:INFO:Declaring custom model
2025-08-19 18:43:52,700:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:43:52,702:INFO:Cross validation set to False
2025-08-19 18:43:52,702:INFO:Fitting Model
2025-08-19 18:43:54,195:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307e12470>)],
         verbose=False)
2025-08-19 18:43:54,195:INFO:create_model() successfully completed......................................
2025-08-19 18:43:54,248:INFO:_master_model_container: 18
2025-08-19 18:43:54,248:INFO:_display_container: 5
2025-08-19 18:43:54,252:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307e12470>)],
         verbose=False)
2025-08-19 18:43:54,252:INFO:finalize_model() successfully completed......................................
2025-08-19 18:43:54,309:INFO:Initializing predict_model()
2025-08-19 18:43:54,309:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307e12470>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:43:54,309:INFO:Checking exceptions
2025-08-19 18:43:54,309:INFO:Preloading libraries
2025-08-19 18:43:54,309:INFO:Set up data.
2025-08-19 18:43:54,312:INFO:Set up index.
2025-08-19 18:43:54,386:INFO:Initializing create_model()
2025-08-19 18:43:54,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:54,386:INFO:Checking exceptions
2025-08-19 18:43:54,387:INFO:Importing libraries
2025-08-19 18:43:54,387:INFO:Copying training dataset
2025-08-19 18:43:54,389:INFO:Defining folds
2025-08-19 18:43:54,389:INFO:Declaring metric variables
2025-08-19 18:43:54,389:INFO:Importing untrained model
2025-08-19 18:43:54,389:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:43:54,390:INFO:Starting cross validation
2025-08-19 18:43:54,390:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:55,430:INFO:Calculating mean and std
2025-08-19 18:43:55,430:INFO:Creating metrics dataframe
2025-08-19 18:43:55,431:INFO:Finalizing model
2025-08-19 18:43:55,885:INFO:Uploading results into container
2025-08-19 18:43:55,885:INFO:Uploading model into container now
2025-08-19 18:43:55,885:INFO:_master_model_container: 19
2025-08-19 18:43:55,885:INFO:_display_container: 7
2025-08-19 18:43:55,886:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:43:55,886:INFO:create_model() successfully completed......................................
2025-08-19 18:43:55,938:INFO:Initializing finalize_model()
2025-08-19 18:43:55,939:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:43:55,939:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:43:55,940:INFO:Initializing create_model()
2025-08-19 18:43:55,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:55,940:INFO:Checking exceptions
2025-08-19 18:43:55,941:INFO:Importing libraries
2025-08-19 18:43:55,941:INFO:Copying training dataset
2025-08-19 18:43:55,941:INFO:Defining folds
2025-08-19 18:43:55,941:INFO:Declaring metric variables
2025-08-19 18:43:55,941:INFO:Importing untrained model
2025-08-19 18:43:55,941:INFO:Declaring custom model
2025-08-19 18:43:55,941:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:43:55,942:INFO:Cross validation set to False
2025-08-19 18:43:55,942:INFO:Fitting Model
2025-08-19 18:43:56,521:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:43:56,521:INFO:create_model() successfully completed......................................
2025-08-19 18:43:56,585:INFO:_master_model_container: 19
2025-08-19 18:43:56,585:INFO:_display_container: 7
2025-08-19 18:43:56,589:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:43:56,589:INFO:finalize_model() successfully completed......................................
2025-08-19 18:43:56,651:INFO:Initializing predict_model()
2025-08-19 18:43:56,651:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:43:56,651:INFO:Checking exceptions
2025-08-19 18:43:56,651:INFO:Preloading libraries
2025-08-19 18:43:56,651:INFO:Set up data.
2025-08-19 18:43:56,655:INFO:Set up index.
2025-08-19 18:43:56,728:INFO:Initializing create_model()
2025-08-19 18:43:56,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:56,728:INFO:Checking exceptions
2025-08-19 18:43:56,729:INFO:Importing libraries
2025-08-19 18:43:56,729:INFO:Copying training dataset
2025-08-19 18:43:56,730:INFO:Defining folds
2025-08-19 18:43:56,730:INFO:Declaring metric variables
2025-08-19 18:43:56,730:INFO:Importing untrained model
2025-08-19 18:43:56,731:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:43:56,731:INFO:Starting cross validation
2025-08-19 18:43:56,731:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:56,952:INFO:Calculating mean and std
2025-08-19 18:43:56,952:INFO:Creating metrics dataframe
2025-08-19 18:43:56,953:INFO:Finalizing model
2025-08-19 18:43:57,103:INFO:Uploading results into container
2025-08-19 18:43:57,104:INFO:Uploading model into container now
2025-08-19 18:43:57,104:INFO:_master_model_container: 20
2025-08-19 18:43:57,104:INFO:_display_container: 9
2025-08-19 18:43:57,104:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:43:57,104:INFO:create_model() successfully completed......................................
2025-08-19 18:43:57,159:INFO:Initializing finalize_model()
2025-08-19 18:43:57,159:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:43:57,159:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:43:57,160:INFO:Initializing create_model()
2025-08-19 18:43:57,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:57,160:INFO:Checking exceptions
2025-08-19 18:43:57,161:INFO:Importing libraries
2025-08-19 18:43:57,161:INFO:Copying training dataset
2025-08-19 18:43:57,161:INFO:Defining folds
2025-08-19 18:43:57,161:INFO:Declaring metric variables
2025-08-19 18:43:57,161:INFO:Importing untrained model
2025-08-19 18:43:57,161:INFO:Declaring custom model
2025-08-19 18:43:57,162:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:43:57,162:INFO:Cross validation set to False
2025-08-19 18:43:57,162:INFO:Fitting Model
2025-08-19 18:43:57,320:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:43:57,320:INFO:create_model() successfully completed......................................
2025-08-19 18:43:57,375:INFO:_master_model_container: 20
2025-08-19 18:43:57,375:INFO:_display_container: 9
2025-08-19 18:43:57,380:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:43:57,380:INFO:finalize_model() successfully completed......................................
2025-08-19 18:43:57,439:INFO:Initializing predict_model()
2025-08-19 18:43:57,439:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:43:57,439:INFO:Checking exceptions
2025-08-19 18:43:57,439:INFO:Preloading libraries
2025-08-19 18:43:57,439:INFO:Set up data.
2025-08-19 18:43:57,442:INFO:Set up index.
2025-08-19 18:43:57,514:INFO:Initializing create_model()
2025-08-19 18:43:57,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:57,514:INFO:Checking exceptions
2025-08-19 18:43:57,515:INFO:Importing libraries
2025-08-19 18:43:57,515:INFO:Copying training dataset
2025-08-19 18:43:57,517:INFO:Defining folds
2025-08-19 18:43:57,517:INFO:Declaring metric variables
2025-08-19 18:43:57,517:INFO:Importing untrained model
2025-08-19 18:43:57,517:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:43:57,517:INFO:Starting cross validation
2025-08-19 18:43:57,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:43:57,638:INFO:Calculating mean and std
2025-08-19 18:43:57,639:INFO:Creating metrics dataframe
2025-08-19 18:43:57,640:INFO:Finalizing model
2025-08-19 18:43:57,674:INFO:Uploading results into container
2025-08-19 18:43:57,675:INFO:Uploading model into container now
2025-08-19 18:43:57,675:INFO:_master_model_container: 21
2025-08-19 18:43:57,675:INFO:_display_container: 11
2025-08-19 18:43:57,675:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:43:57,675:INFO:create_model() successfully completed......................................
2025-08-19 18:43:57,735:INFO:Initializing finalize_model()
2025-08-19 18:43:57,735:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:43:57,735:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:43:57,737:INFO:Initializing create_model()
2025-08-19 18:43:57,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:57,737:INFO:Checking exceptions
2025-08-19 18:43:57,738:INFO:Importing libraries
2025-08-19 18:43:57,738:INFO:Copying training dataset
2025-08-19 18:43:57,738:INFO:Defining folds
2025-08-19 18:43:57,738:INFO:Declaring metric variables
2025-08-19 18:43:57,738:INFO:Importing untrained model
2025-08-19 18:43:57,738:INFO:Declaring custom model
2025-08-19 18:43:57,738:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:43:57,739:INFO:Cross validation set to False
2025-08-19 18:43:57,739:INFO:Fitting Model
2025-08-19 18:43:57,779:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:43:57,780:INFO:create_model() successfully completed......................................
2025-08-19 18:43:57,836:INFO:_master_model_container: 21
2025-08-19 18:43:57,836:INFO:_display_container: 11
2025-08-19 18:43:57,840:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:43:57,840:INFO:finalize_model() successfully completed......................................
2025-08-19 18:43:57,899:INFO:Initializing predict_model()
2025-08-19 18:43:57,899:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:43:57,899:INFO:Checking exceptions
2025-08-19 18:43:57,899:INFO:Preloading libraries
2025-08-19 18:43:57,899:INFO:Set up data.
2025-08-19 18:43:57,902:INFO:Set up index.
2025-08-19 18:43:57,971:INFO:Initializing create_model()
2025-08-19 18:43:57,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:43:57,971:INFO:Checking exceptions
2025-08-19 18:43:57,972:INFO:Importing libraries
2025-08-19 18:43:57,972:INFO:Copying training dataset
2025-08-19 18:43:57,973:INFO:Defining folds
2025-08-19 18:43:57,973:INFO:Declaring metric variables
2025-08-19 18:43:57,974:INFO:Importing untrained model
2025-08-19 18:43:57,974:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:43:57,974:INFO:Starting cross validation
2025-08-19 18:43:57,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:01,090:INFO:Calculating mean and std
2025-08-19 18:44:01,090:INFO:Creating metrics dataframe
2025-08-19 18:44:01,092:INFO:Finalizing model
2025-08-19 18:44:01,117:INFO:[LightGBM] [Info] Number of positive: 474, number of negative: 294
2025-08-19 18:44:01,118:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000372 seconds.
2025-08-19 18:44:01,118:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:44:01,118:INFO:[LightGBM] [Info] Total Bins 6377
2025-08-19 18:44:01,118:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:44:01,119:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.617188 -> initscore=0.477628
2025-08-19 18:44:01,119:INFO:[LightGBM] [Info] Start training from score 0.477628
2025-08-19 18:44:01,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,611:INFO:Uploading results into container
2025-08-19 18:44:01,611:INFO:Uploading model into container now
2025-08-19 18:44:01,611:INFO:_master_model_container: 22
2025-08-19 18:44:01,611:INFO:_display_container: 13
2025-08-19 18:44:01,612:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:44:01,612:INFO:create_model() successfully completed......................................
2025-08-19 18:44:01,681:INFO:Initializing finalize_model()
2025-08-19 18:44:01,681:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:01,681:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:44:01,682:INFO:Initializing create_model()
2025-08-19 18:44:01,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:01,683:INFO:Checking exceptions
2025-08-19 18:44:01,684:INFO:Importing libraries
2025-08-19 18:44:01,684:INFO:Copying training dataset
2025-08-19 18:44:01,684:INFO:Defining folds
2025-08-19 18:44:01,684:INFO:Declaring metric variables
2025-08-19 18:44:01,684:INFO:Importing untrained model
2025-08-19 18:44:01,684:INFO:Declaring custom model
2025-08-19 18:44:01,685:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:44:01,686:INFO:Cross validation set to False
2025-08-19 18:44:01,686:INFO:Fitting Model
2025-08-19 18:44:01,707:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:44:01,707:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000373 seconds.
2025-08-19 18:44:01,707:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:44:01,707:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:44:01,708:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:44:01,708:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:44:01,708:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:44:01,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:01,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:02,241:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:44:02,241:INFO:create_model() successfully completed......................................
2025-08-19 18:44:02,302:INFO:_master_model_container: 22
2025-08-19 18:44:02,302:INFO:_display_container: 13
2025-08-19 18:44:02,306:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:44:02,307:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:02,367:INFO:Initializing predict_model()
2025-08-19 18:44:02,367:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:02,367:INFO:Checking exceptions
2025-08-19 18:44:02,367:INFO:Preloading libraries
2025-08-19 18:44:02,368:INFO:Set up data.
2025-08-19 18:44:02,371:INFO:Set up index.
2025-08-19 18:44:02,444:INFO:Initializing create_model()
2025-08-19 18:44:02,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:02,445:INFO:Checking exceptions
2025-08-19 18:44:02,445:INFO:Importing libraries
2025-08-19 18:44:02,445:INFO:Copying training dataset
2025-08-19 18:44:02,447:INFO:Defining folds
2025-08-19 18:44:02,447:INFO:Declaring metric variables
2025-08-19 18:44:02,447:INFO:Importing untrained model
2025-08-19 18:44:02,447:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:44:02,447:INFO:Starting cross validation
2025-08-19 18:44:02,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:02,500:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,516:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,525:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,554:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,576:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,592:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,623:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,626:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,748:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,753:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:02,900:INFO:Calculating mean and std
2025-08-19 18:44:02,900:INFO:Creating metrics dataframe
2025-08-19 18:44:02,901:INFO:Finalizing model
2025-08-19 18:44:02,920:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:03,032:INFO:Uploading results into container
2025-08-19 18:44:03,033:INFO:Uploading model into container now
2025-08-19 18:44:03,033:INFO:_master_model_container: 23
2025-08-19 18:44:03,033:INFO:_display_container: 15
2025-08-19 18:44:03,033:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:44:03,033:INFO:create_model() successfully completed......................................
2025-08-19 18:44:03,090:INFO:Initializing finalize_model()
2025-08-19 18:44:03,090:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:03,090:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:44:03,091:INFO:Initializing create_model()
2025-08-19 18:44:03,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:03,091:INFO:Checking exceptions
2025-08-19 18:44:03,092:INFO:Importing libraries
2025-08-19 18:44:03,092:INFO:Copying training dataset
2025-08-19 18:44:03,092:INFO:Defining folds
2025-08-19 18:44:03,092:INFO:Declaring metric variables
2025-08-19 18:44:03,092:INFO:Importing untrained model
2025-08-19 18:44:03,092:INFO:Declaring custom model
2025-08-19 18:44:03,092:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:44:03,093:INFO:Cross validation set to False
2025-08-19 18:44:03,093:INFO:Fitting Model
2025-08-19 18:44:03,111:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:03,243:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:44:03,243:INFO:create_model() successfully completed......................................
2025-08-19 18:44:03,308:INFO:_master_model_container: 23
2025-08-19 18:44:03,309:INFO:_display_container: 15
2025-08-19 18:44:03,313:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:44:03,313:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:03,391:INFO:Initializing predict_model()
2025-08-19 18:44:03,392:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:03,392:INFO:Checking exceptions
2025-08-19 18:44:03,392:INFO:Preloading libraries
2025-08-19 18:44:03,392:INFO:Set up data.
2025-08-19 18:44:03,395:INFO:Set up index.
2025-08-19 18:44:03,486:INFO:Initializing create_model()
2025-08-19 18:44:03,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:03,486:INFO:Checking exceptions
2025-08-19 18:44:03,488:INFO:Importing libraries
2025-08-19 18:44:03,488:INFO:Copying training dataset
2025-08-19 18:44:03,489:INFO:Defining folds
2025-08-19 18:44:03,490:INFO:Declaring metric variables
2025-08-19 18:44:03,490:INFO:Importing untrained model
2025-08-19 18:44:03,490:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:44:03,490:INFO:Starting cross validation
2025-08-19 18:44:03,491:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:03,878:INFO:Calculating mean and std
2025-08-19 18:44:03,879:INFO:Creating metrics dataframe
2025-08-19 18:44:03,880:INFO:Finalizing model
2025-08-19 18:44:03,962:INFO:Uploading results into container
2025-08-19 18:44:03,963:INFO:Uploading model into container now
2025-08-19 18:44:03,963:INFO:_master_model_container: 24
2025-08-19 18:44:03,963:INFO:_display_container: 17
2025-08-19 18:44:03,963:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:44:03,963:INFO:create_model() successfully completed......................................
2025-08-19 18:44:04,018:INFO:Initializing finalize_model()
2025-08-19 18:44:04,018:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:04,018:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:44:04,019:INFO:Initializing create_model()
2025-08-19 18:44:04,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:04,019:INFO:Checking exceptions
2025-08-19 18:44:04,020:INFO:Importing libraries
2025-08-19 18:44:04,020:INFO:Copying training dataset
2025-08-19 18:44:04,020:INFO:Defining folds
2025-08-19 18:44:04,020:INFO:Declaring metric variables
2025-08-19 18:44:04,020:INFO:Importing untrained model
2025-08-19 18:44:04,020:INFO:Declaring custom model
2025-08-19 18:44:04,020:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:44:04,021:INFO:Cross validation set to False
2025-08-19 18:44:04,021:INFO:Fitting Model
2025-08-19 18:44:04,110:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:44:04,110:INFO:create_model() successfully completed......................................
2025-08-19 18:44:04,164:INFO:_master_model_container: 24
2025-08-19 18:44:04,164:INFO:_display_container: 17
2025-08-19 18:44:04,168:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:44:04,168:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:04,225:INFO:Initializing predict_model()
2025-08-19 18:44:04,225:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:04,225:INFO:Checking exceptions
2025-08-19 18:44:04,225:INFO:Preloading libraries
2025-08-19 18:44:04,225:INFO:Set up data.
2025-08-19 18:44:04,229:INFO:Set up index.
2025-08-19 18:44:04,323:INFO:Initializing create_model()
2025-08-19 18:44:04,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:04,324:INFO:Checking exceptions
2025-08-19 18:44:04,324:INFO:Importing libraries
2025-08-19 18:44:04,325:INFO:Copying training dataset
2025-08-19 18:44:04,326:INFO:Defining folds
2025-08-19 18:44:04,326:INFO:Declaring metric variables
2025-08-19 18:44:04,326:INFO:Importing untrained model
2025-08-19 18:44:04,326:INFO:Dummy Classifier Imported successfully
2025-08-19 18:44:04,326:INFO:Starting cross validation
2025-08-19 18:44:04,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:04,369:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,370:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,372:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,384:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,393:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,398:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,404:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,407:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,411:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,414:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,419:INFO:Calculating mean and std
2025-08-19 18:44:04,420:INFO:Creating metrics dataframe
2025-08-19 18:44:04,421:INFO:Finalizing model
2025-08-19 18:44:04,439:INFO:Uploading results into container
2025-08-19 18:44:04,439:INFO:Uploading model into container now
2025-08-19 18:44:04,439:INFO:_master_model_container: 25
2025-08-19 18:44:04,439:INFO:_display_container: 19
2025-08-19 18:44:04,440:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:44:04,440:INFO:create_model() successfully completed......................................
2025-08-19 18:44:04,494:INFO:Initializing finalize_model()
2025-08-19 18:44:04,494:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:04,494:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:44:04,495:INFO:Initializing create_model()
2025-08-19 18:44:04,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:04,495:INFO:Checking exceptions
2025-08-19 18:44:04,496:INFO:Importing libraries
2025-08-19 18:44:04,496:INFO:Copying training dataset
2025-08-19 18:44:04,496:INFO:Defining folds
2025-08-19 18:44:04,496:INFO:Declaring metric variables
2025-08-19 18:44:04,496:INFO:Importing untrained model
2025-08-19 18:44:04,496:INFO:Declaring custom model
2025-08-19 18:44:04,496:INFO:Dummy Classifier Imported successfully
2025-08-19 18:44:04,497:INFO:Cross validation set to False
2025-08-19 18:44:04,497:INFO:Fitting Model
2025-08-19 18:44:04,518:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:44:04,518:INFO:create_model() successfully completed......................................
2025-08-19 18:44:04,577:INFO:_master_model_container: 25
2025-08-19 18:44:04,577:INFO:_display_container: 19
2025-08-19 18:44:04,582:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:44:04,582:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:04,647:INFO:Initializing predict_model()
2025-08-19 18:44:04,647:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:04,647:INFO:Checking exceptions
2025-08-19 18:44:04,647:INFO:Preloading libraries
2025-08-19 18:44:04,647:INFO:Set up data.
2025-08-19 18:44:04,651:INFO:Set up index.
2025-08-19 18:44:04,665:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:04,733:INFO:Initializing create_model()
2025-08-19 18:44:04,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:04,733:INFO:Checking exceptions
2025-08-19 18:44:04,735:INFO:Importing libraries
2025-08-19 18:44:04,735:INFO:Copying training dataset
2025-08-19 18:44:04,737:INFO:Defining folds
2025-08-19 18:44:04,737:INFO:Declaring metric variables
2025-08-19 18:44:04,737:INFO:Importing untrained model
2025-08-19 18:44:04,737:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:44:04,737:INFO:Starting cross validation
2025-08-19 18:44:04,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:04,855:INFO:Calculating mean and std
2025-08-19 18:44:04,855:INFO:Creating metrics dataframe
2025-08-19 18:44:04,856:INFO:Finalizing model
2025-08-19 18:44:04,875:INFO:Uploading results into container
2025-08-19 18:44:04,875:INFO:Uploading model into container now
2025-08-19 18:44:04,875:INFO:_master_model_container: 26
2025-08-19 18:44:04,875:INFO:_display_container: 21
2025-08-19 18:44:04,876:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:44:04,876:INFO:create_model() successfully completed......................................
2025-08-19 18:44:04,929:INFO:Initializing finalize_model()
2025-08-19 18:44:04,929:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:04,929:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:44:04,930:INFO:Initializing create_model()
2025-08-19 18:44:04,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:04,930:INFO:Checking exceptions
2025-08-19 18:44:04,931:INFO:Importing libraries
2025-08-19 18:44:04,931:INFO:Copying training dataset
2025-08-19 18:44:04,931:INFO:Defining folds
2025-08-19 18:44:04,931:INFO:Declaring metric variables
2025-08-19 18:44:04,931:INFO:Importing untrained model
2025-08-19 18:44:04,931:INFO:Declaring custom model
2025-08-19 18:44:04,931:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:44:04,932:INFO:Cross validation set to False
2025-08-19 18:44:04,932:INFO:Fitting Model
2025-08-19 18:44:04,953:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:44:04,953:INFO:create_model() successfully completed......................................
2025-08-19 18:44:05,007:INFO:_master_model_container: 26
2025-08-19 18:44:05,007:INFO:_display_container: 21
2025-08-19 18:44:05,011:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:44:05,011:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:05,068:INFO:Initializing predict_model()
2025-08-19 18:44:05,068:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:05,068:INFO:Checking exceptions
2025-08-19 18:44:05,068:INFO:Preloading libraries
2025-08-19 18:44:05,068:INFO:Set up data.
2025-08-19 18:44:05,072:INFO:Set up index.
2025-08-19 18:44:05,298:INFO:Initializing create_model()
2025-08-19 18:44:05,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:05,298:INFO:Checking exceptions
2025-08-19 18:44:05,299:INFO:Importing libraries
2025-08-19 18:44:05,299:INFO:Copying training dataset
2025-08-19 18:44:05,301:INFO:Defining folds
2025-08-19 18:44:05,301:INFO:Declaring metric variables
2025-08-19 18:44:05,301:INFO:Importing untrained model
2025-08-19 18:44:05,301:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:44:05,301:INFO:Starting cross validation
2025-08-19 18:44:05,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:05,343:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,350:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,355:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,369:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,381:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,387:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,396:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,401:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,404:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,405:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,427:INFO:Calculating mean and std
2025-08-19 18:44:05,427:INFO:Creating metrics dataframe
2025-08-19 18:44:05,429:INFO:Finalizing model
2025-08-19 18:44:05,448:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,450:INFO:Uploading results into container
2025-08-19 18:44:05,451:INFO:Uploading model into container now
2025-08-19 18:44:05,451:INFO:_master_model_container: 27
2025-08-19 18:44:05,451:INFO:_display_container: 23
2025-08-19 18:44:05,452:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:44:05,452:INFO:create_model() successfully completed......................................
2025-08-19 18:44:05,530:INFO:Initializing finalize_model()
2025-08-19 18:44:05,530:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:05,530:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:44:05,534:INFO:Initializing create_model()
2025-08-19 18:44:05,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:05,534:INFO:Checking exceptions
2025-08-19 18:44:05,536:INFO:Importing libraries
2025-08-19 18:44:05,536:INFO:Copying training dataset
2025-08-19 18:44:05,536:INFO:Defining folds
2025-08-19 18:44:05,536:INFO:Declaring metric variables
2025-08-19 18:44:05,536:INFO:Importing untrained model
2025-08-19 18:44:05,536:INFO:Declaring custom model
2025-08-19 18:44:05,537:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:44:05,538:INFO:Cross validation set to False
2025-08-19 18:44:05,538:INFO:Fitting Model
2025-08-19 18:44:05,572:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:05,581:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:44:05,582:INFO:create_model() successfully completed......................................
2025-08-19 18:44:05,662:INFO:_master_model_container: 27
2025-08-19 18:44:05,662:INFO:_display_container: 23
2025-08-19 18:44:05,667:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:44:05,667:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:05,744:INFO:Initializing predict_model()
2025-08-19 18:44:05,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:05,744:INFO:Checking exceptions
2025-08-19 18:44:05,744:INFO:Preloading libraries
2025-08-19 18:44:05,744:INFO:Set up data.
2025-08-19 18:44:05,748:INFO:Set up index.
2025-08-19 18:44:05,846:INFO:Initializing create_model()
2025-08-19 18:44:05,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:05,846:INFO:Checking exceptions
2025-08-19 18:44:05,847:INFO:Importing libraries
2025-08-19 18:44:05,847:INFO:Copying training dataset
2025-08-19 18:44:05,849:INFO:Defining folds
2025-08-19 18:44:05,849:INFO:Declaring metric variables
2025-08-19 18:44:05,849:INFO:Importing untrained model
2025-08-19 18:44:05,849:INFO:Ridge Classifier Imported successfully
2025-08-19 18:44:05,849:INFO:Starting cross validation
2025-08-19 18:44:05,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:05,896:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:05,955:INFO:Calculating mean and std
2025-08-19 18:44:05,955:INFO:Creating metrics dataframe
2025-08-19 18:44:05,957:INFO:Finalizing model
2025-08-19 18:44:05,985:INFO:Uploading results into container
2025-08-19 18:44:05,986:INFO:Uploading model into container now
2025-08-19 18:44:05,986:INFO:_master_model_container: 28
2025-08-19 18:44:05,986:INFO:_display_container: 25
2025-08-19 18:44:05,986:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:44:05,986:INFO:create_model() successfully completed......................................
2025-08-19 18:44:06,057:INFO:Initializing finalize_model()
2025-08-19 18:44:06,057:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:06,057:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:44:06,061:INFO:Initializing create_model()
2025-08-19 18:44:06,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:06,061:INFO:Checking exceptions
2025-08-19 18:44:06,062:INFO:Importing libraries
2025-08-19 18:44:06,062:INFO:Copying training dataset
2025-08-19 18:44:06,062:INFO:Defining folds
2025-08-19 18:44:06,062:INFO:Declaring metric variables
2025-08-19 18:44:06,062:INFO:Importing untrained model
2025-08-19 18:44:06,062:INFO:Declaring custom model
2025-08-19 18:44:06,062:INFO:Ridge Classifier Imported successfully
2025-08-19 18:44:06,063:INFO:Cross validation set to False
2025-08-19 18:44:06,063:INFO:Fitting Model
2025-08-19 18:44:06,098:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:44:06,098:INFO:create_model() successfully completed......................................
2025-08-19 18:44:06,160:INFO:_master_model_container: 28
2025-08-19 18:44:06,161:INFO:_display_container: 25
2025-08-19 18:44:06,164:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:44:06,164:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:06,234:INFO:Initializing predict_model()
2025-08-19 18:44:06,234:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:06,234:INFO:Checking exceptions
2025-08-19 18:44:06,234:INFO:Preloading libraries
2025-08-19 18:44:06,234:INFO:Set up data.
2025-08-19 18:44:06,237:INFO:Set up index.
2025-08-19 18:44:06,324:INFO:Initializing create_model()
2025-08-19 18:44:06,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:06,324:INFO:Checking exceptions
2025-08-19 18:44:06,325:INFO:Importing libraries
2025-08-19 18:44:06,325:INFO:Copying training dataset
2025-08-19 18:44:06,327:INFO:Defining folds
2025-08-19 18:44:06,327:INFO:Declaring metric variables
2025-08-19 18:44:06,327:INFO:Importing untrained model
2025-08-19 18:44:06,327:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:44:06,327:INFO:Starting cross validation
2025-08-19 18:44:06,328:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:06,431:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:06,494:INFO:Calculating mean and std
2025-08-19 18:44:06,495:INFO:Creating metrics dataframe
2025-08-19 18:44:06,495:INFO:Finalizing model
2025-08-19 18:44:06,523:INFO:Uploading results into container
2025-08-19 18:44:06,523:INFO:Uploading model into container now
2025-08-19 18:44:06,523:INFO:_master_model_container: 29
2025-08-19 18:44:06,523:INFO:_display_container: 27
2025-08-19 18:44:06,523:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:44:06,523:INFO:create_model() successfully completed......................................
2025-08-19 18:44:06,603:INFO:Initializing finalize_model()
2025-08-19 18:44:06,604:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:06,604:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:44:06,608:INFO:Initializing create_model()
2025-08-19 18:44:06,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:06,608:INFO:Checking exceptions
2025-08-19 18:44:06,609:INFO:Importing libraries
2025-08-19 18:44:06,609:INFO:Copying training dataset
2025-08-19 18:44:06,609:INFO:Defining folds
2025-08-19 18:44:06,609:INFO:Declaring metric variables
2025-08-19 18:44:06,609:INFO:Importing untrained model
2025-08-19 18:44:06,609:INFO:Declaring custom model
2025-08-19 18:44:06,609:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:44:06,610:INFO:Cross validation set to False
2025-08-19 18:44:06,610:INFO:Fitting Model
2025-08-19 18:44:06,666:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:44:06,667:INFO:create_model() successfully completed......................................
2025-08-19 18:44:06,756:INFO:_master_model_container: 29
2025-08-19 18:44:06,756:INFO:_display_container: 27
2025-08-19 18:44:06,760:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:44:06,760:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:06,828:INFO:Initializing predict_model()
2025-08-19 18:44:06,828:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:06,828:INFO:Checking exceptions
2025-08-19 18:44:06,828:INFO:Preloading libraries
2025-08-19 18:44:06,828:INFO:Set up data.
2025-08-19 18:44:06,832:INFO:Set up index.
2025-08-19 18:44:06,948:INFO:Initializing create_model()
2025-08-19 18:44:06,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:06,949:INFO:Checking exceptions
2025-08-19 18:44:06,950:INFO:Importing libraries
2025-08-19 18:44:06,950:INFO:Copying training dataset
2025-08-19 18:44:06,951:INFO:Defining folds
2025-08-19 18:44:06,951:INFO:Declaring metric variables
2025-08-19 18:44:06,951:INFO:Importing untrained model
2025-08-19 18:44:06,951:INFO:Logistic Regression Imported successfully
2025-08-19 18:44:06,951:INFO:Starting cross validation
2025-08-19 18:44:06,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:07,032:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:07,085:INFO:Calculating mean and std
2025-08-19 18:44:07,086:INFO:Creating metrics dataframe
2025-08-19 18:44:07,086:INFO:Finalizing model
2025-08-19 18:44:07,121:INFO:Uploading results into container
2025-08-19 18:44:07,122:INFO:Uploading model into container now
2025-08-19 18:44:07,122:INFO:_master_model_container: 30
2025-08-19 18:44:07,122:INFO:_display_container: 29
2025-08-19 18:44:07,123:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:44:07,123:INFO:create_model() successfully completed......................................
2025-08-19 18:44:07,318:INFO:Initializing finalize_model()
2025-08-19 18:44:07,318:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:07,318:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:44:07,319:INFO:Initializing create_model()
2025-08-19 18:44:07,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:07,319:INFO:Checking exceptions
2025-08-19 18:44:07,320:INFO:Importing libraries
2025-08-19 18:44:07,320:INFO:Copying training dataset
2025-08-19 18:44:07,320:INFO:Defining folds
2025-08-19 18:44:07,320:INFO:Declaring metric variables
2025-08-19 18:44:07,320:INFO:Importing untrained model
2025-08-19 18:44:07,320:INFO:Declaring custom model
2025-08-19 18:44:07,321:INFO:Logistic Regression Imported successfully
2025-08-19 18:44:07,322:INFO:Cross validation set to False
2025-08-19 18:44:07,322:INFO:Fitting Model
2025-08-19 18:44:07,518:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:44:07,518:INFO:create_model() successfully completed......................................
2025-08-19 18:44:07,610:INFO:_master_model_container: 30
2025-08-19 18:44:07,610:INFO:_display_container: 29
2025-08-19 18:44:07,614:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:44:07,614:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:07,683:INFO:Initializing predict_model()
2025-08-19 18:44:07,683:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:07,683:INFO:Checking exceptions
2025-08-19 18:44:07,683:INFO:Preloading libraries
2025-08-19 18:44:07,683:INFO:Set up data.
2025-08-19 18:44:07,687:INFO:Set up index.
2025-08-19 18:44:07,792:INFO:Initializing create_model()
2025-08-19 18:44:07,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:07,793:INFO:Checking exceptions
2025-08-19 18:44:07,794:INFO:Importing libraries
2025-08-19 18:44:07,794:INFO:Copying training dataset
2025-08-19 18:44:07,795:INFO:Defining folds
2025-08-19 18:44:07,795:INFO:Declaring metric variables
2025-08-19 18:44:07,795:INFO:Importing untrained model
2025-08-19 18:44:07,796:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:44:07,796:INFO:Starting cross validation
2025-08-19 18:44:07,796:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:07,900:INFO:Calculating mean and std
2025-08-19 18:44:07,900:INFO:Creating metrics dataframe
2025-08-19 18:44:07,901:INFO:Finalizing model
2025-08-19 18:44:07,922:INFO:Uploading results into container
2025-08-19 18:44:07,922:INFO:Uploading model into container now
2025-08-19 18:44:07,922:INFO:_master_model_container: 31
2025-08-19 18:44:07,922:INFO:_display_container: 31
2025-08-19 18:44:07,922:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:44:07,923:INFO:create_model() successfully completed......................................
2025-08-19 18:44:07,977:INFO:Initializing finalize_model()
2025-08-19 18:44:07,977:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:07,977:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:44:07,978:INFO:Initializing create_model()
2025-08-19 18:44:07,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:07,978:INFO:Checking exceptions
2025-08-19 18:44:07,979:INFO:Importing libraries
2025-08-19 18:44:07,979:INFO:Copying training dataset
2025-08-19 18:44:07,979:INFO:Defining folds
2025-08-19 18:44:07,979:INFO:Declaring metric variables
2025-08-19 18:44:07,979:INFO:Importing untrained model
2025-08-19 18:44:07,979:INFO:Declaring custom model
2025-08-19 18:44:07,979:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:44:07,980:INFO:Cross validation set to False
2025-08-19 18:44:07,980:INFO:Fitting Model
2025-08-19 18:44:08,007:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:44:08,007:INFO:create_model() successfully completed......................................
2025-08-19 18:44:08,060:INFO:_master_model_container: 31
2025-08-19 18:44:08,060:INFO:_display_container: 31
2025-08-19 18:44:08,064:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:44:08,064:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:08,122:INFO:Initializing predict_model()
2025-08-19 18:44:08,122:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:08,122:INFO:Checking exceptions
2025-08-19 18:44:08,122:INFO:Preloading libraries
2025-08-19 18:44:08,123:INFO:Set up data.
2025-08-19 18:44:08,126:INFO:Set up index.
2025-08-19 18:44:08,195:INFO:Initializing create_model()
2025-08-19 18:44:08,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:08,195:INFO:Checking exceptions
2025-08-19 18:44:08,195:INFO:Importing libraries
2025-08-19 18:44:08,195:INFO:Copying training dataset
2025-08-19 18:44:08,197:INFO:Defining folds
2025-08-19 18:44:08,197:INFO:Declaring metric variables
2025-08-19 18:44:08,197:INFO:Importing untrained model
2025-08-19 18:44:08,197:INFO:Naive Bayes Imported successfully
2025-08-19 18:44:08,197:INFO:Starting cross validation
2025-08-19 18:44:08,198:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:08,288:INFO:Calculating mean and std
2025-08-19 18:44:08,288:INFO:Creating metrics dataframe
2025-08-19 18:44:08,289:INFO:Finalizing model
2025-08-19 18:44:08,308:INFO:Uploading results into container
2025-08-19 18:44:08,308:INFO:Uploading model into container now
2025-08-19 18:44:08,308:INFO:_master_model_container: 32
2025-08-19 18:44:08,308:INFO:_display_container: 33
2025-08-19 18:44:08,308:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:44:08,308:INFO:create_model() successfully completed......................................
2025-08-19 18:44:08,362:INFO:Initializing finalize_model()
2025-08-19 18:44:08,362:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:08,362:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:44:08,363:INFO:Initializing create_model()
2025-08-19 18:44:08,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:08,363:INFO:Checking exceptions
2025-08-19 18:44:08,364:INFO:Importing libraries
2025-08-19 18:44:08,364:INFO:Copying training dataset
2025-08-19 18:44:08,364:INFO:Defining folds
2025-08-19 18:44:08,364:INFO:Declaring metric variables
2025-08-19 18:44:08,364:INFO:Importing untrained model
2025-08-19 18:44:08,364:INFO:Declaring custom model
2025-08-19 18:44:08,365:INFO:Naive Bayes Imported successfully
2025-08-19 18:44:08,365:INFO:Cross validation set to False
2025-08-19 18:44:08,365:INFO:Fitting Model
2025-08-19 18:44:08,388:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:44:08,388:INFO:create_model() successfully completed......................................
2025-08-19 18:44:08,451:INFO:_master_model_container: 32
2025-08-19 18:44:08,451:INFO:_display_container: 33
2025-08-19 18:44:08,454:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:44:08,454:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:08,517:INFO:Initializing predict_model()
2025-08-19 18:44:08,517:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x119f11d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933eb0>)
2025-08-19 18:44:08,517:INFO:Checking exceptions
2025-08-19 18:44:08,517:INFO:Preloading libraries
2025-08-19 18:44:08,517:INFO:Set up data.
2025-08-19 18:44:08,521:INFO:Set up index.
2025-08-19 18:44:08,607:INFO:PyCaret ClassificationExperiment
2025-08-19 18:44:08,607:INFO:Logging name: clf-default-name
2025-08-19 18:44:08,607:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:44:08,607:INFO:version 3.3.2
2025-08-19 18:44:08,607:INFO:Initializing setup()
2025-08-19 18:44:08,607:INFO:self.USI: bd08
2025-08-19 18:44:08,607:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:44:08,607:INFO:Checking environment
2025-08-19 18:44:08,607:INFO:python_version: 3.10.18
2025-08-19 18:44:08,607:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:44:08,607:INFO:machine: arm64
2025-08-19 18:44:08,607:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:44:08,607:INFO:Memory: svmem(total=17179869184, available=3264462848, percent=81.0, used=5991563264, free=378224640, active=2907308032, inactive=2877571072, wired=3084255232)
2025-08-19 18:44:08,607:INFO:Physical Core: 8
2025-08-19 18:44:08,607:INFO:Logical Core: 8
2025-08-19 18:44:08,607:INFO:Checking libraries
2025-08-19 18:44:08,607:INFO:System:
2025-08-19 18:44:08,607:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:44:08,607:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:44:08,607:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:44:08,607:INFO:PyCaret required dependencies:
2025-08-19 18:44:08,607:INFO:                 pip: 25.2
2025-08-19 18:44:08,607:INFO:          setuptools: 80.9.0
2025-08-19 18:44:08,607:INFO:             pycaret: 3.3.2
2025-08-19 18:44:08,607:INFO:             IPython: 8.37.0
2025-08-19 18:44:08,607:INFO:          ipywidgets: 8.1.7
2025-08-19 18:44:08,607:INFO:                tqdm: 4.67.1
2025-08-19 18:44:08,608:INFO:               numpy: 1.25.2
2025-08-19 18:44:08,608:INFO:              pandas: 2.1.4
2025-08-19 18:44:08,608:INFO:              jinja2: 3.1.6
2025-08-19 18:44:08,608:INFO:               scipy: 1.9.3
2025-08-19 18:44:08,608:INFO:              joblib: 1.3.2
2025-08-19 18:44:08,608:INFO:             sklearn: 1.4.2
2025-08-19 18:44:08,608:INFO:                pyod: 2.0.5
2025-08-19 18:44:08,608:INFO:            imblearn: 0.12.4
2025-08-19 18:44:08,608:INFO:   category_encoders: 2.7.0
2025-08-19 18:44:08,608:INFO:            lightgbm: 4.6.0
2025-08-19 18:44:08,608:INFO:               numba: 0.61.2
2025-08-19 18:44:08,608:INFO:            requests: 2.32.4
2025-08-19 18:44:08,608:INFO:          matplotlib: 3.7.2
2025-08-19 18:44:08,608:INFO:          scikitplot: 0.3.7
2025-08-19 18:44:08,608:INFO:         yellowbrick: 1.5
2025-08-19 18:44:08,608:INFO:              plotly: 5.24.1
2025-08-19 18:44:08,608:INFO:    plotly-resampler: Not installed
2025-08-19 18:44:08,608:INFO:             kaleido: 1.0.0
2025-08-19 18:44:08,608:INFO:           schemdraw: 0.15
2025-08-19 18:44:08,608:INFO:         statsmodels: 0.14.5
2025-08-19 18:44:08,608:INFO:              sktime: 0.26.0
2025-08-19 18:44:08,608:INFO:               tbats: 1.1.3
2025-08-19 18:44:08,608:INFO:            pmdarima: 2.0.4
2025-08-19 18:44:08,608:INFO:              psutil: 7.0.0
2025-08-19 18:44:08,608:INFO:          markupsafe: 3.0.2
2025-08-19 18:44:08,608:INFO:             pickle5: Not installed
2025-08-19 18:44:08,608:INFO:         cloudpickle: 3.1.1
2025-08-19 18:44:08,608:INFO:         deprecation: 2.1.0
2025-08-19 18:44:08,608:INFO:              xxhash: 3.5.0
2025-08-19 18:44:08,608:INFO:           wurlitzer: 3.1.1
2025-08-19 18:44:08,608:INFO:PyCaret optional dependencies:
2025-08-19 18:44:08,608:INFO:                shap: 0.48.0
2025-08-19 18:44:08,608:INFO:           interpret: Not installed
2025-08-19 18:44:08,608:INFO:                umap: Not installed
2025-08-19 18:44:08,608:INFO:     ydata_profiling: Not installed
2025-08-19 18:44:08,608:INFO:  explainerdashboard: Not installed
2025-08-19 18:44:08,608:INFO:             autoviz: Not installed
2025-08-19 18:44:08,608:INFO:           fairlearn: Not installed
2025-08-19 18:44:08,608:INFO:          deepchecks: Not installed
2025-08-19 18:44:08,608:INFO:             xgboost: 3.0.4
2025-08-19 18:44:08,608:INFO:            catboost: 1.2.8
2025-08-19 18:44:08,608:INFO:              kmodes: Not installed
2025-08-19 18:44:08,608:INFO:             mlxtend: 0.23.4
2025-08-19 18:44:08,608:INFO:       statsforecast: Not installed
2025-08-19 18:44:08,608:INFO:        tune_sklearn: Not installed
2025-08-19 18:44:08,608:INFO:                 ray: Not installed
2025-08-19 18:44:08,608:INFO:            hyperopt: Not installed
2025-08-19 18:44:08,608:INFO:              optuna: 4.4.0
2025-08-19 18:44:08,608:INFO:               skopt: Not installed
2025-08-19 18:44:08,608:INFO:              mlflow: Not installed
2025-08-19 18:44:08,608:INFO:              gradio: Not installed
2025-08-19 18:44:08,608:INFO:             fastapi: Not installed
2025-08-19 18:44:08,608:INFO:             uvicorn: Not installed
2025-08-19 18:44:08,608:INFO:              m2cgen: Not installed
2025-08-19 18:44:08,608:INFO:           evidently: Not installed
2025-08-19 18:44:08,609:INFO:               fugue: Not installed
2025-08-19 18:44:08,609:INFO:           streamlit: Not installed
2025-08-19 18:44:08,609:INFO:             prophet: Not installed
2025-08-19 18:44:08,609:INFO:None
2025-08-19 18:44:08,609:INFO:Set up data.
2025-08-19 18:44:08,612:INFO:Set up folding strategy.
2025-08-19 18:44:08,612:INFO:Set up train/test split.
2025-08-19 18:44:08,612:INFO:Set up data.
2025-08-19 18:44:08,616:INFO:Set up index.
2025-08-19 18:44:08,617:INFO:Assigning column types.
2025-08-19 18:44:08,618:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:44:08,638:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:44:08,639:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:44:08,652:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:08,653:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:08,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:44:08,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:44:08,686:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:08,687:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:08,688:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:44:08,708:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:44:08,720:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:08,721:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:08,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:44:08,754:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:08,756:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:08,756:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:44:08,788:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:08,790:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:08,822:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:08,824:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:08,824:INFO:Preparing preprocessing pipeline...
2025-08-19 18:44:08,825:INFO:Set up label encoding.
2025-08-19 18:44:08,825:INFO:Set up simple imputation.
2025-08-19 18:44:08,826:INFO:Set up encoding of categorical features.
2025-08-19 18:44:08,869:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:44:08,872:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:44:08,872:INFO:Creating final display dataframe.
2025-08-19 18:44:08,984:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              bd08
2025-08-19 18:44:09,019:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:09,020:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:09,054:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:09,055:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:09,056:INFO:setup() successfully completed in 0.45s...............
2025-08-19 18:44:09,058:INFO:Initializing compare_models()
2025-08-19 18:44:09,058:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:44:09,058:INFO:Checking exceptions
2025-08-19 18:44:09,059:INFO:Preparing display monitor
2025-08-19 18:44:09,060:INFO:Initializing Logistic Regression
2025-08-19 18:44:09,060:INFO:Total runtime is 8.662541707356771e-07 minutes
2025-08-19 18:44:09,061:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:09,061:INFO:Initializing create_model()
2025-08-19 18:44:09,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:09,061:INFO:Checking exceptions
2025-08-19 18:44:09,061:INFO:Importing libraries
2025-08-19 18:44:09,061:INFO:Copying training dataset
2025-08-19 18:44:09,062:INFO:Defining folds
2025-08-19 18:44:09,062:INFO:Declaring metric variables
2025-08-19 18:44:09,062:INFO:Importing untrained model
2025-08-19 18:44:09,062:INFO:Logistic Regression Imported successfully
2025-08-19 18:44:09,062:INFO:Starting cross validation
2025-08-19 18:44:09,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:09,172:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:09,188:INFO:Calculating mean and std
2025-08-19 18:44:09,188:INFO:Creating metrics dataframe
2025-08-19 18:44:09,189:INFO:Uploading results into container
2025-08-19 18:44:09,189:INFO:Uploading model into container now
2025-08-19 18:44:09,190:INFO:_master_model_container: 1
2025-08-19 18:44:09,190:INFO:_display_container: 2
2025-08-19 18:44:09,190:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:44:09,190:INFO:create_model() successfully completed......................................
2025-08-19 18:44:09,247:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:09,247:INFO:Creating metrics dataframe
2025-08-19 18:44:09,248:INFO:Initializing K Neighbors Classifier
2025-08-19 18:44:09,248:INFO:Total runtime is 0.003129466374715169 minutes
2025-08-19 18:44:09,248:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:09,248:INFO:Initializing create_model()
2025-08-19 18:44:09,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:09,249:INFO:Checking exceptions
2025-08-19 18:44:09,249:INFO:Importing libraries
2025-08-19 18:44:09,249:INFO:Copying training dataset
2025-08-19 18:44:09,250:INFO:Defining folds
2025-08-19 18:44:09,250:INFO:Declaring metric variables
2025-08-19 18:44:09,250:INFO:Importing untrained model
2025-08-19 18:44:09,250:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:44:09,250:INFO:Starting cross validation
2025-08-19 18:44:09,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:09,358:INFO:Calculating mean and std
2025-08-19 18:44:09,359:INFO:Creating metrics dataframe
2025-08-19 18:44:09,359:INFO:Uploading results into container
2025-08-19 18:44:09,360:INFO:Uploading model into container now
2025-08-19 18:44:09,360:INFO:_master_model_container: 2
2025-08-19 18:44:09,360:INFO:_display_container: 2
2025-08-19 18:44:09,360:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:44:09,360:INFO:create_model() successfully completed......................................
2025-08-19 18:44:09,415:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:09,415:INFO:Creating metrics dataframe
2025-08-19 18:44:09,416:INFO:Initializing Naive Bayes
2025-08-19 18:44:09,416:INFO:Total runtime is 0.0059274156888326004 minutes
2025-08-19 18:44:09,416:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:09,416:INFO:Initializing create_model()
2025-08-19 18:44:09,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:09,416:INFO:Checking exceptions
2025-08-19 18:44:09,416:INFO:Importing libraries
2025-08-19 18:44:09,416:INFO:Copying training dataset
2025-08-19 18:44:09,418:INFO:Defining folds
2025-08-19 18:44:09,418:INFO:Declaring metric variables
2025-08-19 18:44:09,418:INFO:Importing untrained model
2025-08-19 18:44:09,418:INFO:Naive Bayes Imported successfully
2025-08-19 18:44:09,418:INFO:Starting cross validation
2025-08-19 18:44:09,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:09,518:INFO:Calculating mean and std
2025-08-19 18:44:09,518:INFO:Creating metrics dataframe
2025-08-19 18:44:09,519:INFO:Uploading results into container
2025-08-19 18:44:09,519:INFO:Uploading model into container now
2025-08-19 18:44:09,519:INFO:_master_model_container: 3
2025-08-19 18:44:09,519:INFO:_display_container: 2
2025-08-19 18:44:09,519:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:44:09,519:INFO:create_model() successfully completed......................................
2025-08-19 18:44:09,574:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:09,574:INFO:Creating metrics dataframe
2025-08-19 18:44:09,575:INFO:Initializing Decision Tree Classifier
2025-08-19 18:44:09,575:INFO:Total runtime is 0.008577847480773925 minutes
2025-08-19 18:44:09,575:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:09,575:INFO:Initializing create_model()
2025-08-19 18:44:09,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:09,575:INFO:Checking exceptions
2025-08-19 18:44:09,575:INFO:Importing libraries
2025-08-19 18:44:09,575:INFO:Copying training dataset
2025-08-19 18:44:09,577:INFO:Defining folds
2025-08-19 18:44:09,577:INFO:Declaring metric variables
2025-08-19 18:44:09,577:INFO:Importing untrained model
2025-08-19 18:44:09,577:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:44:09,577:INFO:Starting cross validation
2025-08-19 18:44:09,578:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:09,721:INFO:Calculating mean and std
2025-08-19 18:44:09,722:INFO:Creating metrics dataframe
2025-08-19 18:44:09,723:INFO:Uploading results into container
2025-08-19 18:44:09,723:INFO:Uploading model into container now
2025-08-19 18:44:09,723:INFO:_master_model_container: 4
2025-08-19 18:44:09,723:INFO:_display_container: 2
2025-08-19 18:44:09,723:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:44:09,723:INFO:create_model() successfully completed......................................
2025-08-19 18:44:09,784:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:09,784:INFO:Creating metrics dataframe
2025-08-19 18:44:09,785:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:44:09,785:INFO:Total runtime is 0.01207441488901774 minutes
2025-08-19 18:44:09,785:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:09,785:INFO:Initializing create_model()
2025-08-19 18:44:09,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:09,785:INFO:Checking exceptions
2025-08-19 18:44:09,785:INFO:Importing libraries
2025-08-19 18:44:09,785:INFO:Copying training dataset
2025-08-19 18:44:09,786:INFO:Defining folds
2025-08-19 18:44:09,787:INFO:Declaring metric variables
2025-08-19 18:44:09,787:INFO:Importing untrained model
2025-08-19 18:44:09,787:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:44:09,787:INFO:Starting cross validation
2025-08-19 18:44:09,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:09,891:INFO:Calculating mean and std
2025-08-19 18:44:09,891:INFO:Creating metrics dataframe
2025-08-19 18:44:09,893:INFO:Uploading results into container
2025-08-19 18:44:09,893:INFO:Uploading model into container now
2025-08-19 18:44:09,893:INFO:_master_model_container: 5
2025-08-19 18:44:09,893:INFO:_display_container: 2
2025-08-19 18:44:09,894:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:44:09,894:INFO:create_model() successfully completed......................................
2025-08-19 18:44:09,948:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:09,948:INFO:Creating metrics dataframe
2025-08-19 18:44:09,949:INFO:Initializing Ridge Classifier
2025-08-19 18:44:09,949:INFO:Total runtime is 0.01480953296025594 minutes
2025-08-19 18:44:09,949:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:09,949:INFO:Initializing create_model()
2025-08-19 18:44:09,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:09,949:INFO:Checking exceptions
2025-08-19 18:44:09,949:INFO:Importing libraries
2025-08-19 18:44:09,949:INFO:Copying training dataset
2025-08-19 18:44:09,951:INFO:Defining folds
2025-08-19 18:44:09,951:INFO:Declaring metric variables
2025-08-19 18:44:09,951:INFO:Importing untrained model
2025-08-19 18:44:09,951:INFO:Ridge Classifier Imported successfully
2025-08-19 18:44:09,951:INFO:Starting cross validation
2025-08-19 18:44:09,951:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:10,038:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:10,047:INFO:Calculating mean and std
2025-08-19 18:44:10,047:INFO:Creating metrics dataframe
2025-08-19 18:44:10,048:INFO:Uploading results into container
2025-08-19 18:44:10,049:INFO:Uploading model into container now
2025-08-19 18:44:10,049:INFO:_master_model_container: 6
2025-08-19 18:44:10,049:INFO:_display_container: 2
2025-08-19 18:44:10,049:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:44:10,049:INFO:create_model() successfully completed......................................
2025-08-19 18:44:10,103:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:10,103:INFO:Creating metrics dataframe
2025-08-19 18:44:10,104:INFO:Initializing Random Forest Classifier
2025-08-19 18:44:10,104:INFO:Total runtime is 0.017394816875457762 minutes
2025-08-19 18:44:10,104:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:10,104:INFO:Initializing create_model()
2025-08-19 18:44:10,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:10,104:INFO:Checking exceptions
2025-08-19 18:44:10,104:INFO:Importing libraries
2025-08-19 18:44:10,104:INFO:Copying training dataset
2025-08-19 18:44:10,106:INFO:Defining folds
2025-08-19 18:44:10,106:INFO:Declaring metric variables
2025-08-19 18:44:10,107:INFO:Importing untrained model
2025-08-19 18:44:10,107:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:44:10,107:INFO:Starting cross validation
2025-08-19 18:44:10,108:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:10,530:INFO:Calculating mean and std
2025-08-19 18:44:10,531:INFO:Creating metrics dataframe
2025-08-19 18:44:10,532:INFO:Uploading results into container
2025-08-19 18:44:10,532:INFO:Uploading model into container now
2025-08-19 18:44:10,532:INFO:_master_model_container: 7
2025-08-19 18:44:10,532:INFO:_display_container: 2
2025-08-19 18:44:10,532:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:44:10,532:INFO:create_model() successfully completed......................................
2025-08-19 18:44:10,587:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:10,587:INFO:Creating metrics dataframe
2025-08-19 18:44:10,588:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:44:10,588:INFO:Total runtime is 0.025466350714365642 minutes
2025-08-19 18:44:10,589:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:10,589:INFO:Initializing create_model()
2025-08-19 18:44:10,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:10,589:INFO:Checking exceptions
2025-08-19 18:44:10,589:INFO:Importing libraries
2025-08-19 18:44:10,589:INFO:Copying training dataset
2025-08-19 18:44:10,590:INFO:Defining folds
2025-08-19 18:44:10,590:INFO:Declaring metric variables
2025-08-19 18:44:10,590:INFO:Importing untrained model
2025-08-19 18:44:10,590:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:44:10,590:INFO:Starting cross validation
2025-08-19 18:44:10,591:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:10,616:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,622:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,626:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,632:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,633:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,633:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,647:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,649:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,653:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,667:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:10,689:INFO:Calculating mean and std
2025-08-19 18:44:10,689:INFO:Creating metrics dataframe
2025-08-19 18:44:10,690:INFO:Uploading results into container
2025-08-19 18:44:10,690:INFO:Uploading model into container now
2025-08-19 18:44:10,690:INFO:_master_model_container: 8
2025-08-19 18:44:10,690:INFO:_display_container: 2
2025-08-19 18:44:10,691:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:44:10,691:INFO:create_model() successfully completed......................................
2025-08-19 18:44:10,745:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:10,745:INFO:Creating metrics dataframe
2025-08-19 18:44:10,747:INFO:Initializing Ada Boost Classifier
2025-08-19 18:44:10,747:INFO:Total runtime is 0.028104996681213378 minutes
2025-08-19 18:44:10,747:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:10,747:INFO:Initializing create_model()
2025-08-19 18:44:10,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:10,747:INFO:Checking exceptions
2025-08-19 18:44:10,747:INFO:Importing libraries
2025-08-19 18:44:10,747:INFO:Copying training dataset
2025-08-19 18:44:10,748:INFO:Defining folds
2025-08-19 18:44:10,748:INFO:Declaring metric variables
2025-08-19 18:44:10,748:INFO:Importing untrained model
2025-08-19 18:44:10,748:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:44:10,749:INFO:Starting cross validation
2025-08-19 18:44:10,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:10,776:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,782:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,784:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,791:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,793:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,800:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,801:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,812:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,984:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:10,984:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:11,125:INFO:Calculating mean and std
2025-08-19 18:44:11,125:INFO:Creating metrics dataframe
2025-08-19 18:44:11,126:INFO:Uploading results into container
2025-08-19 18:44:11,126:INFO:Uploading model into container now
2025-08-19 18:44:11,127:INFO:_master_model_container: 9
2025-08-19 18:44:11,127:INFO:_display_container: 2
2025-08-19 18:44:11,127:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:44:11,127:INFO:create_model() successfully completed......................................
2025-08-19 18:44:11,180:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:11,180:INFO:Creating metrics dataframe
2025-08-19 18:44:11,181:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:44:11,181:INFO:Total runtime is 0.035347882906595865 minutes
2025-08-19 18:44:11,181:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:11,181:INFO:Initializing create_model()
2025-08-19 18:44:11,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:11,182:INFO:Checking exceptions
2025-08-19 18:44:11,182:INFO:Importing libraries
2025-08-19 18:44:11,182:INFO:Copying training dataset
2025-08-19 18:44:11,183:INFO:Defining folds
2025-08-19 18:44:11,183:INFO:Declaring metric variables
2025-08-19 18:44:11,183:INFO:Importing untrained model
2025-08-19 18:44:11,183:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:44:11,183:INFO:Starting cross validation
2025-08-19 18:44:11,184:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:12,269:INFO:Calculating mean and std
2025-08-19 18:44:12,270:INFO:Creating metrics dataframe
2025-08-19 18:44:12,274:INFO:Uploading results into container
2025-08-19 18:44:12,274:INFO:Uploading model into container now
2025-08-19 18:44:12,274:INFO:_master_model_container: 10
2025-08-19 18:44:12,274:INFO:_display_container: 2
2025-08-19 18:44:12,276:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:44:12,276:INFO:create_model() successfully completed......................................
2025-08-19 18:44:12,342:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:12,343:INFO:Creating metrics dataframe
2025-08-19 18:44:12,344:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:44:12,345:INFO:Total runtime is 0.05473796526590983 minutes
2025-08-19 18:44:12,345:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:12,346:INFO:Initializing create_model()
2025-08-19 18:44:12,346:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:12,346:INFO:Checking exceptions
2025-08-19 18:44:12,346:INFO:Importing libraries
2025-08-19 18:44:12,346:INFO:Copying training dataset
2025-08-19 18:44:12,347:INFO:Defining folds
2025-08-19 18:44:12,348:INFO:Declaring metric variables
2025-08-19 18:44:12,348:INFO:Importing untrained model
2025-08-19 18:44:12,349:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:44:12,350:INFO:Starting cross validation
2025-08-19 18:44:12,352:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:12,462:INFO:Calculating mean and std
2025-08-19 18:44:12,463:INFO:Creating metrics dataframe
2025-08-19 18:44:12,463:INFO:Uploading results into container
2025-08-19 18:44:12,464:INFO:Uploading model into container now
2025-08-19 18:44:12,464:INFO:_master_model_container: 11
2025-08-19 18:44:12,464:INFO:_display_container: 2
2025-08-19 18:44:12,464:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:44:12,464:INFO:create_model() successfully completed......................................
2025-08-19 18:44:12,519:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:12,519:INFO:Creating metrics dataframe
2025-08-19 18:44:12,520:INFO:Initializing Extra Trees Classifier
2025-08-19 18:44:12,520:INFO:Total runtime is 0.05766523281733195 minutes
2025-08-19 18:44:12,520:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:12,521:INFO:Initializing create_model()
2025-08-19 18:44:12,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:12,521:INFO:Checking exceptions
2025-08-19 18:44:12,521:INFO:Importing libraries
2025-08-19 18:44:12,521:INFO:Copying training dataset
2025-08-19 18:44:12,523:INFO:Defining folds
2025-08-19 18:44:12,523:INFO:Declaring metric variables
2025-08-19 18:44:12,523:INFO:Importing untrained model
2025-08-19 18:44:12,523:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:44:12,523:INFO:Starting cross validation
2025-08-19 18:44:12,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:12,855:INFO:Calculating mean and std
2025-08-19 18:44:12,855:INFO:Creating metrics dataframe
2025-08-19 18:44:12,856:INFO:Uploading results into container
2025-08-19 18:44:12,856:INFO:Uploading model into container now
2025-08-19 18:44:12,856:INFO:_master_model_container: 12
2025-08-19 18:44:12,856:INFO:_display_container: 2
2025-08-19 18:44:12,857:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:44:12,857:INFO:create_model() successfully completed......................................
2025-08-19 18:44:12,910:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:12,910:INFO:Creating metrics dataframe
2025-08-19 18:44:12,911:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:44:12,911:INFO:Total runtime is 0.06418370008468628 minutes
2025-08-19 18:44:12,912:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:12,912:INFO:Initializing create_model()
2025-08-19 18:44:12,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:12,912:INFO:Checking exceptions
2025-08-19 18:44:12,912:INFO:Importing libraries
2025-08-19 18:44:12,912:INFO:Copying training dataset
2025-08-19 18:44:12,913:INFO:Defining folds
2025-08-19 18:44:12,913:INFO:Declaring metric variables
2025-08-19 18:44:12,913:INFO:Importing untrained model
2025-08-19 18:44:12,913:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:44:12,913:INFO:Starting cross validation
2025-08-19 18:44:12,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:13,121:INFO:Calculating mean and std
2025-08-19 18:44:13,121:INFO:Creating metrics dataframe
2025-08-19 18:44:13,122:INFO:Uploading results into container
2025-08-19 18:44:13,122:INFO:Uploading model into container now
2025-08-19 18:44:13,122:INFO:_master_model_container: 13
2025-08-19 18:44:13,122:INFO:_display_container: 2
2025-08-19 18:44:13,123:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:44:13,123:INFO:create_model() successfully completed......................................
2025-08-19 18:44:13,177:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:13,177:INFO:Creating metrics dataframe
2025-08-19 18:44:13,179:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:44:13,179:INFO:Total runtime is 0.06863749821980794 minutes
2025-08-19 18:44:13,179:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:13,179:INFO:Initializing create_model()
2025-08-19 18:44:13,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:13,179:INFO:Checking exceptions
2025-08-19 18:44:13,179:INFO:Importing libraries
2025-08-19 18:44:13,179:INFO:Copying training dataset
2025-08-19 18:44:13,180:INFO:Defining folds
2025-08-19 18:44:13,180:INFO:Declaring metric variables
2025-08-19 18:44:13,180:INFO:Importing untrained model
2025-08-19 18:44:13,181:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:44:13,181:INFO:Starting cross validation
2025-08-19 18:44:13,181:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:17,147:INFO:Calculating mean and std
2025-08-19 18:44:17,149:INFO:Creating metrics dataframe
2025-08-19 18:44:17,152:INFO:Uploading results into container
2025-08-19 18:44:17,153:INFO:Uploading model into container now
2025-08-19 18:44:17,153:INFO:_master_model_container: 14
2025-08-19 18:44:17,153:INFO:_display_container: 2
2025-08-19 18:44:17,154:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:44:17,154:INFO:create_model() successfully completed......................................
2025-08-19 18:44:17,272:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:17,272:INFO:Creating metrics dataframe
2025-08-19 18:44:17,282:INFO:Initializing CatBoost Classifier
2025-08-19 18:44:17,282:INFO:Total runtime is 0.13702558279037474 minutes
2025-08-19 18:44:17,282:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:17,282:INFO:Initializing create_model()
2025-08-19 18:44:17,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:17,282:INFO:Checking exceptions
2025-08-19 18:44:17,282:INFO:Importing libraries
2025-08-19 18:44:17,282:INFO:Copying training dataset
2025-08-19 18:44:17,286:INFO:Defining folds
2025-08-19 18:44:17,286:INFO:Declaring metric variables
2025-08-19 18:44:17,286:INFO:Importing untrained model
2025-08-19 18:44:17,286:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:44:17,287:INFO:Starting cross validation
2025-08-19 18:44:17,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:25,744:INFO:Calculating mean and std
2025-08-19 18:44:25,745:INFO:Creating metrics dataframe
2025-08-19 18:44:25,748:INFO:Uploading results into container
2025-08-19 18:44:25,748:INFO:Uploading model into container now
2025-08-19 18:44:25,748:INFO:_master_model_container: 15
2025-08-19 18:44:25,748:INFO:_display_container: 2
2025-08-19 18:44:25,748:INFO:<catboost.core.CatBoostClassifier object at 0x30796d870>
2025-08-19 18:44:25,749:INFO:create_model() successfully completed......................................
2025-08-19 18:44:25,812:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:25,812:INFO:Creating metrics dataframe
2025-08-19 18:44:25,814:INFO:Initializing Dummy Classifier
2025-08-19 18:44:25,814:INFO:Total runtime is 0.2792252858479818 minutes
2025-08-19 18:44:25,814:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:25,814:INFO:Initializing create_model()
2025-08-19 18:44:25,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x11a08b700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:25,814:INFO:Checking exceptions
2025-08-19 18:44:25,814:INFO:Importing libraries
2025-08-19 18:44:25,814:INFO:Copying training dataset
2025-08-19 18:44:25,816:INFO:Defining folds
2025-08-19 18:44:25,816:INFO:Declaring metric variables
2025-08-19 18:44:25,816:INFO:Importing untrained model
2025-08-19 18:44:25,816:INFO:Dummy Classifier Imported successfully
2025-08-19 18:44:25,816:INFO:Starting cross validation
2025-08-19 18:44:25,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:25,858:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,862:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,869:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,872:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,876:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,882:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,889:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,901:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,901:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,903:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:25,907:INFO:Calculating mean and std
2025-08-19 18:44:25,907:INFO:Creating metrics dataframe
2025-08-19 18:44:25,908:INFO:Uploading results into container
2025-08-19 18:44:25,909:INFO:Uploading model into container now
2025-08-19 18:44:25,909:INFO:_master_model_container: 16
2025-08-19 18:44:25,909:INFO:_display_container: 2
2025-08-19 18:44:25,909:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:44:25,909:INFO:create_model() successfully completed......................................
2025-08-19 18:44:25,964:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:25,964:INFO:Creating metrics dataframe
2025-08-19 18:44:25,966:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:44:25,967:INFO:Initializing create_model()
2025-08-19 18:44:25,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:25,967:INFO:Checking exceptions
2025-08-19 18:44:25,968:INFO:Importing libraries
2025-08-19 18:44:25,968:INFO:Copying training dataset
2025-08-19 18:44:25,969:INFO:Defining folds
2025-08-19 18:44:25,969:INFO:Declaring metric variables
2025-08-19 18:44:25,969:INFO:Importing untrained model
2025-08-19 18:44:25,969:INFO:Declaring custom model
2025-08-19 18:44:25,970:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:44:25,970:INFO:Cross validation set to False
2025-08-19 18:44:25,970:INFO:Fitting Model
2025-08-19 18:44:25,991:INFO:[LightGBM] [Info] Number of positive: 468, number of negative: 300
2025-08-19 18:44:25,992:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000312 seconds.
2025-08-19 18:44:25,992:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:44:25,992:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 18:44:25,992:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:44:25,992:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.609375 -> initscore=0.444686
2025-08-19 18:44:25,992:INFO:[LightGBM] [Info] Start training from score 0.444686
2025-08-19 18:44:25,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:25,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:26,450:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:44:26,450:INFO:create_model() successfully completed......................................
2025-08-19 18:44:26,519:INFO:_master_model_container: 16
2025-08-19 18:44:26,519:INFO:_display_container: 2
2025-08-19 18:44:26,520:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:44:26,520:INFO:compare_models() successfully completed......................................
2025-08-19 18:44:26,520:INFO:Initializing create_model()
2025-08-19 18:44:26,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:26,520:INFO:Checking exceptions
2025-08-19 18:44:26,521:INFO:Importing libraries
2025-08-19 18:44:26,522:INFO:Copying training dataset
2025-08-19 18:44:26,523:INFO:Defining folds
2025-08-19 18:44:26,523:INFO:Declaring metric variables
2025-08-19 18:44:26,524:INFO:Importing untrained model
2025-08-19 18:44:26,524:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:44:26,524:INFO:Starting cross validation
2025-08-19 18:44:26,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:29,482:INFO:Calculating mean and std
2025-08-19 18:44:29,482:INFO:Creating metrics dataframe
2025-08-19 18:44:29,483:INFO:Finalizing model
2025-08-19 18:44:29,503:INFO:[LightGBM] [Info] Number of positive: 468, number of negative: 300
2025-08-19 18:44:29,503:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000347 seconds.
2025-08-19 18:44:29,503:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:44:29,503:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 18:44:29,504:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:44:29,504:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.609375 -> initscore=0.444686
2025-08-19 18:44:29,504:INFO:[LightGBM] [Info] Start training from score 0.444686
2025-08-19 18:44:29,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,543:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,550:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,561:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,904:INFO:Uploading results into container
2025-08-19 18:44:29,904:INFO:Uploading model into container now
2025-08-19 18:44:29,905:INFO:_master_model_container: 17
2025-08-19 18:44:29,905:INFO:_display_container: 3
2025-08-19 18:44:29,905:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:44:29,905:INFO:create_model() successfully completed......................................
2025-08-19 18:44:29,959:INFO:Initializing finalize_model()
2025-08-19 18:44:29,959:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:29,960:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:44:29,961:INFO:Initializing create_model()
2025-08-19 18:44:29,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:29,961:INFO:Checking exceptions
2025-08-19 18:44:29,962:INFO:Importing libraries
2025-08-19 18:44:29,962:INFO:Copying training dataset
2025-08-19 18:44:29,962:INFO:Defining folds
2025-08-19 18:44:29,962:INFO:Declaring metric variables
2025-08-19 18:44:29,962:INFO:Importing untrained model
2025-08-19 18:44:29,962:INFO:Declaring custom model
2025-08-19 18:44:29,962:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:44:29,963:INFO:Cross validation set to False
2025-08-19 18:44:29,963:INFO:Fitting Model
2025-08-19 18:44:29,983:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:44:29,984:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000371 seconds.
2025-08-19 18:44:29,984:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:44:29,984:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:44:29,984:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:44:29,984:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:44:29,984:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:44:29,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:29,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:44:30,404:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:44:30,404:INFO:create_model() successfully completed......................................
2025-08-19 18:44:30,464:INFO:_master_model_container: 17
2025-08-19 18:44:30,464:INFO:_display_container: 3
2025-08-19 18:44:30,468:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:44:30,468:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:30,530:INFO:Initializing predict_model()
2025-08-19 18:44:30,531:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30784fa30>)
2025-08-19 18:44:30,531:INFO:Checking exceptions
2025-08-19 18:44:30,531:INFO:Preloading libraries
2025-08-19 18:44:30,531:INFO:Set up data.
2025-08-19 18:44:30,534:INFO:Set up index.
2025-08-19 18:44:30,611:INFO:Initializing create_model()
2025-08-19 18:44:30,611:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:30,611:INFO:Checking exceptions
2025-08-19 18:44:30,612:INFO:Importing libraries
2025-08-19 18:44:30,612:INFO:Copying training dataset
2025-08-19 18:44:30,613:INFO:Defining folds
2025-08-19 18:44:30,613:INFO:Declaring metric variables
2025-08-19 18:44:30,613:INFO:Importing untrained model
2025-08-19 18:44:30,614:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:44:30,614:INFO:Starting cross validation
2025-08-19 18:44:30,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:38,411:INFO:Calculating mean and std
2025-08-19 18:44:38,412:INFO:Creating metrics dataframe
2025-08-19 18:44:38,413:INFO:Finalizing model
2025-08-19 18:44:39,670:INFO:Uploading results into container
2025-08-19 18:44:39,671:INFO:Uploading model into container now
2025-08-19 18:44:39,671:INFO:_master_model_container: 18
2025-08-19 18:44:39,671:INFO:_display_container: 5
2025-08-19 18:44:39,671:INFO:<catboost.core.CatBoostClassifier object at 0x3099180a0>
2025-08-19 18:44:39,671:INFO:create_model() successfully completed......................................
2025-08-19 18:44:39,729:INFO:Initializing finalize_model()
2025-08-19 18:44:39,729:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=<catboost.core.CatBoostClassifier object at 0x3099180a0>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:39,729:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x3099180a0>
2025-08-19 18:44:39,730:INFO:Initializing create_model()
2025-08-19 18:44:39,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=<catboost.core.CatBoostClassifier object at 0x3099180a0>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:39,730:INFO:Checking exceptions
2025-08-19 18:44:39,731:INFO:Importing libraries
2025-08-19 18:44:39,731:INFO:Copying training dataset
2025-08-19 18:44:39,731:INFO:Defining folds
2025-08-19 18:44:39,731:INFO:Declaring metric variables
2025-08-19 18:44:39,731:INFO:Importing untrained model
2025-08-19 18:44:39,731:INFO:Declaring custom model
2025-08-19 18:44:39,732:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:44:39,732:INFO:Cross validation set to False
2025-08-19 18:44:39,732:INFO:Fitting Model
2025-08-19 18:44:40,981:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30796e260>)],
         verbose=False)
2025-08-19 18:44:40,981:INFO:create_model() successfully completed......................................
2025-08-19 18:44:41,040:INFO:_master_model_container: 18
2025-08-19 18:44:41,040:INFO:_display_container: 5
2025-08-19 18:44:41,043:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30796e260>)],
         verbose=False)
2025-08-19 18:44:41,043:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:41,101:INFO:Initializing predict_model()
2025-08-19 18:44:41,101:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x30796e260>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30784fa30>)
2025-08-19 18:44:41,101:INFO:Checking exceptions
2025-08-19 18:44:41,101:INFO:Preloading libraries
2025-08-19 18:44:41,102:INFO:Set up data.
2025-08-19 18:44:41,105:INFO:Set up index.
2025-08-19 18:44:41,178:INFO:Initializing create_model()
2025-08-19 18:44:41,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:41,179:INFO:Checking exceptions
2025-08-19 18:44:41,179:INFO:Importing libraries
2025-08-19 18:44:41,179:INFO:Copying training dataset
2025-08-19 18:44:41,181:INFO:Defining folds
2025-08-19 18:44:41,181:INFO:Declaring metric variables
2025-08-19 18:44:41,181:INFO:Importing untrained model
2025-08-19 18:44:41,181:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:44:41,182:INFO:Starting cross validation
2025-08-19 18:44:41,182:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:42,286:INFO:Calculating mean and std
2025-08-19 18:44:42,287:INFO:Creating metrics dataframe
2025-08-19 18:44:42,287:INFO:Finalizing model
2025-08-19 18:44:42,747:INFO:Uploading results into container
2025-08-19 18:44:42,748:INFO:Uploading model into container now
2025-08-19 18:44:42,748:INFO:_master_model_container: 19
2025-08-19 18:44:42,748:INFO:_display_container: 7
2025-08-19 18:44:42,748:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:44:42,748:INFO:create_model() successfully completed......................................
2025-08-19 18:44:42,802:INFO:Initializing finalize_model()
2025-08-19 18:44:42,802:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:42,802:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:44:42,804:INFO:Initializing create_model()
2025-08-19 18:44:42,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:42,804:INFO:Checking exceptions
2025-08-19 18:44:42,805:INFO:Importing libraries
2025-08-19 18:44:42,805:INFO:Copying training dataset
2025-08-19 18:44:42,805:INFO:Defining folds
2025-08-19 18:44:42,805:INFO:Declaring metric variables
2025-08-19 18:44:42,805:INFO:Importing untrained model
2025-08-19 18:44:42,805:INFO:Declaring custom model
2025-08-19 18:44:42,805:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:44:42,806:INFO:Cross validation set to False
2025-08-19 18:44:42,806:INFO:Fitting Model
2025-08-19 18:44:43,394:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:44:43,394:INFO:create_model() successfully completed......................................
2025-08-19 18:44:43,448:INFO:_master_model_container: 19
2025-08-19 18:44:43,448:INFO:_display_container: 7
2025-08-19 18:44:43,452:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:44:43,452:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:43,509:INFO:Initializing predict_model()
2025-08-19 18:44:43,509:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30784fa30>)
2025-08-19 18:44:43,509:INFO:Checking exceptions
2025-08-19 18:44:43,509:INFO:Preloading libraries
2025-08-19 18:44:43,510:INFO:Set up data.
2025-08-19 18:44:43,513:INFO:Set up index.
2025-08-19 18:44:43,583:INFO:Initializing create_model()
2025-08-19 18:44:43,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:43,583:INFO:Checking exceptions
2025-08-19 18:44:43,584:INFO:Importing libraries
2025-08-19 18:44:43,584:INFO:Copying training dataset
2025-08-19 18:44:43,585:INFO:Defining folds
2025-08-19 18:44:43,585:INFO:Declaring metric variables
2025-08-19 18:44:43,586:INFO:Importing untrained model
2025-08-19 18:44:43,586:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:44:43,586:INFO:Starting cross validation
2025-08-19 18:44:43,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:44,010:INFO:Calculating mean and std
2025-08-19 18:44:44,010:INFO:Creating metrics dataframe
2025-08-19 18:44:44,011:INFO:Finalizing model
2025-08-19 18:44:44,119:INFO:Uploading results into container
2025-08-19 18:44:44,119:INFO:Uploading model into container now
2025-08-19 18:44:44,119:INFO:_master_model_container: 20
2025-08-19 18:44:44,120:INFO:_display_container: 9
2025-08-19 18:44:44,120:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:44:44,120:INFO:create_model() successfully completed......................................
2025-08-19 18:44:44,181:INFO:Initializing finalize_model()
2025-08-19 18:44:44,181:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:44,181:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:44:44,183:INFO:Initializing create_model()
2025-08-19 18:44:44,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:44,183:INFO:Checking exceptions
2025-08-19 18:44:44,183:INFO:Importing libraries
2025-08-19 18:44:44,183:INFO:Copying training dataset
2025-08-19 18:44:44,183:INFO:Defining folds
2025-08-19 18:44:44,183:INFO:Declaring metric variables
2025-08-19 18:44:44,184:INFO:Importing untrained model
2025-08-19 18:44:44,184:INFO:Declaring custom model
2025-08-19 18:44:44,184:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:44:44,184:INFO:Cross validation set to False
2025-08-19 18:44:44,184:INFO:Fitting Model
2025-08-19 18:44:44,304:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:44:44,304:INFO:create_model() successfully completed......................................
2025-08-19 18:44:44,361:INFO:_master_model_container: 20
2025-08-19 18:44:44,361:INFO:_display_container: 9
2025-08-19 18:44:44,366:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:44:44,366:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:44,424:INFO:Initializing predict_model()
2025-08-19 18:44:44,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30784fa30>)
2025-08-19 18:44:44,424:INFO:Checking exceptions
2025-08-19 18:44:44,424:INFO:Preloading libraries
2025-08-19 18:44:44,424:INFO:Set up data.
2025-08-19 18:44:44,427:INFO:Set up index.
2025-08-19 18:44:44,525:INFO:Initializing create_model()
2025-08-19 18:44:44,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:44,525:INFO:Checking exceptions
2025-08-19 18:44:44,526:INFO:Importing libraries
2025-08-19 18:44:44,526:INFO:Copying training dataset
2025-08-19 18:44:44,527:INFO:Defining folds
2025-08-19 18:44:44,527:INFO:Declaring metric variables
2025-08-19 18:44:44,527:INFO:Importing untrained model
2025-08-19 18:44:44,528:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:44:44,528:INFO:Starting cross validation
2025-08-19 18:44:44,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:44,732:INFO:Calculating mean and std
2025-08-19 18:44:44,732:INFO:Creating metrics dataframe
2025-08-19 18:44:44,733:INFO:Finalizing model
2025-08-19 18:44:44,878:INFO:Uploading results into container
2025-08-19 18:44:44,878:INFO:Uploading model into container now
2025-08-19 18:44:44,878:INFO:_master_model_container: 21
2025-08-19 18:44:44,878:INFO:_display_container: 11
2025-08-19 18:44:44,879:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:44:44,879:INFO:create_model() successfully completed......................................
2025-08-19 18:44:44,933:INFO:Initializing finalize_model()
2025-08-19 18:44:44,934:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:44,934:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:44:44,935:INFO:Initializing create_model()
2025-08-19 18:44:44,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:44,935:INFO:Checking exceptions
2025-08-19 18:44:44,936:INFO:Importing libraries
2025-08-19 18:44:44,936:INFO:Copying training dataset
2025-08-19 18:44:44,936:INFO:Defining folds
2025-08-19 18:44:44,936:INFO:Declaring metric variables
2025-08-19 18:44:44,936:INFO:Importing untrained model
2025-08-19 18:44:44,936:INFO:Declaring custom model
2025-08-19 18:44:44,937:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:44:44,937:INFO:Cross validation set to False
2025-08-19 18:44:44,937:INFO:Fitting Model
2025-08-19 18:44:45,102:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:44:45,102:INFO:create_model() successfully completed......................................
2025-08-19 18:44:45,156:INFO:_master_model_container: 21
2025-08-19 18:44:45,156:INFO:_display_container: 11
2025-08-19 18:44:45,161:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:44:45,162:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:45,341:INFO:Initializing predict_model()
2025-08-19 18:44:45,342:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30784fa30>)
2025-08-19 18:44:45,342:INFO:Checking exceptions
2025-08-19 18:44:45,342:INFO:Preloading libraries
2025-08-19 18:44:45,342:INFO:Set up data.
2025-08-19 18:44:45,347:INFO:Set up index.
2025-08-19 18:44:45,943:INFO:Initializing create_model()
2025-08-19 18:44:45,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:45,944:INFO:Checking exceptions
2025-08-19 18:44:45,945:INFO:Importing libraries
2025-08-19 18:44:45,945:INFO:Copying training dataset
2025-08-19 18:44:45,950:INFO:Defining folds
2025-08-19 18:44:45,950:INFO:Declaring metric variables
2025-08-19 18:44:45,950:INFO:Importing untrained model
2025-08-19 18:44:45,950:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:44:45,951:INFO:Starting cross validation
2025-08-19 18:44:45,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:46,004:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,011:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,046:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,050:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,055:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,106:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,115:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,150:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,386:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,434:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,584:INFO:Calculating mean and std
2025-08-19 18:44:46,584:INFO:Creating metrics dataframe
2025-08-19 18:44:46,585:INFO:Finalizing model
2025-08-19 18:44:46,607:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,726:INFO:Uploading results into container
2025-08-19 18:44:46,726:INFO:Uploading model into container now
2025-08-19 18:44:46,727:INFO:_master_model_container: 22
2025-08-19 18:44:46,727:INFO:_display_container: 13
2025-08-19 18:44:46,727:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:44:46,727:INFO:create_model() successfully completed......................................
2025-08-19 18:44:46,790:INFO:Initializing finalize_model()
2025-08-19 18:44:46,790:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:46,791:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:44:46,792:INFO:Initializing create_model()
2025-08-19 18:44:46,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:46,792:INFO:Checking exceptions
2025-08-19 18:44:46,793:INFO:Importing libraries
2025-08-19 18:44:46,793:INFO:Copying training dataset
2025-08-19 18:44:46,793:INFO:Defining folds
2025-08-19 18:44:46,793:INFO:Declaring metric variables
2025-08-19 18:44:46,793:INFO:Importing untrained model
2025-08-19 18:44:46,793:INFO:Declaring custom model
2025-08-19 18:44:46,793:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:44:46,794:INFO:Cross validation set to False
2025-08-19 18:44:46,794:INFO:Fitting Model
2025-08-19 18:44:46,814:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:46,973:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:44:46,973:INFO:create_model() successfully completed......................................
2025-08-19 18:44:47,041:INFO:_master_model_container: 22
2025-08-19 18:44:47,041:INFO:_display_container: 13
2025-08-19 18:44:47,045:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:44:47,045:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:47,103:INFO:Initializing predict_model()
2025-08-19 18:44:47,103:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30784fa30>)
2025-08-19 18:44:47,103:INFO:Checking exceptions
2025-08-19 18:44:47,103:INFO:Preloading libraries
2025-08-19 18:44:47,103:INFO:Set up data.
2025-08-19 18:44:47,107:INFO:Set up index.
2025-08-19 18:44:47,184:INFO:Initializing create_model()
2025-08-19 18:44:47,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:47,184:INFO:Checking exceptions
2025-08-19 18:44:47,184:INFO:Importing libraries
2025-08-19 18:44:47,185:INFO:Copying training dataset
2025-08-19 18:44:47,186:INFO:Defining folds
2025-08-19 18:44:47,186:INFO:Declaring metric variables
2025-08-19 18:44:47,186:INFO:Importing untrained model
2025-08-19 18:44:47,186:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:44:47,186:INFO:Starting cross validation
2025-08-19 18:44:47,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:47,307:INFO:Calculating mean and std
2025-08-19 18:44:47,307:INFO:Creating metrics dataframe
2025-08-19 18:44:47,308:INFO:Finalizing model
2025-08-19 18:44:47,334:INFO:Uploading results into container
2025-08-19 18:44:47,334:INFO:Uploading model into container now
2025-08-19 18:44:47,334:INFO:_master_model_container: 23
2025-08-19 18:44:47,334:INFO:_display_container: 15
2025-08-19 18:44:47,334:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:44:47,334:INFO:create_model() successfully completed......................................
2025-08-19 18:44:47,409:INFO:Initializing finalize_model()
2025-08-19 18:44:47,410:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:47,410:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:44:47,411:INFO:Initializing create_model()
2025-08-19 18:44:47,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:47,412:INFO:Checking exceptions
2025-08-19 18:44:47,413:INFO:Importing libraries
2025-08-19 18:44:47,413:INFO:Copying training dataset
2025-08-19 18:44:47,413:INFO:Defining folds
2025-08-19 18:44:47,413:INFO:Declaring metric variables
2025-08-19 18:44:47,413:INFO:Importing untrained model
2025-08-19 18:44:47,413:INFO:Declaring custom model
2025-08-19 18:44:47,414:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:44:47,414:INFO:Cross validation set to False
2025-08-19 18:44:47,414:INFO:Fitting Model
2025-08-19 18:44:47,448:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:44:47,448:INFO:create_model() successfully completed......................................
2025-08-19 18:44:47,517:INFO:_master_model_container: 23
2025-08-19 18:44:47,518:INFO:_display_container: 15
2025-08-19 18:44:47,522:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:44:47,522:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:47,588:INFO:Initializing predict_model()
2025-08-19 18:44:47,588:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:47,588:INFO:Checking exceptions
2025-08-19 18:44:47,588:INFO:Preloading libraries
2025-08-19 18:44:47,588:INFO:Set up data.
2025-08-19 18:44:47,592:INFO:Set up index.
2025-08-19 18:44:47,667:INFO:Initializing create_model()
2025-08-19 18:44:47,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:47,667:INFO:Checking exceptions
2025-08-19 18:44:47,668:INFO:Importing libraries
2025-08-19 18:44:47,668:INFO:Copying training dataset
2025-08-19 18:44:47,670:INFO:Defining folds
2025-08-19 18:44:47,670:INFO:Declaring metric variables
2025-08-19 18:44:47,670:INFO:Importing untrained model
2025-08-19 18:44:47,670:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:44:47,670:INFO:Starting cross validation
2025-08-19 18:44:47,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:48,040:INFO:Calculating mean and std
2025-08-19 18:44:48,040:INFO:Creating metrics dataframe
2025-08-19 18:44:48,041:INFO:Finalizing model
2025-08-19 18:44:48,123:INFO:Uploading results into container
2025-08-19 18:44:48,123:INFO:Uploading model into container now
2025-08-19 18:44:48,123:INFO:_master_model_container: 24
2025-08-19 18:44:48,123:INFO:_display_container: 17
2025-08-19 18:44:48,124:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:44:48,124:INFO:create_model() successfully completed......................................
2025-08-19 18:44:48,177:INFO:Initializing finalize_model()
2025-08-19 18:44:48,177:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:48,177:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:44:48,178:INFO:Initializing create_model()
2025-08-19 18:44:48,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:48,178:INFO:Checking exceptions
2025-08-19 18:44:48,179:INFO:Importing libraries
2025-08-19 18:44:48,179:INFO:Copying training dataset
2025-08-19 18:44:48,179:INFO:Defining folds
2025-08-19 18:44:48,179:INFO:Declaring metric variables
2025-08-19 18:44:48,179:INFO:Importing untrained model
2025-08-19 18:44:48,179:INFO:Declaring custom model
2025-08-19 18:44:48,179:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:44:48,180:INFO:Cross validation set to False
2025-08-19 18:44:48,180:INFO:Fitting Model
2025-08-19 18:44:48,266:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:44:48,266:INFO:create_model() successfully completed......................................
2025-08-19 18:44:48,319:INFO:_master_model_container: 24
2025-08-19 18:44:48,319:INFO:_display_container: 17
2025-08-19 18:44:48,323:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:44:48,323:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:48,382:INFO:Initializing predict_model()
2025-08-19 18:44:48,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:48,382:INFO:Checking exceptions
2025-08-19 18:44:48,382:INFO:Preloading libraries
2025-08-19 18:44:48,382:INFO:Set up data.
2025-08-19 18:44:48,386:INFO:Set up index.
2025-08-19 18:44:48,485:INFO:Initializing create_model()
2025-08-19 18:44:48,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:48,485:INFO:Checking exceptions
2025-08-19 18:44:48,486:INFO:Importing libraries
2025-08-19 18:44:48,486:INFO:Copying training dataset
2025-08-19 18:44:48,487:INFO:Defining folds
2025-08-19 18:44:48,487:INFO:Declaring metric variables
2025-08-19 18:44:48,487:INFO:Importing untrained model
2025-08-19 18:44:48,487:INFO:Dummy Classifier Imported successfully
2025-08-19 18:44:48,487:INFO:Starting cross validation
2025-08-19 18:44:48,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:48,525:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,525:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,533:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,544:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,546:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,555:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,559:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,559:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,566:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,575:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,579:INFO:Calculating mean and std
2025-08-19 18:44:48,580:INFO:Creating metrics dataframe
2025-08-19 18:44:48,580:INFO:Finalizing model
2025-08-19 18:44:48,598:INFO:Uploading results into container
2025-08-19 18:44:48,598:INFO:Uploading model into container now
2025-08-19 18:44:48,598:INFO:_master_model_container: 25
2025-08-19 18:44:48,598:INFO:_display_container: 19
2025-08-19 18:44:48,598:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:44:48,598:INFO:create_model() successfully completed......................................
2025-08-19 18:44:48,660:INFO:Initializing finalize_model()
2025-08-19 18:44:48,660:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:48,660:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:44:48,661:INFO:Initializing create_model()
2025-08-19 18:44:48,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:48,661:INFO:Checking exceptions
2025-08-19 18:44:48,662:INFO:Importing libraries
2025-08-19 18:44:48,662:INFO:Copying training dataset
2025-08-19 18:44:48,662:INFO:Defining folds
2025-08-19 18:44:48,662:INFO:Declaring metric variables
2025-08-19 18:44:48,662:INFO:Importing untrained model
2025-08-19 18:44:48,662:INFO:Declaring custom model
2025-08-19 18:44:48,663:INFO:Dummy Classifier Imported successfully
2025-08-19 18:44:48,663:INFO:Cross validation set to False
2025-08-19 18:44:48,663:INFO:Fitting Model
2025-08-19 18:44:48,687:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:44:48,687:INFO:create_model() successfully completed......................................
2025-08-19 18:44:48,745:INFO:_master_model_container: 25
2025-08-19 18:44:48,745:INFO:_display_container: 19
2025-08-19 18:44:48,748:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:44:48,748:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:48,811:INFO:Initializing predict_model()
2025-08-19 18:44:48,811:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:48,811:INFO:Checking exceptions
2025-08-19 18:44:48,811:INFO:Preloading libraries
2025-08-19 18:44:48,811:INFO:Set up data.
2025-08-19 18:44:48,814:INFO:Set up index.
2025-08-19 18:44:48,828:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:48,893:INFO:Initializing create_model()
2025-08-19 18:44:48,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:48,893:INFO:Checking exceptions
2025-08-19 18:44:48,894:INFO:Importing libraries
2025-08-19 18:44:48,894:INFO:Copying training dataset
2025-08-19 18:44:48,896:INFO:Defining folds
2025-08-19 18:44:48,896:INFO:Declaring metric variables
2025-08-19 18:44:48,896:INFO:Importing untrained model
2025-08-19 18:44:48,896:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:44:48,896:INFO:Starting cross validation
2025-08-19 18:44:48,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:49,015:INFO:Calculating mean and std
2025-08-19 18:44:49,016:INFO:Creating metrics dataframe
2025-08-19 18:44:49,017:INFO:Finalizing model
2025-08-19 18:44:49,037:INFO:Uploading results into container
2025-08-19 18:44:49,037:INFO:Uploading model into container now
2025-08-19 18:44:49,037:INFO:_master_model_container: 26
2025-08-19 18:44:49,037:INFO:_display_container: 21
2025-08-19 18:44:49,038:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:44:49,038:INFO:create_model() successfully completed......................................
2025-08-19 18:44:49,095:INFO:Initializing finalize_model()
2025-08-19 18:44:49,095:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:49,095:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:44:49,096:INFO:Initializing create_model()
2025-08-19 18:44:49,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:49,096:INFO:Checking exceptions
2025-08-19 18:44:49,097:INFO:Importing libraries
2025-08-19 18:44:49,097:INFO:Copying training dataset
2025-08-19 18:44:49,097:INFO:Defining folds
2025-08-19 18:44:49,097:INFO:Declaring metric variables
2025-08-19 18:44:49,097:INFO:Importing untrained model
2025-08-19 18:44:49,097:INFO:Declaring custom model
2025-08-19 18:44:49,097:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:44:49,098:INFO:Cross validation set to False
2025-08-19 18:44:49,098:INFO:Fitting Model
2025-08-19 18:44:49,135:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:44:49,135:INFO:create_model() successfully completed......................................
2025-08-19 18:44:49,219:INFO:_master_model_container: 26
2025-08-19 18:44:49,220:INFO:_display_container: 21
2025-08-19 18:44:49,224:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:44:49,224:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:49,281:INFO:Initializing predict_model()
2025-08-19 18:44:49,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:49,281:INFO:Checking exceptions
2025-08-19 18:44:49,281:INFO:Preloading libraries
2025-08-19 18:44:49,281:INFO:Set up data.
2025-08-19 18:44:49,285:INFO:Set up index.
2025-08-19 18:44:49,361:INFO:Initializing create_model()
2025-08-19 18:44:49,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:49,361:INFO:Checking exceptions
2025-08-19 18:44:49,362:INFO:Importing libraries
2025-08-19 18:44:49,362:INFO:Copying training dataset
2025-08-19 18:44:49,363:INFO:Defining folds
2025-08-19 18:44:49,363:INFO:Declaring metric variables
2025-08-19 18:44:49,364:INFO:Importing untrained model
2025-08-19 18:44:49,364:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:44:49,364:INFO:Starting cross validation
2025-08-19 18:44:49,364:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:49,395:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,397:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,397:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,403:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,404:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,410:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,430:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,439:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,441:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,444:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,469:INFO:Calculating mean and std
2025-08-19 18:44:49,469:INFO:Creating metrics dataframe
2025-08-19 18:44:49,470:INFO:Finalizing model
2025-08-19 18:44:49,489:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,504:INFO:Uploading results into container
2025-08-19 18:44:49,505:INFO:Uploading model into container now
2025-08-19 18:44:49,505:INFO:_master_model_container: 27
2025-08-19 18:44:49,505:INFO:_display_container: 23
2025-08-19 18:44:49,505:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:44:49,505:INFO:create_model() successfully completed......................................
2025-08-19 18:44:49,600:INFO:Initializing finalize_model()
2025-08-19 18:44:49,600:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:49,600:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:44:49,603:INFO:Initializing create_model()
2025-08-19 18:44:49,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:49,603:INFO:Checking exceptions
2025-08-19 18:44:49,604:INFO:Importing libraries
2025-08-19 18:44:49,604:INFO:Copying training dataset
2025-08-19 18:44:49,607:INFO:Defining folds
2025-08-19 18:44:49,607:INFO:Declaring metric variables
2025-08-19 18:44:49,607:INFO:Importing untrained model
2025-08-19 18:44:49,607:INFO:Declaring custom model
2025-08-19 18:44:49,607:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:44:49,608:INFO:Cross validation set to False
2025-08-19 18:44:49,608:INFO:Fitting Model
2025-08-19 18:44:49,647:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:49,660:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:44:49,660:INFO:create_model() successfully completed......................................
2025-08-19 18:44:49,797:INFO:_master_model_container: 27
2025-08-19 18:44:49,797:INFO:_display_container: 23
2025-08-19 18:44:49,815:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:44:49,816:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:49,922:INFO:Initializing predict_model()
2025-08-19 18:44:49,922:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:49,922:INFO:Checking exceptions
2025-08-19 18:44:49,922:INFO:Preloading libraries
2025-08-19 18:44:49,922:INFO:Set up data.
2025-08-19 18:44:49,929:INFO:Set up index.
2025-08-19 18:44:50,031:INFO:Initializing create_model()
2025-08-19 18:44:50,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:50,031:INFO:Checking exceptions
2025-08-19 18:44:50,032:INFO:Importing libraries
2025-08-19 18:44:50,032:INFO:Copying training dataset
2025-08-19 18:44:50,034:INFO:Defining folds
2025-08-19 18:44:50,034:INFO:Declaring metric variables
2025-08-19 18:44:50,034:INFO:Importing untrained model
2025-08-19 18:44:50,034:INFO:Logistic Regression Imported successfully
2025-08-19 18:44:50,034:INFO:Starting cross validation
2025-08-19 18:44:50,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:50,151:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:50,156:INFO:Calculating mean and std
2025-08-19 18:44:50,156:INFO:Creating metrics dataframe
2025-08-19 18:44:50,158:INFO:Finalizing model
2025-08-19 18:44:50,190:INFO:Uploading results into container
2025-08-19 18:44:50,190:INFO:Uploading model into container now
2025-08-19 18:44:50,190:INFO:_master_model_container: 28
2025-08-19 18:44:50,190:INFO:_display_container: 25
2025-08-19 18:44:50,190:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:44:50,191:INFO:create_model() successfully completed......................................
2025-08-19 18:44:50,275:INFO:Initializing finalize_model()
2025-08-19 18:44:50,275:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:50,275:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:44:50,277:INFO:Initializing create_model()
2025-08-19 18:44:50,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:50,277:INFO:Checking exceptions
2025-08-19 18:44:50,277:INFO:Importing libraries
2025-08-19 18:44:50,277:INFO:Copying training dataset
2025-08-19 18:44:50,277:INFO:Defining folds
2025-08-19 18:44:50,277:INFO:Declaring metric variables
2025-08-19 18:44:50,278:INFO:Importing untrained model
2025-08-19 18:44:50,278:INFO:Declaring custom model
2025-08-19 18:44:50,278:INFO:Logistic Regression Imported successfully
2025-08-19 18:44:50,278:INFO:Cross validation set to False
2025-08-19 18:44:50,278:INFO:Fitting Model
2025-08-19 18:44:50,344:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:44:50,344:INFO:create_model() successfully completed......................................
2025-08-19 18:44:50,401:INFO:_master_model_container: 28
2025-08-19 18:44:50,401:INFO:_display_container: 25
2025-08-19 18:44:50,405:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:44:50,405:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:50,473:INFO:Initializing predict_model()
2025-08-19 18:44:50,473:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:50,473:INFO:Checking exceptions
2025-08-19 18:44:50,473:INFO:Preloading libraries
2025-08-19 18:44:50,474:INFO:Set up data.
2025-08-19 18:44:50,480:INFO:Set up index.
2025-08-19 18:44:50,499:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:50,583:INFO:Initializing create_model()
2025-08-19 18:44:50,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:50,583:INFO:Checking exceptions
2025-08-19 18:44:50,583:INFO:Importing libraries
2025-08-19 18:44:50,583:INFO:Copying training dataset
2025-08-19 18:44:50,585:INFO:Defining folds
2025-08-19 18:44:50,585:INFO:Declaring metric variables
2025-08-19 18:44:50,585:INFO:Importing untrained model
2025-08-19 18:44:50,585:INFO:Ridge Classifier Imported successfully
2025-08-19 18:44:50,585:INFO:Starting cross validation
2025-08-19 18:44:50,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:50,707:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:50,712:INFO:Calculating mean and std
2025-08-19 18:44:50,712:INFO:Creating metrics dataframe
2025-08-19 18:44:50,713:INFO:Finalizing model
2025-08-19 18:44:50,735:INFO:Uploading results into container
2025-08-19 18:44:50,735:INFO:Uploading model into container now
2025-08-19 18:44:50,736:INFO:_master_model_container: 29
2025-08-19 18:44:50,736:INFO:_display_container: 27
2025-08-19 18:44:50,736:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:44:50,737:INFO:create_model() successfully completed......................................
2025-08-19 18:44:50,812:INFO:Initializing finalize_model()
2025-08-19 18:44:50,812:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:50,812:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:44:50,813:INFO:Initializing create_model()
2025-08-19 18:44:50,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:50,813:INFO:Checking exceptions
2025-08-19 18:44:50,814:INFO:Importing libraries
2025-08-19 18:44:50,814:INFO:Copying training dataset
2025-08-19 18:44:50,814:INFO:Defining folds
2025-08-19 18:44:50,814:INFO:Declaring metric variables
2025-08-19 18:44:50,814:INFO:Importing untrained model
2025-08-19 18:44:50,814:INFO:Declaring custom model
2025-08-19 18:44:50,815:INFO:Ridge Classifier Imported successfully
2025-08-19 18:44:50,815:INFO:Cross validation set to False
2025-08-19 18:44:50,815:INFO:Fitting Model
2025-08-19 18:44:50,843:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:44:50,843:INFO:create_model() successfully completed......................................
2025-08-19 18:44:50,900:INFO:_master_model_container: 29
2025-08-19 18:44:50,900:INFO:_display_container: 27
2025-08-19 18:44:50,904:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:44:50,904:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:50,963:INFO:Initializing predict_model()
2025-08-19 18:44:50,963:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:50,963:INFO:Checking exceptions
2025-08-19 18:44:50,963:INFO:Preloading libraries
2025-08-19 18:44:50,963:INFO:Set up data.
2025-08-19 18:44:50,967:INFO:Set up index.
2025-08-19 18:44:50,983:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:51,042:INFO:Initializing create_model()
2025-08-19 18:44:51,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:51,042:INFO:Checking exceptions
2025-08-19 18:44:51,043:INFO:Importing libraries
2025-08-19 18:44:51,043:INFO:Copying training dataset
2025-08-19 18:44:51,044:INFO:Defining folds
2025-08-19 18:44:51,044:INFO:Declaring metric variables
2025-08-19 18:44:51,044:INFO:Importing untrained model
2025-08-19 18:44:51,044:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:44:51,045:INFO:Starting cross validation
2025-08-19 18:44:51,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:51,165:INFO:Calculating mean and std
2025-08-19 18:44:51,166:INFO:Creating metrics dataframe
2025-08-19 18:44:51,167:INFO:Finalizing model
2025-08-19 18:44:51,190:INFO:Uploading results into container
2025-08-19 18:44:51,190:INFO:Uploading model into container now
2025-08-19 18:44:51,191:INFO:_master_model_container: 30
2025-08-19 18:44:51,191:INFO:_display_container: 29
2025-08-19 18:44:51,191:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:44:51,191:INFO:create_model() successfully completed......................................
2025-08-19 18:44:51,291:INFO:Initializing finalize_model()
2025-08-19 18:44:51,291:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:51,292:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:44:51,296:INFO:Initializing create_model()
2025-08-19 18:44:51,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:51,296:INFO:Checking exceptions
2025-08-19 18:44:51,298:INFO:Importing libraries
2025-08-19 18:44:51,298:INFO:Copying training dataset
2025-08-19 18:44:51,298:INFO:Defining folds
2025-08-19 18:44:51,298:INFO:Declaring metric variables
2025-08-19 18:44:51,298:INFO:Importing untrained model
2025-08-19 18:44:51,298:INFO:Declaring custom model
2025-08-19 18:44:51,299:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:44:51,300:INFO:Cross validation set to False
2025-08-19 18:44:51,300:INFO:Fitting Model
2025-08-19 18:44:51,403:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:44:51,404:INFO:create_model() successfully completed......................................
2025-08-19 18:44:51,503:INFO:_master_model_container: 30
2025-08-19 18:44:51,503:INFO:_display_container: 29
2025-08-19 18:44:51,507:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:44:51,507:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:51,587:INFO:Initializing predict_model()
2025-08-19 18:44:51,587:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:51,587:INFO:Checking exceptions
2025-08-19 18:44:51,587:INFO:Preloading libraries
2025-08-19 18:44:51,587:INFO:Set up data.
2025-08-19 18:44:51,593:INFO:Set up index.
2025-08-19 18:44:51,629:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:51,700:INFO:Initializing create_model()
2025-08-19 18:44:51,700:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:51,700:INFO:Checking exceptions
2025-08-19 18:44:51,701:INFO:Importing libraries
2025-08-19 18:44:51,701:INFO:Copying training dataset
2025-08-19 18:44:51,702:INFO:Defining folds
2025-08-19 18:44:51,702:INFO:Declaring metric variables
2025-08-19 18:44:51,702:INFO:Importing untrained model
2025-08-19 18:44:51,703:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:44:51,703:INFO:Starting cross validation
2025-08-19 18:44:51,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:51,808:INFO:Calculating mean and std
2025-08-19 18:44:51,808:INFO:Creating metrics dataframe
2025-08-19 18:44:51,809:INFO:Finalizing model
2025-08-19 18:44:51,829:INFO:Uploading results into container
2025-08-19 18:44:51,829:INFO:Uploading model into container now
2025-08-19 18:44:51,829:INFO:_master_model_container: 31
2025-08-19 18:44:51,829:INFO:_display_container: 31
2025-08-19 18:44:51,830:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:44:51,830:INFO:create_model() successfully completed......................................
2025-08-19 18:44:51,883:INFO:Initializing finalize_model()
2025-08-19 18:44:51,883:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:51,883:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:44:51,884:INFO:Initializing create_model()
2025-08-19 18:44:51,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:51,884:INFO:Checking exceptions
2025-08-19 18:44:51,885:INFO:Importing libraries
2025-08-19 18:44:51,885:INFO:Copying training dataset
2025-08-19 18:44:51,885:INFO:Defining folds
2025-08-19 18:44:51,885:INFO:Declaring metric variables
2025-08-19 18:44:51,885:INFO:Importing untrained model
2025-08-19 18:44:51,885:INFO:Declaring custom model
2025-08-19 18:44:51,885:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:44:51,886:INFO:Cross validation set to False
2025-08-19 18:44:51,886:INFO:Fitting Model
2025-08-19 18:44:51,910:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:44:51,910:INFO:create_model() successfully completed......................................
2025-08-19 18:44:51,964:INFO:_master_model_container: 31
2025-08-19 18:44:51,964:INFO:_display_container: 31
2025-08-19 18:44:51,968:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:44:51,968:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:52,025:INFO:Initializing predict_model()
2025-08-19 18:44:52,025:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:52,025:INFO:Checking exceptions
2025-08-19 18:44:52,025:INFO:Preloading libraries
2025-08-19 18:44:52,025:INFO:Set up data.
2025-08-19 18:44:52,028:INFO:Set up index.
2025-08-19 18:44:52,098:INFO:Initializing create_model()
2025-08-19 18:44:52,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:52,098:INFO:Checking exceptions
2025-08-19 18:44:52,099:INFO:Importing libraries
2025-08-19 18:44:52,099:INFO:Copying training dataset
2025-08-19 18:44:52,100:INFO:Defining folds
2025-08-19 18:44:52,100:INFO:Declaring metric variables
2025-08-19 18:44:52,100:INFO:Importing untrained model
2025-08-19 18:44:52,100:INFO:Naive Bayes Imported successfully
2025-08-19 18:44:52,100:INFO:Starting cross validation
2025-08-19 18:44:52,101:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:52,196:INFO:Calculating mean and std
2025-08-19 18:44:52,196:INFO:Creating metrics dataframe
2025-08-19 18:44:52,197:INFO:Finalizing model
2025-08-19 18:44:52,215:INFO:Uploading results into container
2025-08-19 18:44:52,215:INFO:Uploading model into container now
2025-08-19 18:44:52,215:INFO:_master_model_container: 32
2025-08-19 18:44:52,215:INFO:_display_container: 33
2025-08-19 18:44:52,215:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:44:52,215:INFO:create_model() successfully completed......................................
2025-08-19 18:44:52,267:INFO:Initializing finalize_model()
2025-08-19 18:44:52,268:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:44:52,268:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:44:52,269:INFO:Initializing create_model()
2025-08-19 18:44:52,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:52,269:INFO:Checking exceptions
2025-08-19 18:44:52,269:INFO:Importing libraries
2025-08-19 18:44:52,269:INFO:Copying training dataset
2025-08-19 18:44:52,270:INFO:Defining folds
2025-08-19 18:44:52,270:INFO:Declaring metric variables
2025-08-19 18:44:52,270:INFO:Importing untrained model
2025-08-19 18:44:52,270:INFO:Declaring custom model
2025-08-19 18:44:52,270:INFO:Naive Bayes Imported successfully
2025-08-19 18:44:52,270:INFO:Cross validation set to False
2025-08-19 18:44:52,270:INFO:Fitting Model
2025-08-19 18:44:52,292:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:44:52,292:INFO:create_model() successfully completed......................................
2025-08-19 18:44:52,345:INFO:_master_model_container: 32
2025-08-19 18:44:52,345:INFO:_display_container: 33
2025-08-19 18:44:52,348:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:44:52,348:INFO:finalize_model() successfully completed......................................
2025-08-19 18:44:52,405:INFO:Initializing predict_model()
2025-08-19 18:44:52,405:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3075b3b50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:44:52,405:INFO:Checking exceptions
2025-08-19 18:44:52,405:INFO:Preloading libraries
2025-08-19 18:44:52,405:INFO:Set up data.
2025-08-19 18:44:52,408:INFO:Set up index.
2025-08-19 18:44:52,420:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:52,488:INFO:PyCaret ClassificationExperiment
2025-08-19 18:44:52,488:INFO:Logging name: clf-default-name
2025-08-19 18:44:52,488:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:44:52,488:INFO:version 3.3.2
2025-08-19 18:44:52,488:INFO:Initializing setup()
2025-08-19 18:44:52,488:INFO:self.USI: 200d
2025-08-19 18:44:52,488:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:44:52,489:INFO:Checking environment
2025-08-19 18:44:52,489:INFO:python_version: 3.10.18
2025-08-19 18:44:52,489:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:44:52,489:INFO:machine: arm64
2025-08-19 18:44:52,489:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:44:52,489:INFO:Memory: svmem(total=17179869184, available=3087433728, percent=82.0, used=6038536192, free=193740800, active=2902654976, inactive=2846294016, wired=3135881216)
2025-08-19 18:44:52,489:INFO:Physical Core: 8
2025-08-19 18:44:52,489:INFO:Logical Core: 8
2025-08-19 18:44:52,489:INFO:Checking libraries
2025-08-19 18:44:52,489:INFO:System:
2025-08-19 18:44:52,489:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:44:52,489:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:44:52,489:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:44:52,489:INFO:PyCaret required dependencies:
2025-08-19 18:44:52,489:INFO:                 pip: 25.2
2025-08-19 18:44:52,489:INFO:          setuptools: 80.9.0
2025-08-19 18:44:52,489:INFO:             pycaret: 3.3.2
2025-08-19 18:44:52,489:INFO:             IPython: 8.37.0
2025-08-19 18:44:52,489:INFO:          ipywidgets: 8.1.7
2025-08-19 18:44:52,489:INFO:                tqdm: 4.67.1
2025-08-19 18:44:52,489:INFO:               numpy: 1.25.2
2025-08-19 18:44:52,489:INFO:              pandas: 2.1.4
2025-08-19 18:44:52,489:INFO:              jinja2: 3.1.6
2025-08-19 18:44:52,489:INFO:               scipy: 1.9.3
2025-08-19 18:44:52,489:INFO:              joblib: 1.3.2
2025-08-19 18:44:52,489:INFO:             sklearn: 1.4.2
2025-08-19 18:44:52,489:INFO:                pyod: 2.0.5
2025-08-19 18:44:52,489:INFO:            imblearn: 0.12.4
2025-08-19 18:44:52,489:INFO:   category_encoders: 2.7.0
2025-08-19 18:44:52,489:INFO:            lightgbm: 4.6.0
2025-08-19 18:44:52,489:INFO:               numba: 0.61.2
2025-08-19 18:44:52,489:INFO:            requests: 2.32.4
2025-08-19 18:44:52,489:INFO:          matplotlib: 3.7.2
2025-08-19 18:44:52,489:INFO:          scikitplot: 0.3.7
2025-08-19 18:44:52,489:INFO:         yellowbrick: 1.5
2025-08-19 18:44:52,489:INFO:              plotly: 5.24.1
2025-08-19 18:44:52,489:INFO:    plotly-resampler: Not installed
2025-08-19 18:44:52,489:INFO:             kaleido: 1.0.0
2025-08-19 18:44:52,489:INFO:           schemdraw: 0.15
2025-08-19 18:44:52,489:INFO:         statsmodels: 0.14.5
2025-08-19 18:44:52,489:INFO:              sktime: 0.26.0
2025-08-19 18:44:52,489:INFO:               tbats: 1.1.3
2025-08-19 18:44:52,489:INFO:            pmdarima: 2.0.4
2025-08-19 18:44:52,489:INFO:              psutil: 7.0.0
2025-08-19 18:44:52,489:INFO:          markupsafe: 3.0.2
2025-08-19 18:44:52,489:INFO:             pickle5: Not installed
2025-08-19 18:44:52,489:INFO:         cloudpickle: 3.1.1
2025-08-19 18:44:52,489:INFO:         deprecation: 2.1.0
2025-08-19 18:44:52,489:INFO:              xxhash: 3.5.0
2025-08-19 18:44:52,489:INFO:           wurlitzer: 3.1.1
2025-08-19 18:44:52,489:INFO:PyCaret optional dependencies:
2025-08-19 18:44:52,490:INFO:                shap: 0.48.0
2025-08-19 18:44:52,490:INFO:           interpret: Not installed
2025-08-19 18:44:52,490:INFO:                umap: Not installed
2025-08-19 18:44:52,490:INFO:     ydata_profiling: Not installed
2025-08-19 18:44:52,490:INFO:  explainerdashboard: Not installed
2025-08-19 18:44:52,490:INFO:             autoviz: Not installed
2025-08-19 18:44:52,490:INFO:           fairlearn: Not installed
2025-08-19 18:44:52,490:INFO:          deepchecks: Not installed
2025-08-19 18:44:52,490:INFO:             xgboost: 3.0.4
2025-08-19 18:44:52,490:INFO:            catboost: 1.2.8
2025-08-19 18:44:52,490:INFO:              kmodes: Not installed
2025-08-19 18:44:52,490:INFO:             mlxtend: 0.23.4
2025-08-19 18:44:52,490:INFO:       statsforecast: Not installed
2025-08-19 18:44:52,490:INFO:        tune_sklearn: Not installed
2025-08-19 18:44:52,490:INFO:                 ray: Not installed
2025-08-19 18:44:52,490:INFO:            hyperopt: Not installed
2025-08-19 18:44:52,490:INFO:              optuna: 4.4.0
2025-08-19 18:44:52,490:INFO:               skopt: Not installed
2025-08-19 18:44:52,490:INFO:              mlflow: Not installed
2025-08-19 18:44:52,490:INFO:              gradio: Not installed
2025-08-19 18:44:52,490:INFO:             fastapi: Not installed
2025-08-19 18:44:52,490:INFO:             uvicorn: Not installed
2025-08-19 18:44:52,490:INFO:              m2cgen: Not installed
2025-08-19 18:44:52,490:INFO:           evidently: Not installed
2025-08-19 18:44:52,490:INFO:               fugue: Not installed
2025-08-19 18:44:52,490:INFO:           streamlit: Not installed
2025-08-19 18:44:52,490:INFO:             prophet: Not installed
2025-08-19 18:44:52,490:INFO:None
2025-08-19 18:44:52,490:INFO:Set up data.
2025-08-19 18:44:52,493:INFO:Set up folding strategy.
2025-08-19 18:44:52,493:INFO:Set up train/test split.
2025-08-19 18:44:52,493:INFO:Set up data.
2025-08-19 18:44:52,496:INFO:Set up index.
2025-08-19 18:44:52,497:INFO:Assigning column types.
2025-08-19 18:44:52,498:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:44:52,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:44:52,518:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:44:52,530:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:52,531:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:52,551:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:44:52,551:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:44:52,563:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:52,565:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:52,565:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:44:52,585:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:44:52,597:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:52,598:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:52,619:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:44:52,631:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:52,632:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:52,632:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:44:52,668:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:52,669:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:52,703:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:52,704:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:52,705:INFO:Preparing preprocessing pipeline...
2025-08-19 18:44:52,705:INFO:Set up label encoding.
2025-08-19 18:44:52,705:INFO:Set up simple imputation.
2025-08-19 18:44:52,706:INFO:Set up encoding of categorical features.
2025-08-19 18:44:52,751:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:44:52,754:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:44:52,754:INFO:Creating final display dataframe.
2025-08-19 18:44:52,865:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              200d
2025-08-19 18:44:52,897:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:52,899:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:52,931:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:44:52,932:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:44:52,933:INFO:setup() successfully completed in 0.45s...............
2025-08-19 18:44:52,935:INFO:Initializing compare_models()
2025-08-19 18:44:52,935:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:44:52,935:INFO:Checking exceptions
2025-08-19 18:44:52,936:INFO:Preparing display monitor
2025-08-19 18:44:52,937:INFO:Initializing Logistic Regression
2025-08-19 18:44:52,937:INFO:Total runtime is 6.039937337239583e-07 minutes
2025-08-19 18:44:52,937:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:52,937:INFO:Initializing create_model()
2025-08-19 18:44:52,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:52,937:INFO:Checking exceptions
2025-08-19 18:44:52,937:INFO:Importing libraries
2025-08-19 18:44:52,937:INFO:Copying training dataset
2025-08-19 18:44:52,938:INFO:Defining folds
2025-08-19 18:44:52,938:INFO:Declaring metric variables
2025-08-19 18:44:52,938:INFO:Importing untrained model
2025-08-19 18:44:52,939:INFO:Logistic Regression Imported successfully
2025-08-19 18:44:52,939:INFO:Starting cross validation
2025-08-19 18:44:52,939:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:53,024:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:44:53,033:INFO:Calculating mean and std
2025-08-19 18:44:53,033:INFO:Creating metrics dataframe
2025-08-19 18:44:53,034:INFO:Uploading results into container
2025-08-19 18:44:53,034:INFO:Uploading model into container now
2025-08-19 18:44:53,034:INFO:_master_model_container: 1
2025-08-19 18:44:53,034:INFO:_display_container: 2
2025-08-19 18:44:53,035:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:44:53,035:INFO:create_model() successfully completed......................................
2025-08-19 18:44:53,088:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:53,088:INFO:Creating metrics dataframe
2025-08-19 18:44:53,089:INFO:Initializing K Neighbors Classifier
2025-08-19 18:44:53,090:INFO:Total runtime is 0.0025432666142781576 minutes
2025-08-19 18:44:53,090:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:53,090:INFO:Initializing create_model()
2025-08-19 18:44:53,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:53,090:INFO:Checking exceptions
2025-08-19 18:44:53,090:INFO:Importing libraries
2025-08-19 18:44:53,090:INFO:Copying training dataset
2025-08-19 18:44:53,092:INFO:Defining folds
2025-08-19 18:44:53,092:INFO:Declaring metric variables
2025-08-19 18:44:53,092:INFO:Importing untrained model
2025-08-19 18:44:53,092:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:44:53,092:INFO:Starting cross validation
2025-08-19 18:44:53,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:53,182:INFO:Calculating mean and std
2025-08-19 18:44:53,182:INFO:Creating metrics dataframe
2025-08-19 18:44:53,183:INFO:Uploading results into container
2025-08-19 18:44:53,183:INFO:Uploading model into container now
2025-08-19 18:44:53,183:INFO:_master_model_container: 2
2025-08-19 18:44:53,183:INFO:_display_container: 2
2025-08-19 18:44:53,184:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:44:53,184:INFO:create_model() successfully completed......................................
2025-08-19 18:44:53,238:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:53,238:INFO:Creating metrics dataframe
2025-08-19 18:44:53,239:INFO:Initializing Naive Bayes
2025-08-19 18:44:53,239:INFO:Total runtime is 0.005041269461313884 minutes
2025-08-19 18:44:53,239:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:53,240:INFO:Initializing create_model()
2025-08-19 18:44:53,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:53,240:INFO:Checking exceptions
2025-08-19 18:44:53,240:INFO:Importing libraries
2025-08-19 18:44:53,240:INFO:Copying training dataset
2025-08-19 18:44:53,241:INFO:Defining folds
2025-08-19 18:44:53,241:INFO:Declaring metric variables
2025-08-19 18:44:53,241:INFO:Importing untrained model
2025-08-19 18:44:53,241:INFO:Naive Bayes Imported successfully
2025-08-19 18:44:53,242:INFO:Starting cross validation
2025-08-19 18:44:53,242:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:53,336:INFO:Calculating mean and std
2025-08-19 18:44:53,336:INFO:Creating metrics dataframe
2025-08-19 18:44:53,337:INFO:Uploading results into container
2025-08-19 18:44:53,338:INFO:Uploading model into container now
2025-08-19 18:44:53,338:INFO:_master_model_container: 3
2025-08-19 18:44:53,338:INFO:_display_container: 2
2025-08-19 18:44:53,338:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:44:53,338:INFO:create_model() successfully completed......................................
2025-08-19 18:44:53,392:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:53,392:INFO:Creating metrics dataframe
2025-08-19 18:44:53,393:INFO:Initializing Decision Tree Classifier
2025-08-19 18:44:53,393:INFO:Total runtime is 0.007604487737019857 minutes
2025-08-19 18:44:53,393:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:53,393:INFO:Initializing create_model()
2025-08-19 18:44:53,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:53,393:INFO:Checking exceptions
2025-08-19 18:44:53,393:INFO:Importing libraries
2025-08-19 18:44:53,393:INFO:Copying training dataset
2025-08-19 18:44:53,395:INFO:Defining folds
2025-08-19 18:44:53,395:INFO:Declaring metric variables
2025-08-19 18:44:53,395:INFO:Importing untrained model
2025-08-19 18:44:53,395:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:44:53,395:INFO:Starting cross validation
2025-08-19 18:44:53,396:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:53,501:INFO:Calculating mean and std
2025-08-19 18:44:53,501:INFO:Creating metrics dataframe
2025-08-19 18:44:53,502:INFO:Uploading results into container
2025-08-19 18:44:53,503:INFO:Uploading model into container now
2025-08-19 18:44:53,503:INFO:_master_model_container: 4
2025-08-19 18:44:53,503:INFO:_display_container: 2
2025-08-19 18:44:53,503:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:44:53,503:INFO:create_model() successfully completed......................................
2025-08-19 18:44:53,557:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:53,557:INFO:Creating metrics dataframe
2025-08-19 18:44:53,559:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:44:53,559:INFO:Total runtime is 0.010367751121520996 minutes
2025-08-19 18:44:53,559:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:53,559:INFO:Initializing create_model()
2025-08-19 18:44:53,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:53,559:INFO:Checking exceptions
2025-08-19 18:44:53,559:INFO:Importing libraries
2025-08-19 18:44:53,559:INFO:Copying training dataset
2025-08-19 18:44:53,561:INFO:Defining folds
2025-08-19 18:44:53,561:INFO:Declaring metric variables
2025-08-19 18:44:53,561:INFO:Importing untrained model
2025-08-19 18:44:53,561:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:44:53,562:INFO:Starting cross validation
2025-08-19 18:44:53,562:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:53,666:INFO:Calculating mean and std
2025-08-19 18:44:53,666:INFO:Creating metrics dataframe
2025-08-19 18:44:53,667:INFO:Uploading results into container
2025-08-19 18:44:53,667:INFO:Uploading model into container now
2025-08-19 18:44:53,667:INFO:_master_model_container: 5
2025-08-19 18:44:53,667:INFO:_display_container: 2
2025-08-19 18:44:53,668:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:44:53,668:INFO:create_model() successfully completed......................................
2025-08-19 18:44:53,722:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:53,722:INFO:Creating metrics dataframe
2025-08-19 18:44:53,723:INFO:Initializing Ridge Classifier
2025-08-19 18:44:53,723:INFO:Total runtime is 0.013106282552083334 minutes
2025-08-19 18:44:53,723:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:53,723:INFO:Initializing create_model()
2025-08-19 18:44:53,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:53,724:INFO:Checking exceptions
2025-08-19 18:44:53,724:INFO:Importing libraries
2025-08-19 18:44:53,724:INFO:Copying training dataset
2025-08-19 18:44:53,725:INFO:Defining folds
2025-08-19 18:44:53,725:INFO:Declaring metric variables
2025-08-19 18:44:53,725:INFO:Importing untrained model
2025-08-19 18:44:53,725:INFO:Ridge Classifier Imported successfully
2025-08-19 18:44:53,725:INFO:Starting cross validation
2025-08-19 18:44:53,726:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:53,819:INFO:Calculating mean and std
2025-08-19 18:44:53,819:INFO:Creating metrics dataframe
2025-08-19 18:44:53,820:INFO:Uploading results into container
2025-08-19 18:44:53,820:INFO:Uploading model into container now
2025-08-19 18:44:53,820:INFO:_master_model_container: 6
2025-08-19 18:44:53,820:INFO:_display_container: 2
2025-08-19 18:44:53,821:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:44:53,821:INFO:create_model() successfully completed......................................
2025-08-19 18:44:53,882:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:53,882:INFO:Creating metrics dataframe
2025-08-19 18:44:53,883:INFO:Initializing Random Forest Classifier
2025-08-19 18:44:53,883:INFO:Total runtime is 0.015774770577748617 minutes
2025-08-19 18:44:53,883:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:53,884:INFO:Initializing create_model()
2025-08-19 18:44:53,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:53,884:INFO:Checking exceptions
2025-08-19 18:44:53,884:INFO:Importing libraries
2025-08-19 18:44:53,884:INFO:Copying training dataset
2025-08-19 18:44:53,885:INFO:Defining folds
2025-08-19 18:44:53,885:INFO:Declaring metric variables
2025-08-19 18:44:53,885:INFO:Importing untrained model
2025-08-19 18:44:53,885:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:44:53,885:INFO:Starting cross validation
2025-08-19 18:44:53,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:54,474:INFO:Calculating mean and std
2025-08-19 18:44:54,474:INFO:Creating metrics dataframe
2025-08-19 18:44:54,475:INFO:Uploading results into container
2025-08-19 18:44:54,476:INFO:Uploading model into container now
2025-08-19 18:44:54,476:INFO:_master_model_container: 7
2025-08-19 18:44:54,476:INFO:_display_container: 2
2025-08-19 18:44:54,476:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:44:54,476:INFO:create_model() successfully completed......................................
2025-08-19 18:44:54,531:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:54,531:INFO:Creating metrics dataframe
2025-08-19 18:44:54,532:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:44:54,532:INFO:Total runtime is 0.02658841609954834 minutes
2025-08-19 18:44:54,532:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:54,532:INFO:Initializing create_model()
2025-08-19 18:44:54,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:54,532:INFO:Checking exceptions
2025-08-19 18:44:54,532:INFO:Importing libraries
2025-08-19 18:44:54,533:INFO:Copying training dataset
2025-08-19 18:44:54,534:INFO:Defining folds
2025-08-19 18:44:54,534:INFO:Declaring metric variables
2025-08-19 18:44:54,534:INFO:Importing untrained model
2025-08-19 18:44:54,534:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:44:54,534:INFO:Starting cross validation
2025-08-19 18:44:54,535:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:54,563:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,570:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,571:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,574:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,576:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,577:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,594:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,602:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,605:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,606:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:44:54,628:INFO:Calculating mean and std
2025-08-19 18:44:54,628:INFO:Creating metrics dataframe
2025-08-19 18:44:54,629:INFO:Uploading results into container
2025-08-19 18:44:54,629:INFO:Uploading model into container now
2025-08-19 18:44:54,630:INFO:_master_model_container: 8
2025-08-19 18:44:54,630:INFO:_display_container: 2
2025-08-19 18:44:54,630:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:44:54,630:INFO:create_model() successfully completed......................................
2025-08-19 18:44:54,684:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:54,684:INFO:Creating metrics dataframe
2025-08-19 18:44:54,685:INFO:Initializing Ada Boost Classifier
2025-08-19 18:44:54,685:INFO:Total runtime is 0.029139848550160725 minutes
2025-08-19 18:44:54,685:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:54,685:INFO:Initializing create_model()
2025-08-19 18:44:54,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:54,686:INFO:Checking exceptions
2025-08-19 18:44:54,686:INFO:Importing libraries
2025-08-19 18:44:54,686:INFO:Copying training dataset
2025-08-19 18:44:54,687:INFO:Defining folds
2025-08-19 18:44:54,687:INFO:Declaring metric variables
2025-08-19 18:44:54,687:INFO:Importing untrained model
2025-08-19 18:44:54,687:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:44:54,687:INFO:Starting cross validation
2025-08-19 18:44:54,688:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:54,714:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,716:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,720:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,724:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,730:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,736:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,738:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,755:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,882:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:54,891:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:44:55,015:INFO:Calculating mean and std
2025-08-19 18:44:55,015:INFO:Creating metrics dataframe
2025-08-19 18:44:55,016:INFO:Uploading results into container
2025-08-19 18:44:55,016:INFO:Uploading model into container now
2025-08-19 18:44:55,016:INFO:_master_model_container: 9
2025-08-19 18:44:55,016:INFO:_display_container: 2
2025-08-19 18:44:55,017:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:44:55,017:INFO:create_model() successfully completed......................................
2025-08-19 18:44:55,072:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:55,072:INFO:Creating metrics dataframe
2025-08-19 18:44:55,074:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:44:55,074:INFO:Total runtime is 0.035614418983459475 minutes
2025-08-19 18:44:55,074:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:55,074:INFO:Initializing create_model()
2025-08-19 18:44:55,074:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:55,074:INFO:Checking exceptions
2025-08-19 18:44:55,074:INFO:Importing libraries
2025-08-19 18:44:55,074:INFO:Copying training dataset
2025-08-19 18:44:55,076:INFO:Defining folds
2025-08-19 18:44:55,076:INFO:Declaring metric variables
2025-08-19 18:44:55,076:INFO:Importing untrained model
2025-08-19 18:44:55,076:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:44:55,076:INFO:Starting cross validation
2025-08-19 18:44:55,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:56,226:INFO:Calculating mean and std
2025-08-19 18:44:56,226:INFO:Creating metrics dataframe
2025-08-19 18:44:56,228:INFO:Uploading results into container
2025-08-19 18:44:56,228:INFO:Uploading model into container now
2025-08-19 18:44:56,228:INFO:_master_model_container: 10
2025-08-19 18:44:56,228:INFO:_display_container: 2
2025-08-19 18:44:56,228:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:44:56,228:INFO:create_model() successfully completed......................................
2025-08-19 18:44:56,290:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:56,290:INFO:Creating metrics dataframe
2025-08-19 18:44:56,291:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:44:56,291:INFO:Total runtime is 0.05590775012969971 minutes
2025-08-19 18:44:56,291:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:56,292:INFO:Initializing create_model()
2025-08-19 18:44:56,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:56,292:INFO:Checking exceptions
2025-08-19 18:44:56,292:INFO:Importing libraries
2025-08-19 18:44:56,292:INFO:Copying training dataset
2025-08-19 18:44:56,293:INFO:Defining folds
2025-08-19 18:44:56,293:INFO:Declaring metric variables
2025-08-19 18:44:56,293:INFO:Importing untrained model
2025-08-19 18:44:56,293:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:44:56,293:INFO:Starting cross validation
2025-08-19 18:44:56,294:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:56,396:INFO:Calculating mean and std
2025-08-19 18:44:56,396:INFO:Creating metrics dataframe
2025-08-19 18:44:56,397:INFO:Uploading results into container
2025-08-19 18:44:56,397:INFO:Uploading model into container now
2025-08-19 18:44:56,397:INFO:_master_model_container: 11
2025-08-19 18:44:56,398:INFO:_display_container: 2
2025-08-19 18:44:56,398:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:44:56,398:INFO:create_model() successfully completed......................................
2025-08-19 18:44:56,452:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:56,452:INFO:Creating metrics dataframe
2025-08-19 18:44:56,453:INFO:Initializing Extra Trees Classifier
2025-08-19 18:44:56,453:INFO:Total runtime is 0.058607582251230875 minutes
2025-08-19 18:44:56,453:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:56,454:INFO:Initializing create_model()
2025-08-19 18:44:56,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:56,454:INFO:Checking exceptions
2025-08-19 18:44:56,454:INFO:Importing libraries
2025-08-19 18:44:56,454:INFO:Copying training dataset
2025-08-19 18:44:56,455:INFO:Defining folds
2025-08-19 18:44:56,455:INFO:Declaring metric variables
2025-08-19 18:44:56,455:INFO:Importing untrained model
2025-08-19 18:44:56,455:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:44:56,455:INFO:Starting cross validation
2025-08-19 18:44:56,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:56,805:INFO:Calculating mean and std
2025-08-19 18:44:56,805:INFO:Creating metrics dataframe
2025-08-19 18:44:56,806:INFO:Uploading results into container
2025-08-19 18:44:56,806:INFO:Uploading model into container now
2025-08-19 18:44:56,807:INFO:_master_model_container: 12
2025-08-19 18:44:56,807:INFO:_display_container: 2
2025-08-19 18:44:56,807:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:44:56,807:INFO:create_model() successfully completed......................................
2025-08-19 18:44:56,862:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:56,862:INFO:Creating metrics dataframe
2025-08-19 18:44:56,863:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:44:56,863:INFO:Total runtime is 0.06544296741485596 minutes
2025-08-19 18:44:56,864:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:56,864:INFO:Initializing create_model()
2025-08-19 18:44:56,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:56,864:INFO:Checking exceptions
2025-08-19 18:44:56,864:INFO:Importing libraries
2025-08-19 18:44:56,864:INFO:Copying training dataset
2025-08-19 18:44:56,865:INFO:Defining folds
2025-08-19 18:44:56,865:INFO:Declaring metric variables
2025-08-19 18:44:56,865:INFO:Importing untrained model
2025-08-19 18:44:56,865:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:44:56,865:INFO:Starting cross validation
2025-08-19 18:44:56,866:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:44:57,036:INFO:Calculating mean and std
2025-08-19 18:44:57,036:INFO:Creating metrics dataframe
2025-08-19 18:44:57,037:INFO:Uploading results into container
2025-08-19 18:44:57,037:INFO:Uploading model into container now
2025-08-19 18:44:57,038:INFO:_master_model_container: 13
2025-08-19 18:44:57,038:INFO:_display_container: 2
2025-08-19 18:44:57,038:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:44:57,038:INFO:create_model() successfully completed......................................
2025-08-19 18:44:57,092:INFO:SubProcess create_model() end ==================================
2025-08-19 18:44:57,092:INFO:Creating metrics dataframe
2025-08-19 18:44:57,093:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:44:57,093:INFO:Total runtime is 0.06926753520965577 minutes
2025-08-19 18:44:57,093:INFO:SubProcess create_model() called ==================================
2025-08-19 18:44:57,093:INFO:Initializing create_model()
2025-08-19 18:44:57,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:44:57,093:INFO:Checking exceptions
2025-08-19 18:44:57,093:INFO:Importing libraries
2025-08-19 18:44:57,093:INFO:Copying training dataset
2025-08-19 18:44:57,094:INFO:Defining folds
2025-08-19 18:44:57,094:INFO:Declaring metric variables
2025-08-19 18:44:57,095:INFO:Importing untrained model
2025-08-19 18:44:57,095:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:44:57,095:INFO:Starting cross validation
2025-08-19 18:44:57,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:00,133:INFO:Calculating mean and std
2025-08-19 18:45:00,134:INFO:Creating metrics dataframe
2025-08-19 18:45:00,135:INFO:Uploading results into container
2025-08-19 18:45:00,135:INFO:Uploading model into container now
2025-08-19 18:45:00,135:INFO:_master_model_container: 14
2025-08-19 18:45:00,135:INFO:_display_container: 2
2025-08-19 18:45:00,135:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:45:00,135:INFO:create_model() successfully completed......................................
2025-08-19 18:45:00,190:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:00,190:INFO:Creating metrics dataframe
2025-08-19 18:45:00,191:INFO:Initializing CatBoost Classifier
2025-08-19 18:45:00,191:INFO:Total runtime is 0.12090566953023275 minutes
2025-08-19 18:45:00,191:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:00,191:INFO:Initializing create_model()
2025-08-19 18:45:00,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:00,191:INFO:Checking exceptions
2025-08-19 18:45:00,192:INFO:Importing libraries
2025-08-19 18:45:00,192:INFO:Copying training dataset
2025-08-19 18:45:00,193:INFO:Defining folds
2025-08-19 18:45:00,193:INFO:Declaring metric variables
2025-08-19 18:45:00,193:INFO:Importing untrained model
2025-08-19 18:45:00,193:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:45:00,193:INFO:Starting cross validation
2025-08-19 18:45:00,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:09,189:INFO:Calculating mean and std
2025-08-19 18:45:09,190:INFO:Creating metrics dataframe
2025-08-19 18:45:09,194:INFO:Uploading results into container
2025-08-19 18:45:09,195:INFO:Uploading model into container now
2025-08-19 18:45:09,195:INFO:_master_model_container: 15
2025-08-19 18:45:09,195:INFO:_display_container: 2
2025-08-19 18:45:09,195:INFO:<catboost.core.CatBoostClassifier object at 0x307f6cd00>
2025-08-19 18:45:09,195:INFO:create_model() successfully completed......................................
2025-08-19 18:45:09,302:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:09,302:INFO:Creating metrics dataframe
2025-08-19 18:45:09,304:INFO:Initializing Dummy Classifier
2025-08-19 18:45:09,304:INFO:Total runtime is 0.27278263568878175 minutes
2025-08-19 18:45:09,304:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:09,304:INFO:Initializing create_model()
2025-08-19 18:45:09,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3079e5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:09,304:INFO:Checking exceptions
2025-08-19 18:45:09,304:INFO:Importing libraries
2025-08-19 18:45:09,304:INFO:Copying training dataset
2025-08-19 18:45:09,306:INFO:Defining folds
2025-08-19 18:45:09,306:INFO:Declaring metric variables
2025-08-19 18:45:09,307:INFO:Importing untrained model
2025-08-19 18:45:09,307:INFO:Dummy Classifier Imported successfully
2025-08-19 18:45:09,307:INFO:Starting cross validation
2025-08-19 18:45:09,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:09,350:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,364:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,372:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,375:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,394:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,402:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,406:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,408:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,408:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,410:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:09,414:INFO:Calculating mean and std
2025-08-19 18:45:09,414:INFO:Creating metrics dataframe
2025-08-19 18:45:09,415:INFO:Uploading results into container
2025-08-19 18:45:09,415:INFO:Uploading model into container now
2025-08-19 18:45:09,416:INFO:_master_model_container: 16
2025-08-19 18:45:09,416:INFO:_display_container: 2
2025-08-19 18:45:09,416:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:45:09,416:INFO:create_model() successfully completed......................................
2025-08-19 18:45:09,477:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:09,477:INFO:Creating metrics dataframe
2025-08-19 18:45:09,479:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:45:09,480:INFO:Initializing create_model()
2025-08-19 18:45:09,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:09,480:INFO:Checking exceptions
2025-08-19 18:45:09,482:INFO:Importing libraries
2025-08-19 18:45:09,482:INFO:Copying training dataset
2025-08-19 18:45:09,484:INFO:Defining folds
2025-08-19 18:45:09,484:INFO:Declaring metric variables
2025-08-19 18:45:09,484:INFO:Importing untrained model
2025-08-19 18:45:09,484:INFO:Declaring custom model
2025-08-19 18:45:09,484:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:45:09,485:INFO:Cross validation set to False
2025-08-19 18:45:09,485:INFO:Fitting Model
2025-08-19 18:45:10,024:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:45:10,024:INFO:create_model() successfully completed......................................
2025-08-19 18:45:10,082:INFO:_master_model_container: 16
2025-08-19 18:45:10,082:INFO:_display_container: 2
2025-08-19 18:45:10,082:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:45:10,082:INFO:compare_models() successfully completed......................................
2025-08-19 18:45:10,083:INFO:Initializing create_model()
2025-08-19 18:45:10,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:10,083:INFO:Checking exceptions
2025-08-19 18:45:10,084:INFO:Importing libraries
2025-08-19 18:45:10,084:INFO:Copying training dataset
2025-08-19 18:45:10,085:INFO:Defining folds
2025-08-19 18:45:10,085:INFO:Declaring metric variables
2025-08-19 18:45:10,085:INFO:Importing untrained model
2025-08-19 18:45:10,086:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:45:10,086:INFO:Starting cross validation
2025-08-19 18:45:10,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:11,172:INFO:Calculating mean and std
2025-08-19 18:45:11,172:INFO:Creating metrics dataframe
2025-08-19 18:45:11,173:INFO:Finalizing model
2025-08-19 18:45:11,622:INFO:Uploading results into container
2025-08-19 18:45:11,623:INFO:Uploading model into container now
2025-08-19 18:45:11,623:INFO:_master_model_container: 17
2025-08-19 18:45:11,623:INFO:_display_container: 3
2025-08-19 18:45:11,623:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:45:11,623:INFO:create_model() successfully completed......................................
2025-08-19 18:45:11,678:INFO:Initializing finalize_model()
2025-08-19 18:45:11,678:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:11,678:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:45:11,679:INFO:Initializing create_model()
2025-08-19 18:45:11,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:11,679:INFO:Checking exceptions
2025-08-19 18:45:11,680:INFO:Importing libraries
2025-08-19 18:45:11,680:INFO:Copying training dataset
2025-08-19 18:45:11,680:INFO:Defining folds
2025-08-19 18:45:11,680:INFO:Declaring metric variables
2025-08-19 18:45:11,680:INFO:Importing untrained model
2025-08-19 18:45:11,680:INFO:Declaring custom model
2025-08-19 18:45:11,680:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:45:11,681:INFO:Cross validation set to False
2025-08-19 18:45:11,681:INFO:Fitting Model
2025-08-19 18:45:12,262:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:45:12,262:INFO:create_model() successfully completed......................................
2025-08-19 18:45:12,316:INFO:_master_model_container: 17
2025-08-19 18:45:12,316:INFO:_display_container: 3
2025-08-19 18:45:12,320:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:45:12,320:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:12,380:INFO:Initializing predict_model()
2025-08-19 18:45:12,380:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61e10>)
2025-08-19 18:45:12,380:INFO:Checking exceptions
2025-08-19 18:45:12,380:INFO:Preloading libraries
2025-08-19 18:45:12,380:INFO:Set up data.
2025-08-19 18:45:12,384:INFO:Set up index.
2025-08-19 18:45:12,454:INFO:Initializing create_model()
2025-08-19 18:45:12,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:12,455:INFO:Checking exceptions
2025-08-19 18:45:12,455:INFO:Importing libraries
2025-08-19 18:45:12,455:INFO:Copying training dataset
2025-08-19 18:45:12,457:INFO:Defining folds
2025-08-19 18:45:12,457:INFO:Declaring metric variables
2025-08-19 18:45:12,458:INFO:Importing untrained model
2025-08-19 18:45:12,458:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:45:12,458:INFO:Starting cross validation
2025-08-19 18:45:12,459:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:12,651:INFO:Calculating mean and std
2025-08-19 18:45:12,652:INFO:Creating metrics dataframe
2025-08-19 18:45:12,652:INFO:Finalizing model
2025-08-19 18:45:12,778:INFO:Uploading results into container
2025-08-19 18:45:12,779:INFO:Uploading model into container now
2025-08-19 18:45:12,779:INFO:_master_model_container: 18
2025-08-19 18:45:12,779:INFO:_display_container: 5
2025-08-19 18:45:12,779:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:45:12,779:INFO:create_model() successfully completed......................................
2025-08-19 18:45:12,833:INFO:Initializing finalize_model()
2025-08-19 18:45:12,833:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:12,833:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:45:12,835:INFO:Initializing create_model()
2025-08-19 18:45:12,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:12,835:INFO:Checking exceptions
2025-08-19 18:45:12,835:INFO:Importing libraries
2025-08-19 18:45:12,836:INFO:Copying training dataset
2025-08-19 18:45:12,836:INFO:Defining folds
2025-08-19 18:45:12,836:INFO:Declaring metric variables
2025-08-19 18:45:12,836:INFO:Importing untrained model
2025-08-19 18:45:12,836:INFO:Declaring custom model
2025-08-19 18:45:12,836:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:45:12,837:INFO:Cross validation set to False
2025-08-19 18:45:12,837:INFO:Fitting Model
2025-08-19 18:45:12,979:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:45:12,979:INFO:create_model() successfully completed......................................
2025-08-19 18:45:13,033:INFO:_master_model_container: 18
2025-08-19 18:45:13,033:INFO:_display_container: 5
2025-08-19 18:45:13,038:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:45:13,038:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:13,096:INFO:Initializing predict_model()
2025-08-19 18:45:13,096:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61cf0>)
2025-08-19 18:45:13,096:INFO:Checking exceptions
2025-08-19 18:45:13,096:INFO:Preloading libraries
2025-08-19 18:45:13,097:INFO:Set up data.
2025-08-19 18:45:13,100:INFO:Set up index.
2025-08-19 18:45:13,173:INFO:Initializing create_model()
2025-08-19 18:45:13,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:13,173:INFO:Checking exceptions
2025-08-19 18:45:13,174:INFO:Importing libraries
2025-08-19 18:45:13,174:INFO:Copying training dataset
2025-08-19 18:45:13,176:INFO:Defining folds
2025-08-19 18:45:13,176:INFO:Declaring metric variables
2025-08-19 18:45:13,176:INFO:Importing untrained model
2025-08-19 18:45:13,176:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:45:13,176:INFO:Starting cross validation
2025-08-19 18:45:13,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:21,257:INFO:Calculating mean and std
2025-08-19 18:45:21,258:INFO:Creating metrics dataframe
2025-08-19 18:45:21,259:INFO:Finalizing model
2025-08-19 18:45:22,584:INFO:Uploading results into container
2025-08-19 18:45:22,584:INFO:Uploading model into container now
2025-08-19 18:45:22,585:INFO:_master_model_container: 19
2025-08-19 18:45:22,585:INFO:_display_container: 7
2025-08-19 18:45:22,585:INFO:<catboost.core.CatBoostClassifier object at 0x30991b640>
2025-08-19 18:45:22,585:INFO:create_model() successfully completed......................................
2025-08-19 18:45:22,665:INFO:Initializing finalize_model()
2025-08-19 18:45:22,665:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=<catboost.core.CatBoostClassifier object at 0x30991b640>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:22,666:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x30991b640>
2025-08-19 18:45:22,667:INFO:Initializing create_model()
2025-08-19 18:45:22,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=<catboost.core.CatBoostClassifier object at 0x30991b640>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:22,667:INFO:Checking exceptions
2025-08-19 18:45:22,668:INFO:Importing libraries
2025-08-19 18:45:22,668:INFO:Copying training dataset
2025-08-19 18:45:22,668:INFO:Defining folds
2025-08-19 18:45:22,668:INFO:Declaring metric variables
2025-08-19 18:45:22,668:INFO:Importing untrained model
2025-08-19 18:45:22,668:INFO:Declaring custom model
2025-08-19 18:45:22,669:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:45:22,669:INFO:Cross validation set to False
2025-08-19 18:45:22,669:INFO:Fitting Model
2025-08-19 18:45:23,973:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x306642d40>)],
         verbose=False)
2025-08-19 18:45:23,973:INFO:create_model() successfully completed......................................
2025-08-19 18:45:24,027:INFO:_master_model_container: 19
2025-08-19 18:45:24,027:INFO:_display_container: 7
2025-08-19 18:45:24,031:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x306642d40>)],
         verbose=False)
2025-08-19 18:45:24,031:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:24,088:INFO:Initializing predict_model()
2025-08-19 18:45:24,088:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x306642d40>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61e10>)
2025-08-19 18:45:24,088:INFO:Checking exceptions
2025-08-19 18:45:24,088:INFO:Preloading libraries
2025-08-19 18:45:24,088:INFO:Set up data.
2025-08-19 18:45:24,092:INFO:Set up index.
2025-08-19 18:45:24,163:INFO:Initializing create_model()
2025-08-19 18:45:24,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:24,163:INFO:Checking exceptions
2025-08-19 18:45:24,164:INFO:Importing libraries
2025-08-19 18:45:24,164:INFO:Copying training dataset
2025-08-19 18:45:24,165:INFO:Defining folds
2025-08-19 18:45:24,165:INFO:Declaring metric variables
2025-08-19 18:45:24,165:INFO:Importing untrained model
2025-08-19 18:45:24,166:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:45:24,166:INFO:Starting cross validation
2025-08-19 18:45:24,167:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:27,420:INFO:Calculating mean and std
2025-08-19 18:45:27,420:INFO:Creating metrics dataframe
2025-08-19 18:45:27,421:INFO:Finalizing model
2025-08-19 18:45:27,441:INFO:[LightGBM] [Info] Number of positive: 462, number of negative: 306
2025-08-19 18:45:27,441:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000323 seconds.
2025-08-19 18:45:27,441:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:45:27,442:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 18:45:27,442:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:45:27,442:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.601562 -> initscore=0.411980
2025-08-19 18:45:27,442:INFO:[LightGBM] [Info] Start training from score 0.411980
2025-08-19 18:45:27,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:27,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:27,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:27,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:27,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:27,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:27,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:27,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:27,912:INFO:Uploading results into container
2025-08-19 18:45:27,913:INFO:Uploading model into container now
2025-08-19 18:45:27,913:INFO:_master_model_container: 20
2025-08-19 18:45:27,913:INFO:_display_container: 9
2025-08-19 18:45:27,914:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:45:27,914:INFO:create_model() successfully completed......................................
2025-08-19 18:45:27,973:INFO:Initializing finalize_model()
2025-08-19 18:45:27,973:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:27,974:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:45:27,975:INFO:Initializing create_model()
2025-08-19 18:45:27,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:27,975:INFO:Checking exceptions
2025-08-19 18:45:27,976:INFO:Importing libraries
2025-08-19 18:45:27,976:INFO:Copying training dataset
2025-08-19 18:45:27,976:INFO:Defining folds
2025-08-19 18:45:27,976:INFO:Declaring metric variables
2025-08-19 18:45:27,976:INFO:Importing untrained model
2025-08-19 18:45:27,976:INFO:Declaring custom model
2025-08-19 18:45:27,977:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:45:27,977:INFO:Cross validation set to False
2025-08-19 18:45:27,977:INFO:Fitting Model
2025-08-19 18:45:27,997:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:45:27,998:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000339 seconds.
2025-08-19 18:45:27,998:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:45:27,998:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:45:27,998:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:45:27,998:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:45:27,998:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:45:28,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:28,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:28,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:28,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:28,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:28,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:45:28,436:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:45:28,436:INFO:create_model() successfully completed......................................
2025-08-19 18:45:28,489:INFO:_master_model_container: 20
2025-08-19 18:45:28,489:INFO:_display_container: 9
2025-08-19 18:45:28,494:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:45:28,494:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:28,553:INFO:Initializing predict_model()
2025-08-19 18:45:28,553:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a62dd0>)
2025-08-19 18:45:28,553:INFO:Checking exceptions
2025-08-19 18:45:28,553:INFO:Preloading libraries
2025-08-19 18:45:28,553:INFO:Set up data.
2025-08-19 18:45:28,556:INFO:Set up index.
2025-08-19 18:45:28,627:INFO:Initializing create_model()
2025-08-19 18:45:28,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:28,627:INFO:Checking exceptions
2025-08-19 18:45:28,628:INFO:Importing libraries
2025-08-19 18:45:28,628:INFO:Copying training dataset
2025-08-19 18:45:28,630:INFO:Defining folds
2025-08-19 18:45:28,630:INFO:Declaring metric variables
2025-08-19 18:45:28,630:INFO:Importing untrained model
2025-08-19 18:45:28,630:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:45:28,630:INFO:Starting cross validation
2025-08-19 18:45:28,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:28,736:INFO:Calculating mean and std
2025-08-19 18:45:28,737:INFO:Creating metrics dataframe
2025-08-19 18:45:28,738:INFO:Finalizing model
2025-08-19 18:45:28,762:INFO:Uploading results into container
2025-08-19 18:45:28,762:INFO:Uploading model into container now
2025-08-19 18:45:28,762:INFO:_master_model_container: 21
2025-08-19 18:45:28,762:INFO:_display_container: 11
2025-08-19 18:45:28,763:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:45:28,763:INFO:create_model() successfully completed......................................
2025-08-19 18:45:28,818:INFO:Initializing finalize_model()
2025-08-19 18:45:28,819:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:28,819:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:45:28,820:INFO:Initializing create_model()
2025-08-19 18:45:28,820:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:28,820:INFO:Checking exceptions
2025-08-19 18:45:28,848:INFO:Importing libraries
2025-08-19 18:45:28,848:INFO:Copying training dataset
2025-08-19 18:45:28,848:INFO:Defining folds
2025-08-19 18:45:28,848:INFO:Declaring metric variables
2025-08-19 18:45:28,848:INFO:Importing untrained model
2025-08-19 18:45:28,848:INFO:Declaring custom model
2025-08-19 18:45:28,849:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:45:28,849:INFO:Cross validation set to False
2025-08-19 18:45:28,849:INFO:Fitting Model
2025-08-19 18:45:28,883:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:45:28,883:INFO:create_model() successfully completed......................................
2025-08-19 18:45:28,937:INFO:_master_model_container: 21
2025-08-19 18:45:28,937:INFO:_display_container: 11
2025-08-19 18:45:28,940:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:45:28,941:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:29,010:INFO:Initializing predict_model()
2025-08-19 18:45:29,010:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a62dd0>)
2025-08-19 18:45:29,010:INFO:Checking exceptions
2025-08-19 18:45:29,010:INFO:Preloading libraries
2025-08-19 18:45:29,010:INFO:Set up data.
2025-08-19 18:45:29,014:INFO:Set up index.
2025-08-19 18:45:29,098:INFO:Initializing create_model()
2025-08-19 18:45:29,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:29,099:INFO:Checking exceptions
2025-08-19 18:45:29,100:INFO:Importing libraries
2025-08-19 18:45:29,100:INFO:Copying training dataset
2025-08-19 18:45:29,102:INFO:Defining folds
2025-08-19 18:45:29,102:INFO:Declaring metric variables
2025-08-19 18:45:29,102:INFO:Importing untrained model
2025-08-19 18:45:29,102:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:45:29,102:INFO:Starting cross validation
2025-08-19 18:45:29,103:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:29,573:INFO:Calculating mean and std
2025-08-19 18:45:29,574:INFO:Creating metrics dataframe
2025-08-19 18:45:29,575:INFO:Finalizing model
2025-08-19 18:45:29,684:INFO:Uploading results into container
2025-08-19 18:45:29,684:INFO:Uploading model into container now
2025-08-19 18:45:29,685:INFO:_master_model_container: 22
2025-08-19 18:45:29,685:INFO:_display_container: 13
2025-08-19 18:45:29,685:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:45:29,685:INFO:create_model() successfully completed......................................
2025-08-19 18:45:29,743:INFO:Initializing finalize_model()
2025-08-19 18:45:29,743:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:29,743:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:45:29,744:INFO:Initializing create_model()
2025-08-19 18:45:29,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:29,744:INFO:Checking exceptions
2025-08-19 18:45:29,745:INFO:Importing libraries
2025-08-19 18:45:29,745:INFO:Copying training dataset
2025-08-19 18:45:29,745:INFO:Defining folds
2025-08-19 18:45:29,745:INFO:Declaring metric variables
2025-08-19 18:45:29,745:INFO:Importing untrained model
2025-08-19 18:45:29,745:INFO:Declaring custom model
2025-08-19 18:45:29,746:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:45:29,746:INFO:Cross validation set to False
2025-08-19 18:45:29,746:INFO:Fitting Model
2025-08-19 18:45:29,857:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:45:29,858:INFO:create_model() successfully completed......................................
2025-08-19 18:45:29,912:INFO:_master_model_container: 22
2025-08-19 18:45:29,912:INFO:_display_container: 13
2025-08-19 18:45:29,917:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:45:29,917:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:29,974:INFO:Initializing predict_model()
2025-08-19 18:45:29,974:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61990>)
2025-08-19 18:45:29,974:INFO:Checking exceptions
2025-08-19 18:45:29,974:INFO:Preloading libraries
2025-08-19 18:45:29,974:INFO:Set up data.
2025-08-19 18:45:29,978:INFO:Set up index.
2025-08-19 18:45:30,075:INFO:Initializing create_model()
2025-08-19 18:45:30,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:30,076:INFO:Checking exceptions
2025-08-19 18:45:30,076:INFO:Importing libraries
2025-08-19 18:45:30,076:INFO:Copying training dataset
2025-08-19 18:45:30,078:INFO:Defining folds
2025-08-19 18:45:30,078:INFO:Declaring metric variables
2025-08-19 18:45:30,078:INFO:Importing untrained model
2025-08-19 18:45:30,078:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:45:30,078:INFO:Starting cross validation
2025-08-19 18:45:30,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:30,105:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,105:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,115:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,116:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,120:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,128:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,130:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,150:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,270:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,278:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,419:INFO:Calculating mean and std
2025-08-19 18:45:30,419:INFO:Creating metrics dataframe
2025-08-19 18:45:30,420:INFO:Finalizing model
2025-08-19 18:45:30,441:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,552:INFO:Uploading results into container
2025-08-19 18:45:30,553:INFO:Uploading model into container now
2025-08-19 18:45:30,553:INFO:_master_model_container: 23
2025-08-19 18:45:30,553:INFO:_display_container: 15
2025-08-19 18:45:30,553:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:45:30,553:INFO:create_model() successfully completed......................................
2025-08-19 18:45:30,621:INFO:Initializing finalize_model()
2025-08-19 18:45:30,621:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:30,621:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:45:30,622:INFO:Initializing create_model()
2025-08-19 18:45:30,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:30,622:INFO:Checking exceptions
2025-08-19 18:45:30,623:INFO:Importing libraries
2025-08-19 18:45:30,623:INFO:Copying training dataset
2025-08-19 18:45:30,623:INFO:Defining folds
2025-08-19 18:45:30,623:INFO:Declaring metric variables
2025-08-19 18:45:30,623:INFO:Importing untrained model
2025-08-19 18:45:30,623:INFO:Declaring custom model
2025-08-19 18:45:30,623:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:45:30,624:INFO:Cross validation set to False
2025-08-19 18:45:30,624:INFO:Fitting Model
2025-08-19 18:45:30,644:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:30,773:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:45:30,773:INFO:create_model() successfully completed......................................
2025-08-19 18:45:30,827:INFO:_master_model_container: 23
2025-08-19 18:45:30,827:INFO:_display_container: 15
2025-08-19 18:45:30,830:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:45:30,830:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:30,888:INFO:Initializing predict_model()
2025-08-19 18:45:30,889:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61cf0>)
2025-08-19 18:45:30,889:INFO:Checking exceptions
2025-08-19 18:45:30,889:INFO:Preloading libraries
2025-08-19 18:45:30,889:INFO:Set up data.
2025-08-19 18:45:30,892:INFO:Set up index.
2025-08-19 18:45:30,967:INFO:Initializing create_model()
2025-08-19 18:45:30,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:30,967:INFO:Checking exceptions
2025-08-19 18:45:30,968:INFO:Importing libraries
2025-08-19 18:45:30,968:INFO:Copying training dataset
2025-08-19 18:45:30,970:INFO:Defining folds
2025-08-19 18:45:30,970:INFO:Declaring metric variables
2025-08-19 18:45:30,970:INFO:Importing untrained model
2025-08-19 18:45:30,970:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:45:30,970:INFO:Starting cross validation
2025-08-19 18:45:30,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:31,329:INFO:Calculating mean and std
2025-08-19 18:45:31,330:INFO:Creating metrics dataframe
2025-08-19 18:45:31,330:INFO:Finalizing model
2025-08-19 18:45:31,409:INFO:Uploading results into container
2025-08-19 18:45:31,410:INFO:Uploading model into container now
2025-08-19 18:45:31,410:INFO:_master_model_container: 24
2025-08-19 18:45:31,410:INFO:_display_container: 17
2025-08-19 18:45:31,410:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:45:31,410:INFO:create_model() successfully completed......................................
2025-08-19 18:45:31,464:INFO:Initializing finalize_model()
2025-08-19 18:45:31,464:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:31,464:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:45:31,466:INFO:Initializing create_model()
2025-08-19 18:45:31,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:31,466:INFO:Checking exceptions
2025-08-19 18:45:31,466:INFO:Importing libraries
2025-08-19 18:45:31,466:INFO:Copying training dataset
2025-08-19 18:45:31,466:INFO:Defining folds
2025-08-19 18:45:31,466:INFO:Declaring metric variables
2025-08-19 18:45:31,466:INFO:Importing untrained model
2025-08-19 18:45:31,466:INFO:Declaring custom model
2025-08-19 18:45:31,467:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:45:31,467:INFO:Cross validation set to False
2025-08-19 18:45:31,467:INFO:Fitting Model
2025-08-19 18:45:31,555:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:45:31,555:INFO:create_model() successfully completed......................................
2025-08-19 18:45:31,613:INFO:_master_model_container: 24
2025-08-19 18:45:31,614:INFO:_display_container: 17
2025-08-19 18:45:31,618:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:45:31,618:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:31,697:INFO:Initializing predict_model()
2025-08-19 18:45:31,697:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61000>)
2025-08-19 18:45:31,697:INFO:Checking exceptions
2025-08-19 18:45:31,697:INFO:Preloading libraries
2025-08-19 18:45:31,698:INFO:Set up data.
2025-08-19 18:45:31,701:INFO:Set up index.
2025-08-19 18:45:31,805:INFO:Initializing create_model()
2025-08-19 18:45:31,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:31,805:INFO:Checking exceptions
2025-08-19 18:45:31,806:INFO:Importing libraries
2025-08-19 18:45:31,806:INFO:Copying training dataset
2025-08-19 18:45:31,808:INFO:Defining folds
2025-08-19 18:45:31,808:INFO:Declaring metric variables
2025-08-19 18:45:31,808:INFO:Importing untrained model
2025-08-19 18:45:31,808:INFO:Dummy Classifier Imported successfully
2025-08-19 18:45:31,808:INFO:Starting cross validation
2025-08-19 18:45:31,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:31,848:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,859:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,866:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,872:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,873:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,885:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,891:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,898:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,903:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,904:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:31,912:INFO:Calculating mean and std
2025-08-19 18:45:31,912:INFO:Creating metrics dataframe
2025-08-19 18:45:31,913:INFO:Finalizing model
2025-08-19 18:45:31,930:INFO:Uploading results into container
2025-08-19 18:45:31,930:INFO:Uploading model into container now
2025-08-19 18:45:31,931:INFO:_master_model_container: 25
2025-08-19 18:45:31,931:INFO:_display_container: 19
2025-08-19 18:45:31,931:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:45:31,931:INFO:create_model() successfully completed......................................
2025-08-19 18:45:31,984:INFO:Initializing finalize_model()
2025-08-19 18:45:31,984:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:31,984:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:45:31,985:INFO:Initializing create_model()
2025-08-19 18:45:31,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:31,986:INFO:Checking exceptions
2025-08-19 18:45:31,986:INFO:Importing libraries
2025-08-19 18:45:31,986:INFO:Copying training dataset
2025-08-19 18:45:31,986:INFO:Defining folds
2025-08-19 18:45:31,986:INFO:Declaring metric variables
2025-08-19 18:45:31,986:INFO:Importing untrained model
2025-08-19 18:45:31,986:INFO:Declaring custom model
2025-08-19 18:45:31,987:INFO:Dummy Classifier Imported successfully
2025-08-19 18:45:31,987:INFO:Cross validation set to False
2025-08-19 18:45:31,987:INFO:Fitting Model
2025-08-19 18:45:32,009:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:45:32,009:INFO:create_model() successfully completed......................................
2025-08-19 18:45:32,062:INFO:_master_model_container: 25
2025-08-19 18:45:32,063:INFO:_display_container: 19
2025-08-19 18:45:32,066:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:45:32,066:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:32,124:INFO:Initializing predict_model()
2025-08-19 18:45:32,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a616c0>)
2025-08-19 18:45:32,125:INFO:Checking exceptions
2025-08-19 18:45:32,125:INFO:Preloading libraries
2025-08-19 18:45:32,125:INFO:Set up data.
2025-08-19 18:45:32,128:INFO:Set up index.
2025-08-19 18:45:32,141:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:32,198:INFO:Initializing create_model()
2025-08-19 18:45:32,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:32,199:INFO:Checking exceptions
2025-08-19 18:45:32,200:INFO:Importing libraries
2025-08-19 18:45:32,200:INFO:Copying training dataset
2025-08-19 18:45:32,201:INFO:Defining folds
2025-08-19 18:45:32,201:INFO:Declaring metric variables
2025-08-19 18:45:32,201:INFO:Importing untrained model
2025-08-19 18:45:32,201:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:45:32,202:INFO:Starting cross validation
2025-08-19 18:45:32,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:32,228:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,231:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,238:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,239:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,244:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,247:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,257:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,268:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,274:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,275:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,294:INFO:Calculating mean and std
2025-08-19 18:45:32,295:INFO:Creating metrics dataframe
2025-08-19 18:45:32,295:INFO:Finalizing model
2025-08-19 18:45:32,314:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,316:INFO:Uploading results into container
2025-08-19 18:45:32,317:INFO:Uploading model into container now
2025-08-19 18:45:32,317:INFO:_master_model_container: 26
2025-08-19 18:45:32,317:INFO:_display_container: 21
2025-08-19 18:45:32,317:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:45:32,317:INFO:create_model() successfully completed......................................
2025-08-19 18:45:32,385:INFO:Initializing finalize_model()
2025-08-19 18:45:32,385:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:32,385:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:45:32,386:INFO:Initializing create_model()
2025-08-19 18:45:32,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:32,386:INFO:Checking exceptions
2025-08-19 18:45:32,387:INFO:Importing libraries
2025-08-19 18:45:32,387:INFO:Copying training dataset
2025-08-19 18:45:32,387:INFO:Defining folds
2025-08-19 18:45:32,387:INFO:Declaring metric variables
2025-08-19 18:45:32,387:INFO:Importing untrained model
2025-08-19 18:45:32,387:INFO:Declaring custom model
2025-08-19 18:45:32,387:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:45:32,388:INFO:Cross validation set to False
2025-08-19 18:45:32,388:INFO:Fitting Model
2025-08-19 18:45:32,433:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:32,439:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:45:32,439:INFO:create_model() successfully completed......................................
2025-08-19 18:45:32,512:INFO:_master_model_container: 26
2025-08-19 18:45:32,513:INFO:_display_container: 21
2025-08-19 18:45:32,516:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:45:32,516:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:32,582:INFO:Initializing predict_model()
2025-08-19 18:45:32,582:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a62dd0>)
2025-08-19 18:45:32,582:INFO:Checking exceptions
2025-08-19 18:45:32,582:INFO:Preloading libraries
2025-08-19 18:45:32,583:INFO:Set up data.
2025-08-19 18:45:32,586:INFO:Set up index.
2025-08-19 18:45:32,675:INFO:Initializing create_model()
2025-08-19 18:45:32,675:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:32,675:INFO:Checking exceptions
2025-08-19 18:45:32,676:INFO:Importing libraries
2025-08-19 18:45:32,676:INFO:Copying training dataset
2025-08-19 18:45:32,677:INFO:Defining folds
2025-08-19 18:45:32,677:INFO:Declaring metric variables
2025-08-19 18:45:32,677:INFO:Importing untrained model
2025-08-19 18:45:32,678:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:45:32,678:INFO:Starting cross validation
2025-08-19 18:45:32,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:32,786:INFO:Calculating mean and std
2025-08-19 18:45:32,786:INFO:Creating metrics dataframe
2025-08-19 18:45:32,787:INFO:Finalizing model
2025-08-19 18:45:32,805:INFO:Uploading results into container
2025-08-19 18:45:32,806:INFO:Uploading model into container now
2025-08-19 18:45:32,806:INFO:_master_model_container: 27
2025-08-19 18:45:32,806:INFO:_display_container: 23
2025-08-19 18:45:32,806:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:45:32,806:INFO:create_model() successfully completed......................................
2025-08-19 18:45:32,861:INFO:Initializing finalize_model()
2025-08-19 18:45:32,861:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:32,862:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:45:32,863:INFO:Initializing create_model()
2025-08-19 18:45:32,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:32,863:INFO:Checking exceptions
2025-08-19 18:45:32,863:INFO:Importing libraries
2025-08-19 18:45:32,863:INFO:Copying training dataset
2025-08-19 18:45:32,863:INFO:Defining folds
2025-08-19 18:45:32,864:INFO:Declaring metric variables
2025-08-19 18:45:32,864:INFO:Importing untrained model
2025-08-19 18:45:32,864:INFO:Declaring custom model
2025-08-19 18:45:32,864:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:45:32,864:INFO:Cross validation set to False
2025-08-19 18:45:32,864:INFO:Fitting Model
2025-08-19 18:45:32,897:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:45:32,897:INFO:create_model() successfully completed......................................
2025-08-19 18:45:32,987:INFO:_master_model_container: 27
2025-08-19 18:45:32,987:INFO:_display_container: 23
2025-08-19 18:45:32,991:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:45:32,991:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:33,055:INFO:Initializing predict_model()
2025-08-19 18:45:33,055:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a613f0>)
2025-08-19 18:45:33,055:INFO:Checking exceptions
2025-08-19 18:45:33,055:INFO:Preloading libraries
2025-08-19 18:45:33,055:INFO:Set up data.
2025-08-19 18:45:33,059:INFO:Set up index.
2025-08-19 18:45:33,149:INFO:Initializing create_model()
2025-08-19 18:45:33,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:33,149:INFO:Checking exceptions
2025-08-19 18:45:33,150:INFO:Importing libraries
2025-08-19 18:45:33,150:INFO:Copying training dataset
2025-08-19 18:45:33,151:INFO:Defining folds
2025-08-19 18:45:33,151:INFO:Declaring metric variables
2025-08-19 18:45:33,151:INFO:Importing untrained model
2025-08-19 18:45:33,152:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:45:33,152:INFO:Starting cross validation
2025-08-19 18:45:33,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:33,261:INFO:Calculating mean and std
2025-08-19 18:45:33,261:INFO:Creating metrics dataframe
2025-08-19 18:45:33,262:INFO:Finalizing model
2025-08-19 18:45:33,284:INFO:Uploading results into container
2025-08-19 18:45:33,285:INFO:Uploading model into container now
2025-08-19 18:45:33,285:INFO:_master_model_container: 28
2025-08-19 18:45:33,285:INFO:_display_container: 25
2025-08-19 18:45:33,285:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:45:33,285:INFO:create_model() successfully completed......................................
2025-08-19 18:45:33,341:INFO:Initializing finalize_model()
2025-08-19 18:45:33,341:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:33,341:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:45:33,343:INFO:Initializing create_model()
2025-08-19 18:45:33,343:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:33,343:INFO:Checking exceptions
2025-08-19 18:45:33,343:INFO:Importing libraries
2025-08-19 18:45:33,343:INFO:Copying training dataset
2025-08-19 18:45:33,343:INFO:Defining folds
2025-08-19 18:45:33,343:INFO:Declaring metric variables
2025-08-19 18:45:33,343:INFO:Importing untrained model
2025-08-19 18:45:33,343:INFO:Declaring custom model
2025-08-19 18:45:33,344:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:45:33,344:INFO:Cross validation set to False
2025-08-19 18:45:33,344:INFO:Fitting Model
2025-08-19 18:45:33,378:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:45:33,378:INFO:create_model() successfully completed......................................
2025-08-19 18:45:33,432:INFO:_master_model_container: 28
2025-08-19 18:45:33,432:INFO:_display_container: 25
2025-08-19 18:45:33,436:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:45:33,436:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:33,494:INFO:Initializing predict_model()
2025-08-19 18:45:33,494:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a611b0>)
2025-08-19 18:45:33,494:INFO:Checking exceptions
2025-08-19 18:45:33,494:INFO:Preloading libraries
2025-08-19 18:45:33,494:INFO:Set up data.
2025-08-19 18:45:33,498:INFO:Set up index.
2025-08-19 18:45:33,567:INFO:Initializing create_model()
2025-08-19 18:45:33,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:33,567:INFO:Checking exceptions
2025-08-19 18:45:33,568:INFO:Importing libraries
2025-08-19 18:45:33,568:INFO:Copying training dataset
2025-08-19 18:45:33,569:INFO:Defining folds
2025-08-19 18:45:33,569:INFO:Declaring metric variables
2025-08-19 18:45:33,569:INFO:Importing untrained model
2025-08-19 18:45:33,570:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:45:33,570:INFO:Starting cross validation
2025-08-19 18:45:33,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:33,672:INFO:Calculating mean and std
2025-08-19 18:45:33,673:INFO:Creating metrics dataframe
2025-08-19 18:45:33,674:INFO:Finalizing model
2025-08-19 18:45:33,694:INFO:Uploading results into container
2025-08-19 18:45:33,695:INFO:Uploading model into container now
2025-08-19 18:45:33,696:INFO:_master_model_container: 29
2025-08-19 18:45:33,696:INFO:_display_container: 27
2025-08-19 18:45:33,696:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:45:33,696:INFO:create_model() successfully completed......................................
2025-08-19 18:45:33,793:INFO:Initializing finalize_model()
2025-08-19 18:45:33,793:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:33,793:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:45:33,794:INFO:Initializing create_model()
2025-08-19 18:45:33,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:33,795:INFO:Checking exceptions
2025-08-19 18:45:33,795:INFO:Importing libraries
2025-08-19 18:45:33,795:INFO:Copying training dataset
2025-08-19 18:45:33,795:INFO:Defining folds
2025-08-19 18:45:33,795:INFO:Declaring metric variables
2025-08-19 18:45:33,795:INFO:Importing untrained model
2025-08-19 18:45:33,795:INFO:Declaring custom model
2025-08-19 18:45:33,796:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:45:33,796:INFO:Cross validation set to False
2025-08-19 18:45:33,796:INFO:Fitting Model
2025-08-19 18:45:33,827:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:45:33,828:INFO:create_model() successfully completed......................................
2025-08-19 18:45:33,902:INFO:_master_model_container: 29
2025-08-19 18:45:33,902:INFO:_display_container: 27
2025-08-19 18:45:33,906:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:45:33,906:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:33,980:INFO:Initializing predict_model()
2025-08-19 18:45:33,980:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61ea0>)
2025-08-19 18:45:33,980:INFO:Checking exceptions
2025-08-19 18:45:33,980:INFO:Preloading libraries
2025-08-19 18:45:33,981:INFO:Set up data.
2025-08-19 18:45:33,985:INFO:Set up index.
2025-08-19 18:45:34,110:INFO:Initializing create_model()
2025-08-19 18:45:34,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:34,110:INFO:Checking exceptions
2025-08-19 18:45:34,111:INFO:Importing libraries
2025-08-19 18:45:34,111:INFO:Copying training dataset
2025-08-19 18:45:34,113:INFO:Defining folds
2025-08-19 18:45:34,113:INFO:Declaring metric variables
2025-08-19 18:45:34,113:INFO:Importing untrained model
2025-08-19 18:45:34,113:INFO:Ridge Classifier Imported successfully
2025-08-19 18:45:34,113:INFO:Starting cross validation
2025-08-19 18:45:34,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:34,247:INFO:Calculating mean and std
2025-08-19 18:45:34,247:INFO:Creating metrics dataframe
2025-08-19 18:45:34,248:INFO:Finalizing model
2025-08-19 18:45:34,267:INFO:Uploading results into container
2025-08-19 18:45:34,268:INFO:Uploading model into container now
2025-08-19 18:45:34,269:INFO:_master_model_container: 30
2025-08-19 18:45:34,271:INFO:_display_container: 29
2025-08-19 18:45:34,271:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:45:34,271:INFO:create_model() successfully completed......................................
2025-08-19 18:45:34,381:INFO:Initializing finalize_model()
2025-08-19 18:45:34,381:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:34,382:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:45:34,385:INFO:Initializing create_model()
2025-08-19 18:45:34,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:34,385:INFO:Checking exceptions
2025-08-19 18:45:34,386:INFO:Importing libraries
2025-08-19 18:45:34,386:INFO:Copying training dataset
2025-08-19 18:45:34,386:INFO:Defining folds
2025-08-19 18:45:34,386:INFO:Declaring metric variables
2025-08-19 18:45:34,386:INFO:Importing untrained model
2025-08-19 18:45:34,386:INFO:Declaring custom model
2025-08-19 18:45:34,388:INFO:Ridge Classifier Imported successfully
2025-08-19 18:45:34,390:INFO:Cross validation set to False
2025-08-19 18:45:34,390:INFO:Fitting Model
2025-08-19 18:45:34,431:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:45:34,431:INFO:create_model() successfully completed......................................
2025-08-19 18:45:34,502:INFO:_master_model_container: 30
2025-08-19 18:45:34,502:INFO:_display_container: 29
2025-08-19 18:45:34,506:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:45:34,506:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:34,575:INFO:Initializing predict_model()
2025-08-19 18:45:34,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a612d0>)
2025-08-19 18:45:34,575:INFO:Checking exceptions
2025-08-19 18:45:34,575:INFO:Preloading libraries
2025-08-19 18:45:34,575:INFO:Set up data.
2025-08-19 18:45:34,578:INFO:Set up index.
2025-08-19 18:45:34,674:INFO:Initializing create_model()
2025-08-19 18:45:34,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:34,674:INFO:Checking exceptions
2025-08-19 18:45:34,675:INFO:Importing libraries
2025-08-19 18:45:34,675:INFO:Copying training dataset
2025-08-19 18:45:34,678:INFO:Defining folds
2025-08-19 18:45:34,678:INFO:Declaring metric variables
2025-08-19 18:45:34,679:INFO:Importing untrained model
2025-08-19 18:45:34,679:INFO:Logistic Regression Imported successfully
2025-08-19 18:45:34,679:INFO:Starting cross validation
2025-08-19 18:45:34,681:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:34,777:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:34,791:INFO:Calculating mean and std
2025-08-19 18:45:34,791:INFO:Creating metrics dataframe
2025-08-19 18:45:34,792:INFO:Finalizing model
2025-08-19 18:45:34,825:INFO:Uploading results into container
2025-08-19 18:45:34,825:INFO:Uploading model into container now
2025-08-19 18:45:34,825:INFO:_master_model_container: 31
2025-08-19 18:45:34,825:INFO:_display_container: 31
2025-08-19 18:45:34,825:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:45:34,825:INFO:create_model() successfully completed......................................
2025-08-19 18:45:34,902:INFO:Initializing finalize_model()
2025-08-19 18:45:34,902:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:34,902:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:45:34,903:INFO:Initializing create_model()
2025-08-19 18:45:34,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:34,903:INFO:Checking exceptions
2025-08-19 18:45:34,904:INFO:Importing libraries
2025-08-19 18:45:34,904:INFO:Copying training dataset
2025-08-19 18:45:34,904:INFO:Defining folds
2025-08-19 18:45:34,904:INFO:Declaring metric variables
2025-08-19 18:45:34,904:INFO:Importing untrained model
2025-08-19 18:45:34,904:INFO:Declaring custom model
2025-08-19 18:45:34,904:INFO:Logistic Regression Imported successfully
2025-08-19 18:45:34,905:INFO:Cross validation set to False
2025-08-19 18:45:34,905:INFO:Fitting Model
2025-08-19 18:45:34,963:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:45:34,963:INFO:create_model() successfully completed......................................
2025-08-19 18:45:35,020:INFO:_master_model_container: 31
2025-08-19 18:45:35,020:INFO:_display_container: 31
2025-08-19 18:45:35,030:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:45:35,031:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:35,111:INFO:Initializing predict_model()
2025-08-19 18:45:35,111:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61c60>)
2025-08-19 18:45:35,111:INFO:Checking exceptions
2025-08-19 18:45:35,111:INFO:Preloading libraries
2025-08-19 18:45:35,111:INFO:Set up data.
2025-08-19 18:45:35,117:INFO:Set up index.
2025-08-19 18:45:35,210:INFO:Initializing create_model()
2025-08-19 18:45:35,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:35,210:INFO:Checking exceptions
2025-08-19 18:45:35,211:INFO:Importing libraries
2025-08-19 18:45:35,211:INFO:Copying training dataset
2025-08-19 18:45:35,213:INFO:Defining folds
2025-08-19 18:45:35,213:INFO:Declaring metric variables
2025-08-19 18:45:35,213:INFO:Importing untrained model
2025-08-19 18:45:35,213:INFO:Naive Bayes Imported successfully
2025-08-19 18:45:35,213:INFO:Starting cross validation
2025-08-19 18:45:35,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:35,315:INFO:Calculating mean and std
2025-08-19 18:45:35,315:INFO:Creating metrics dataframe
2025-08-19 18:45:35,316:INFO:Finalizing model
2025-08-19 18:45:35,335:INFO:Uploading results into container
2025-08-19 18:45:35,336:INFO:Uploading model into container now
2025-08-19 18:45:35,336:INFO:_master_model_container: 32
2025-08-19 18:45:35,336:INFO:_display_container: 33
2025-08-19 18:45:35,336:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:45:35,336:INFO:create_model() successfully completed......................................
2025-08-19 18:45:35,391:INFO:Initializing finalize_model()
2025-08-19 18:45:35,391:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:35,391:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:45:35,392:INFO:Initializing create_model()
2025-08-19 18:45:35,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:35,392:INFO:Checking exceptions
2025-08-19 18:45:35,393:INFO:Importing libraries
2025-08-19 18:45:35,393:INFO:Copying training dataset
2025-08-19 18:45:35,393:INFO:Defining folds
2025-08-19 18:45:35,393:INFO:Declaring metric variables
2025-08-19 18:45:35,393:INFO:Importing untrained model
2025-08-19 18:45:35,393:INFO:Declaring custom model
2025-08-19 18:45:35,393:INFO:Naive Bayes Imported successfully
2025-08-19 18:45:35,394:INFO:Cross validation set to False
2025-08-19 18:45:35,394:INFO:Fitting Model
2025-08-19 18:45:35,416:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:45:35,416:INFO:create_model() successfully completed......................................
2025-08-19 18:45:35,474:INFO:_master_model_container: 32
2025-08-19 18:45:35,474:INFO:_display_container: 33
2025-08-19 18:45:35,478:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:45:35,478:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:35,541:INFO:Initializing predict_model()
2025-08-19 18:45:35,541:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a9c7c0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a61090>)
2025-08-19 18:45:35,541:INFO:Checking exceptions
2025-08-19 18:45:35,541:INFO:Preloading libraries
2025-08-19 18:45:35,541:INFO:Set up data.
2025-08-19 18:45:35,544:INFO:Set up index.
2025-08-19 18:45:35,634:INFO:PyCaret ClassificationExperiment
2025-08-19 18:45:35,634:INFO:Logging name: clf-default-name
2025-08-19 18:45:35,634:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:45:35,634:INFO:version 3.3.2
2025-08-19 18:45:35,634:INFO:Initializing setup()
2025-08-19 18:45:35,634:INFO:self.USI: d20a
2025-08-19 18:45:35,634:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:45:35,634:INFO:Checking environment
2025-08-19 18:45:35,634:INFO:python_version: 3.10.18
2025-08-19 18:45:35,634:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:45:35,634:INFO:machine: arm64
2025-08-19 18:45:35,634:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:45:35,634:INFO:Memory: svmem(total=17179869184, available=2965962752, percent=82.7, used=5967740928, free=66961408, active=2911780864, inactive=2817884160, wired=3055960064)
2025-08-19 18:45:35,634:INFO:Physical Core: 8
2025-08-19 18:45:35,634:INFO:Logical Core: 8
2025-08-19 18:45:35,635:INFO:Checking libraries
2025-08-19 18:45:35,635:INFO:System:
2025-08-19 18:45:35,635:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:45:35,635:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:45:35,635:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:45:35,635:INFO:PyCaret required dependencies:
2025-08-19 18:45:35,635:INFO:                 pip: 25.2
2025-08-19 18:45:35,635:INFO:          setuptools: 80.9.0
2025-08-19 18:45:35,635:INFO:             pycaret: 3.3.2
2025-08-19 18:45:35,635:INFO:             IPython: 8.37.0
2025-08-19 18:45:35,635:INFO:          ipywidgets: 8.1.7
2025-08-19 18:45:35,635:INFO:                tqdm: 4.67.1
2025-08-19 18:45:35,635:INFO:               numpy: 1.25.2
2025-08-19 18:45:35,635:INFO:              pandas: 2.1.4
2025-08-19 18:45:35,635:INFO:              jinja2: 3.1.6
2025-08-19 18:45:35,635:INFO:               scipy: 1.9.3
2025-08-19 18:45:35,635:INFO:              joblib: 1.3.2
2025-08-19 18:45:35,635:INFO:             sklearn: 1.4.2
2025-08-19 18:45:35,635:INFO:                pyod: 2.0.5
2025-08-19 18:45:35,635:INFO:            imblearn: 0.12.4
2025-08-19 18:45:35,635:INFO:   category_encoders: 2.7.0
2025-08-19 18:45:35,635:INFO:            lightgbm: 4.6.0
2025-08-19 18:45:35,635:INFO:               numba: 0.61.2
2025-08-19 18:45:35,635:INFO:            requests: 2.32.4
2025-08-19 18:45:35,635:INFO:          matplotlib: 3.7.2
2025-08-19 18:45:35,635:INFO:          scikitplot: 0.3.7
2025-08-19 18:45:35,635:INFO:         yellowbrick: 1.5
2025-08-19 18:45:35,635:INFO:              plotly: 5.24.1
2025-08-19 18:45:35,635:INFO:    plotly-resampler: Not installed
2025-08-19 18:45:35,635:INFO:             kaleido: 1.0.0
2025-08-19 18:45:35,635:INFO:           schemdraw: 0.15
2025-08-19 18:45:35,635:INFO:         statsmodels: 0.14.5
2025-08-19 18:45:35,635:INFO:              sktime: 0.26.0
2025-08-19 18:45:35,635:INFO:               tbats: 1.1.3
2025-08-19 18:45:35,635:INFO:            pmdarima: 2.0.4
2025-08-19 18:45:35,635:INFO:              psutil: 7.0.0
2025-08-19 18:45:35,635:INFO:          markupsafe: 3.0.2
2025-08-19 18:45:35,635:INFO:             pickle5: Not installed
2025-08-19 18:45:35,635:INFO:         cloudpickle: 3.1.1
2025-08-19 18:45:35,635:INFO:         deprecation: 2.1.0
2025-08-19 18:45:35,635:INFO:              xxhash: 3.5.0
2025-08-19 18:45:35,635:INFO:           wurlitzer: 3.1.1
2025-08-19 18:45:35,635:INFO:PyCaret optional dependencies:
2025-08-19 18:45:35,635:INFO:                shap: 0.48.0
2025-08-19 18:45:35,635:INFO:           interpret: Not installed
2025-08-19 18:45:35,635:INFO:                umap: Not installed
2025-08-19 18:45:35,635:INFO:     ydata_profiling: Not installed
2025-08-19 18:45:35,635:INFO:  explainerdashboard: Not installed
2025-08-19 18:45:35,635:INFO:             autoviz: Not installed
2025-08-19 18:45:35,635:INFO:           fairlearn: Not installed
2025-08-19 18:45:35,635:INFO:          deepchecks: Not installed
2025-08-19 18:45:35,635:INFO:             xgboost: 3.0.4
2025-08-19 18:45:35,635:INFO:            catboost: 1.2.8
2025-08-19 18:45:35,635:INFO:              kmodes: Not installed
2025-08-19 18:45:35,635:INFO:             mlxtend: 0.23.4
2025-08-19 18:45:35,635:INFO:       statsforecast: Not installed
2025-08-19 18:45:35,635:INFO:        tune_sklearn: Not installed
2025-08-19 18:45:35,635:INFO:                 ray: Not installed
2025-08-19 18:45:35,635:INFO:            hyperopt: Not installed
2025-08-19 18:45:35,635:INFO:              optuna: 4.4.0
2025-08-19 18:45:35,635:INFO:               skopt: Not installed
2025-08-19 18:45:35,635:INFO:              mlflow: Not installed
2025-08-19 18:45:35,635:INFO:              gradio: Not installed
2025-08-19 18:45:35,635:INFO:             fastapi: Not installed
2025-08-19 18:45:35,635:INFO:             uvicorn: Not installed
2025-08-19 18:45:35,635:INFO:              m2cgen: Not installed
2025-08-19 18:45:35,636:INFO:           evidently: Not installed
2025-08-19 18:45:35,636:INFO:               fugue: Not installed
2025-08-19 18:45:35,636:INFO:           streamlit: Not installed
2025-08-19 18:45:35,636:INFO:             prophet: Not installed
2025-08-19 18:45:35,636:INFO:None
2025-08-19 18:45:35,636:INFO:Set up data.
2025-08-19 18:45:35,639:INFO:Set up folding strategy.
2025-08-19 18:45:35,639:INFO:Set up train/test split.
2025-08-19 18:45:35,639:INFO:Set up data.
2025-08-19 18:45:35,643:INFO:Set up index.
2025-08-19 18:45:35,643:INFO:Assigning column types.
2025-08-19 18:45:35,645:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:45:35,667:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:45:35,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:45:35,680:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:45:35,681:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:45:35,701:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:45:35,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:45:35,714:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:45:35,715:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:45:35,716:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:45:35,736:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:45:35,748:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:45:35,749:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:45:35,770:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:45:35,782:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:45:35,783:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:45:35,783:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:45:35,816:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:45:35,817:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:45:35,850:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:45:35,851:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:45:35,852:INFO:Preparing preprocessing pipeline...
2025-08-19 18:45:35,853:INFO:Set up label encoding.
2025-08-19 18:45:35,853:INFO:Set up simple imputation.
2025-08-19 18:45:35,854:INFO:Set up encoding of categorical features.
2025-08-19 18:45:35,897:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:45:35,901:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:45:35,901:INFO:Creating final display dataframe.
2025-08-19 18:45:36,011:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              d20a
2025-08-19 18:45:36,043:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:45:36,045:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:45:36,077:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:45:36,078:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:45:36,079:INFO:setup() successfully completed in 0.45s...............
2025-08-19 18:45:36,081:INFO:Initializing compare_models()
2025-08-19 18:45:36,081:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:45:36,081:INFO:Checking exceptions
2025-08-19 18:45:36,082:INFO:Preparing display monitor
2025-08-19 18:45:36,083:INFO:Initializing Logistic Regression
2025-08-19 18:45:36,083:INFO:Total runtime is 9.020169576009114e-07 minutes
2025-08-19 18:45:36,083:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:36,083:INFO:Initializing create_model()
2025-08-19 18:45:36,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:36,084:INFO:Checking exceptions
2025-08-19 18:45:36,084:INFO:Importing libraries
2025-08-19 18:45:36,084:INFO:Copying training dataset
2025-08-19 18:45:36,085:INFO:Defining folds
2025-08-19 18:45:36,085:INFO:Declaring metric variables
2025-08-19 18:45:36,085:INFO:Importing untrained model
2025-08-19 18:45:36,085:INFO:Logistic Regression Imported successfully
2025-08-19 18:45:36,085:INFO:Starting cross validation
2025-08-19 18:45:36,086:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:36,177:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:36,180:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:36,191:INFO:Calculating mean and std
2025-08-19 18:45:36,192:INFO:Creating metrics dataframe
2025-08-19 18:45:36,193:INFO:Uploading results into container
2025-08-19 18:45:36,193:INFO:Uploading model into container now
2025-08-19 18:45:36,193:INFO:_master_model_container: 1
2025-08-19 18:45:36,193:INFO:_display_container: 2
2025-08-19 18:45:36,193:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:45:36,193:INFO:create_model() successfully completed......................................
2025-08-19 18:45:36,248:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:36,248:INFO:Creating metrics dataframe
2025-08-19 18:45:36,249:INFO:Initializing K Neighbors Classifier
2025-08-19 18:45:36,250:INFO:Total runtime is 0.002771317958831787 minutes
2025-08-19 18:45:36,250:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:36,250:INFO:Initializing create_model()
2025-08-19 18:45:36,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:36,250:INFO:Checking exceptions
2025-08-19 18:45:36,250:INFO:Importing libraries
2025-08-19 18:45:36,250:INFO:Copying training dataset
2025-08-19 18:45:36,251:INFO:Defining folds
2025-08-19 18:45:36,251:INFO:Declaring metric variables
2025-08-19 18:45:36,251:INFO:Importing untrained model
2025-08-19 18:45:36,251:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:45:36,252:INFO:Starting cross validation
2025-08-19 18:45:36,252:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:36,341:INFO:Calculating mean and std
2025-08-19 18:45:36,341:INFO:Creating metrics dataframe
2025-08-19 18:45:36,342:INFO:Uploading results into container
2025-08-19 18:45:36,342:INFO:Uploading model into container now
2025-08-19 18:45:36,342:INFO:_master_model_container: 2
2025-08-19 18:45:36,342:INFO:_display_container: 2
2025-08-19 18:45:36,342:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:45:36,342:INFO:create_model() successfully completed......................................
2025-08-19 18:45:36,398:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:36,398:INFO:Creating metrics dataframe
2025-08-19 18:45:36,400:INFO:Initializing Naive Bayes
2025-08-19 18:45:36,402:INFO:Total runtime is 0.005312430858612061 minutes
2025-08-19 18:45:36,402:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:36,402:INFO:Initializing create_model()
2025-08-19 18:45:36,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:36,402:INFO:Checking exceptions
2025-08-19 18:45:36,402:INFO:Importing libraries
2025-08-19 18:45:36,402:INFO:Copying training dataset
2025-08-19 18:45:36,404:INFO:Defining folds
2025-08-19 18:45:36,404:INFO:Declaring metric variables
2025-08-19 18:45:36,404:INFO:Importing untrained model
2025-08-19 18:45:36,404:INFO:Naive Bayes Imported successfully
2025-08-19 18:45:36,404:INFO:Starting cross validation
2025-08-19 18:45:36,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:36,495:INFO:Calculating mean and std
2025-08-19 18:45:36,495:INFO:Creating metrics dataframe
2025-08-19 18:45:36,496:INFO:Uploading results into container
2025-08-19 18:45:36,496:INFO:Uploading model into container now
2025-08-19 18:45:36,496:INFO:_master_model_container: 3
2025-08-19 18:45:36,497:INFO:_display_container: 2
2025-08-19 18:45:36,497:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:45:36,497:INFO:create_model() successfully completed......................................
2025-08-19 18:45:36,551:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:36,551:INFO:Creating metrics dataframe
2025-08-19 18:45:36,552:INFO:Initializing Decision Tree Classifier
2025-08-19 18:45:36,552:INFO:Total runtime is 0.007819151878356934 minutes
2025-08-19 18:45:36,552:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:36,553:INFO:Initializing create_model()
2025-08-19 18:45:36,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:36,553:INFO:Checking exceptions
2025-08-19 18:45:36,553:INFO:Importing libraries
2025-08-19 18:45:36,553:INFO:Copying training dataset
2025-08-19 18:45:36,554:INFO:Defining folds
2025-08-19 18:45:36,554:INFO:Declaring metric variables
2025-08-19 18:45:36,554:INFO:Importing untrained model
2025-08-19 18:45:36,554:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:45:36,554:INFO:Starting cross validation
2025-08-19 18:45:36,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:36,654:INFO:Calculating mean and std
2025-08-19 18:45:36,654:INFO:Creating metrics dataframe
2025-08-19 18:45:36,655:INFO:Uploading results into container
2025-08-19 18:45:36,655:INFO:Uploading model into container now
2025-08-19 18:45:36,655:INFO:_master_model_container: 4
2025-08-19 18:45:36,655:INFO:_display_container: 2
2025-08-19 18:45:36,656:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:45:36,656:INFO:create_model() successfully completed......................................
2025-08-19 18:45:36,716:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:36,716:INFO:Creating metrics dataframe
2025-08-19 18:45:36,718:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:45:36,718:INFO:Total runtime is 0.010573037465413411 minutes
2025-08-19 18:45:36,718:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:36,718:INFO:Initializing create_model()
2025-08-19 18:45:36,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:36,718:INFO:Checking exceptions
2025-08-19 18:45:36,718:INFO:Importing libraries
2025-08-19 18:45:36,718:INFO:Copying training dataset
2025-08-19 18:45:36,720:INFO:Defining folds
2025-08-19 18:45:36,720:INFO:Declaring metric variables
2025-08-19 18:45:36,720:INFO:Importing untrained model
2025-08-19 18:45:36,720:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:45:36,720:INFO:Starting cross validation
2025-08-19 18:45:36,721:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:36,828:INFO:Calculating mean and std
2025-08-19 18:45:36,828:INFO:Creating metrics dataframe
2025-08-19 18:45:36,829:INFO:Uploading results into container
2025-08-19 18:45:36,829:INFO:Uploading model into container now
2025-08-19 18:45:36,829:INFO:_master_model_container: 5
2025-08-19 18:45:36,829:INFO:_display_container: 2
2025-08-19 18:45:36,830:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:45:36,830:INFO:create_model() successfully completed......................................
2025-08-19 18:45:36,891:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:36,891:INFO:Creating metrics dataframe
2025-08-19 18:45:36,893:INFO:Initializing Ridge Classifier
2025-08-19 18:45:36,893:INFO:Total runtime is 0.013488352298736572 minutes
2025-08-19 18:45:36,893:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:36,893:INFO:Initializing create_model()
2025-08-19 18:45:36,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:36,893:INFO:Checking exceptions
2025-08-19 18:45:36,893:INFO:Importing libraries
2025-08-19 18:45:36,893:INFO:Copying training dataset
2025-08-19 18:45:36,894:INFO:Defining folds
2025-08-19 18:45:36,894:INFO:Declaring metric variables
2025-08-19 18:45:36,894:INFO:Importing untrained model
2025-08-19 18:45:36,894:INFO:Ridge Classifier Imported successfully
2025-08-19 18:45:36,894:INFO:Starting cross validation
2025-08-19 18:45:36,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:36,986:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:37,000:INFO:Calculating mean and std
2025-08-19 18:45:37,001:INFO:Creating metrics dataframe
2025-08-19 18:45:37,002:INFO:Uploading results into container
2025-08-19 18:45:37,002:INFO:Uploading model into container now
2025-08-19 18:45:37,002:INFO:_master_model_container: 6
2025-08-19 18:45:37,002:INFO:_display_container: 2
2025-08-19 18:45:37,002:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:45:37,002:INFO:create_model() successfully completed......................................
2025-08-19 18:45:37,055:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:37,055:INFO:Creating metrics dataframe
2025-08-19 18:45:37,057:INFO:Initializing Random Forest Classifier
2025-08-19 18:45:37,057:INFO:Total runtime is 0.016227332750956218 minutes
2025-08-19 18:45:37,057:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:37,057:INFO:Initializing create_model()
2025-08-19 18:45:37,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:37,057:INFO:Checking exceptions
2025-08-19 18:45:37,057:INFO:Importing libraries
2025-08-19 18:45:37,057:INFO:Copying training dataset
2025-08-19 18:45:37,059:INFO:Defining folds
2025-08-19 18:45:37,059:INFO:Declaring metric variables
2025-08-19 18:45:37,059:INFO:Importing untrained model
2025-08-19 18:45:37,059:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:45:37,059:INFO:Starting cross validation
2025-08-19 18:45:37,060:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:37,489:INFO:Calculating mean and std
2025-08-19 18:45:37,489:INFO:Creating metrics dataframe
2025-08-19 18:45:37,491:INFO:Uploading results into container
2025-08-19 18:45:37,491:INFO:Uploading model into container now
2025-08-19 18:45:37,491:INFO:_master_model_container: 7
2025-08-19 18:45:37,491:INFO:_display_container: 2
2025-08-19 18:45:37,491:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:45:37,491:INFO:create_model() successfully completed......................................
2025-08-19 18:45:37,546:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:37,546:INFO:Creating metrics dataframe
2025-08-19 18:45:37,547:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:45:37,547:INFO:Total runtime is 0.02439945141474406 minutes
2025-08-19 18:45:37,547:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:37,547:INFO:Initializing create_model()
2025-08-19 18:45:37,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:37,547:INFO:Checking exceptions
2025-08-19 18:45:37,547:INFO:Importing libraries
2025-08-19 18:45:37,547:INFO:Copying training dataset
2025-08-19 18:45:37,549:INFO:Defining folds
2025-08-19 18:45:37,549:INFO:Declaring metric variables
2025-08-19 18:45:37,549:INFO:Importing untrained model
2025-08-19 18:45:37,549:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:45:37,549:INFO:Starting cross validation
2025-08-19 18:45:37,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:37,575:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,580:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,584:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,590:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,592:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,605:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,619:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,625:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,639:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,642:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:45:37,663:INFO:Calculating mean and std
2025-08-19 18:45:37,663:INFO:Creating metrics dataframe
2025-08-19 18:45:37,664:INFO:Uploading results into container
2025-08-19 18:45:37,664:INFO:Uploading model into container now
2025-08-19 18:45:37,664:INFO:_master_model_container: 8
2025-08-19 18:45:37,665:INFO:_display_container: 2
2025-08-19 18:45:37,665:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:45:37,665:INFO:create_model() successfully completed......................................
2025-08-19 18:45:37,718:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:37,719:INFO:Creating metrics dataframe
2025-08-19 18:45:37,720:INFO:Initializing Ada Boost Classifier
2025-08-19 18:45:37,720:INFO:Total runtime is 0.02727470397949219 minutes
2025-08-19 18:45:37,720:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:37,720:INFO:Initializing create_model()
2025-08-19 18:45:37,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:37,720:INFO:Checking exceptions
2025-08-19 18:45:37,720:INFO:Importing libraries
2025-08-19 18:45:37,720:INFO:Copying training dataset
2025-08-19 18:45:37,721:INFO:Defining folds
2025-08-19 18:45:37,721:INFO:Declaring metric variables
2025-08-19 18:45:37,721:INFO:Importing untrained model
2025-08-19 18:45:37,721:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:45:37,722:INFO:Starting cross validation
2025-08-19 18:45:37,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:37,748:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,749:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,749:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,754:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,764:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,771:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,776:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,787:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,925:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:37,940:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:45:38,088:INFO:Calculating mean and std
2025-08-19 18:45:38,089:INFO:Creating metrics dataframe
2025-08-19 18:45:38,090:INFO:Uploading results into container
2025-08-19 18:45:38,090:INFO:Uploading model into container now
2025-08-19 18:45:38,090:INFO:_master_model_container: 9
2025-08-19 18:45:38,090:INFO:_display_container: 2
2025-08-19 18:45:38,090:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:45:38,090:INFO:create_model() successfully completed......................................
2025-08-19 18:45:38,156:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:38,156:INFO:Creating metrics dataframe
2025-08-19 18:45:38,157:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:45:38,157:INFO:Total runtime is 0.03456273078918457 minutes
2025-08-19 18:45:38,157:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:38,157:INFO:Initializing create_model()
2025-08-19 18:45:38,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:38,157:INFO:Checking exceptions
2025-08-19 18:45:38,157:INFO:Importing libraries
2025-08-19 18:45:38,157:INFO:Copying training dataset
2025-08-19 18:45:38,159:INFO:Defining folds
2025-08-19 18:45:38,159:INFO:Declaring metric variables
2025-08-19 18:45:38,159:INFO:Importing untrained model
2025-08-19 18:45:38,159:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:45:38,160:INFO:Starting cross validation
2025-08-19 18:45:38,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:39,141:INFO:Calculating mean and std
2025-08-19 18:45:39,141:INFO:Creating metrics dataframe
2025-08-19 18:45:39,142:INFO:Uploading results into container
2025-08-19 18:45:39,142:INFO:Uploading model into container now
2025-08-19 18:45:39,143:INFO:_master_model_container: 10
2025-08-19 18:45:39,143:INFO:_display_container: 2
2025-08-19 18:45:39,143:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:45:39,143:INFO:create_model() successfully completed......................................
2025-08-19 18:45:39,197:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:39,197:INFO:Creating metrics dataframe
2025-08-19 18:45:39,198:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:45:39,198:INFO:Total runtime is 0.05191198587417603 minutes
2025-08-19 18:45:39,198:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:39,198:INFO:Initializing create_model()
2025-08-19 18:45:39,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:39,198:INFO:Checking exceptions
2025-08-19 18:45:39,198:INFO:Importing libraries
2025-08-19 18:45:39,198:INFO:Copying training dataset
2025-08-19 18:45:39,200:INFO:Defining folds
2025-08-19 18:45:39,200:INFO:Declaring metric variables
2025-08-19 18:45:39,200:INFO:Importing untrained model
2025-08-19 18:45:39,200:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:45:39,200:INFO:Starting cross validation
2025-08-19 18:45:39,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:39,315:INFO:Calculating mean and std
2025-08-19 18:45:39,315:INFO:Creating metrics dataframe
2025-08-19 18:45:39,317:INFO:Uploading results into container
2025-08-19 18:45:39,317:INFO:Uploading model into container now
2025-08-19 18:45:39,317:INFO:_master_model_container: 11
2025-08-19 18:45:39,317:INFO:_display_container: 2
2025-08-19 18:45:39,317:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:45:39,317:INFO:create_model() successfully completed......................................
2025-08-19 18:45:39,383:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:39,383:INFO:Creating metrics dataframe
2025-08-19 18:45:39,384:INFO:Initializing Extra Trees Classifier
2025-08-19 18:45:39,385:INFO:Total runtime is 0.05502055088678996 minutes
2025-08-19 18:45:39,385:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:39,385:INFO:Initializing create_model()
2025-08-19 18:45:39,385:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:39,385:INFO:Checking exceptions
2025-08-19 18:45:39,385:INFO:Importing libraries
2025-08-19 18:45:39,385:INFO:Copying training dataset
2025-08-19 18:45:39,386:INFO:Defining folds
2025-08-19 18:45:39,387:INFO:Declaring metric variables
2025-08-19 18:45:39,387:INFO:Importing untrained model
2025-08-19 18:45:39,387:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:45:39,387:INFO:Starting cross validation
2025-08-19 18:45:39,388:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:39,725:INFO:Calculating mean and std
2025-08-19 18:45:39,725:INFO:Creating metrics dataframe
2025-08-19 18:45:39,726:INFO:Uploading results into container
2025-08-19 18:45:39,727:INFO:Uploading model into container now
2025-08-19 18:45:39,727:INFO:_master_model_container: 12
2025-08-19 18:45:39,727:INFO:_display_container: 2
2025-08-19 18:45:39,727:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:45:39,727:INFO:create_model() successfully completed......................................
2025-08-19 18:45:39,782:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:39,782:INFO:Creating metrics dataframe
2025-08-19 18:45:39,783:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:45:39,783:INFO:Total runtime is 0.06167018413543702 minutes
2025-08-19 18:45:39,784:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:39,784:INFO:Initializing create_model()
2025-08-19 18:45:39,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:39,784:INFO:Checking exceptions
2025-08-19 18:45:39,784:INFO:Importing libraries
2025-08-19 18:45:39,784:INFO:Copying training dataset
2025-08-19 18:45:39,785:INFO:Defining folds
2025-08-19 18:45:39,785:INFO:Declaring metric variables
2025-08-19 18:45:39,785:INFO:Importing untrained model
2025-08-19 18:45:39,786:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:45:39,786:INFO:Starting cross validation
2025-08-19 18:45:39,786:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:39,952:INFO:Calculating mean and std
2025-08-19 18:45:39,953:INFO:Creating metrics dataframe
2025-08-19 18:45:39,954:INFO:Uploading results into container
2025-08-19 18:45:39,954:INFO:Uploading model into container now
2025-08-19 18:45:39,954:INFO:_master_model_container: 13
2025-08-19 18:45:39,954:INFO:_display_container: 2
2025-08-19 18:45:39,954:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:45:39,954:INFO:create_model() successfully completed......................................
2025-08-19 18:45:40,008:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:40,008:INFO:Creating metrics dataframe
2025-08-19 18:45:40,010:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:45:40,010:INFO:Total runtime is 0.06544655164082845 minutes
2025-08-19 18:45:40,010:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:40,010:INFO:Initializing create_model()
2025-08-19 18:45:40,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:40,010:INFO:Checking exceptions
2025-08-19 18:45:40,010:INFO:Importing libraries
2025-08-19 18:45:40,010:INFO:Copying training dataset
2025-08-19 18:45:40,012:INFO:Defining folds
2025-08-19 18:45:40,012:INFO:Declaring metric variables
2025-08-19 18:45:40,012:INFO:Importing untrained model
2025-08-19 18:45:40,012:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:45:40,012:INFO:Starting cross validation
2025-08-19 18:45:40,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:43,114:INFO:Calculating mean and std
2025-08-19 18:45:43,114:INFO:Creating metrics dataframe
2025-08-19 18:45:43,116:INFO:Uploading results into container
2025-08-19 18:45:43,116:INFO:Uploading model into container now
2025-08-19 18:45:43,116:INFO:_master_model_container: 14
2025-08-19 18:45:43,116:INFO:_display_container: 2
2025-08-19 18:45:43,117:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:45:43,117:INFO:create_model() successfully completed......................................
2025-08-19 18:45:43,180:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:43,180:INFO:Creating metrics dataframe
2025-08-19 18:45:43,181:INFO:Initializing CatBoost Classifier
2025-08-19 18:45:43,181:INFO:Total runtime is 0.11830145120620728 minutes
2025-08-19 18:45:43,181:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:43,182:INFO:Initializing create_model()
2025-08-19 18:45:43,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:43,182:INFO:Checking exceptions
2025-08-19 18:45:43,182:INFO:Importing libraries
2025-08-19 18:45:43,182:INFO:Copying training dataset
2025-08-19 18:45:43,183:INFO:Defining folds
2025-08-19 18:45:43,183:INFO:Declaring metric variables
2025-08-19 18:45:43,183:INFO:Importing untrained model
2025-08-19 18:45:43,183:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:45:43,183:INFO:Starting cross validation
2025-08-19 18:45:43,184:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:51,918:INFO:Calculating mean and std
2025-08-19 18:45:51,919:INFO:Creating metrics dataframe
2025-08-19 18:45:51,921:INFO:Uploading results into container
2025-08-19 18:45:51,922:INFO:Uploading model into container now
2025-08-19 18:45:51,922:INFO:_master_model_container: 15
2025-08-19 18:45:51,922:INFO:_display_container: 2
2025-08-19 18:45:51,922:INFO:<catboost.core.CatBoostClassifier object at 0x307926d10>
2025-08-19 18:45:51,922:INFO:create_model() successfully completed......................................
2025-08-19 18:45:52,002:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:52,002:INFO:Creating metrics dataframe
2025-08-19 18:45:52,004:INFO:Initializing Dummy Classifier
2025-08-19 18:45:52,004:INFO:Total runtime is 0.265342919031779 minutes
2025-08-19 18:45:52,004:INFO:SubProcess create_model() called ==================================
2025-08-19 18:45:52,004:INFO:Initializing create_model()
2025-08-19 18:45:52,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a454b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:52,004:INFO:Checking exceptions
2025-08-19 18:45:52,004:INFO:Importing libraries
2025-08-19 18:45:52,004:INFO:Copying training dataset
2025-08-19 18:45:52,006:INFO:Defining folds
2025-08-19 18:45:52,006:INFO:Declaring metric variables
2025-08-19 18:45:52,006:INFO:Importing untrained model
2025-08-19 18:45:52,006:INFO:Dummy Classifier Imported successfully
2025-08-19 18:45:52,006:INFO:Starting cross validation
2025-08-19 18:45:52,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:52,055:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,059:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,064:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,066:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,066:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,078:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,079:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,085:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,095:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,095:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:45:52,100:INFO:Calculating mean and std
2025-08-19 18:45:52,100:INFO:Creating metrics dataframe
2025-08-19 18:45:52,101:INFO:Uploading results into container
2025-08-19 18:45:52,101:INFO:Uploading model into container now
2025-08-19 18:45:52,101:INFO:_master_model_container: 16
2025-08-19 18:45:52,101:INFO:_display_container: 2
2025-08-19 18:45:52,101:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:45:52,101:INFO:create_model() successfully completed......................................
2025-08-19 18:45:52,156:INFO:SubProcess create_model() end ==================================
2025-08-19 18:45:52,156:INFO:Creating metrics dataframe
2025-08-19 18:45:52,157:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:45:52,158:INFO:Initializing create_model()
2025-08-19 18:45:52,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:52,158:INFO:Checking exceptions
2025-08-19 18:45:52,158:INFO:Importing libraries
2025-08-19 18:45:52,159:INFO:Copying training dataset
2025-08-19 18:45:52,160:INFO:Defining folds
2025-08-19 18:45:52,160:INFO:Declaring metric variables
2025-08-19 18:45:52,160:INFO:Importing untrained model
2025-08-19 18:45:52,160:INFO:Declaring custom model
2025-08-19 18:45:52,161:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:45:52,161:INFO:Cross validation set to False
2025-08-19 18:45:52,161:INFO:Fitting Model
2025-08-19 18:45:52,186:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:45:52,186:INFO:create_model() successfully completed......................................
2025-08-19 18:45:52,244:INFO:_master_model_container: 16
2025-08-19 18:45:52,244:INFO:_display_container: 2
2025-08-19 18:45:52,245:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:45:52,245:INFO:compare_models() successfully completed......................................
2025-08-19 18:45:52,245:INFO:Initializing create_model()
2025-08-19 18:45:52,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:52,245:INFO:Checking exceptions
2025-08-19 18:45:52,246:INFO:Importing libraries
2025-08-19 18:45:52,246:INFO:Copying training dataset
2025-08-19 18:45:52,248:INFO:Defining folds
2025-08-19 18:45:52,248:INFO:Declaring metric variables
2025-08-19 18:45:52,248:INFO:Importing untrained model
2025-08-19 18:45:52,248:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:45:52,248:INFO:Starting cross validation
2025-08-19 18:45:52,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:45:52,351:INFO:Calculating mean and std
2025-08-19 18:45:52,351:INFO:Creating metrics dataframe
2025-08-19 18:45:52,352:INFO:Finalizing model
2025-08-19 18:45:52,377:INFO:Uploading results into container
2025-08-19 18:45:52,377:INFO:Uploading model into container now
2025-08-19 18:45:52,377:INFO:_master_model_container: 17
2025-08-19 18:45:52,377:INFO:_display_container: 3
2025-08-19 18:45:52,378:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:45:52,378:INFO:create_model() successfully completed......................................
2025-08-19 18:45:52,440:INFO:Initializing finalize_model()
2025-08-19 18:45:52,440:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:45:52,440:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:45:52,442:INFO:Initializing create_model()
2025-08-19 18:45:52,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:52,442:INFO:Checking exceptions
2025-08-19 18:45:52,443:INFO:Importing libraries
2025-08-19 18:45:52,444:INFO:Copying training dataset
2025-08-19 18:45:52,444:INFO:Defining folds
2025-08-19 18:45:52,444:INFO:Declaring metric variables
2025-08-19 18:45:52,444:INFO:Importing untrained model
2025-08-19 18:45:52,444:INFO:Declaring custom model
2025-08-19 18:45:52,444:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:45:52,445:INFO:Cross validation set to False
2025-08-19 18:45:52,445:INFO:Fitting Model
2025-08-19 18:45:52,493:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:45:52,493:INFO:create_model() successfully completed......................................
2025-08-19 18:45:52,555:INFO:_master_model_container: 17
2025-08-19 18:45:52,555:INFO:_display_container: 3
2025-08-19 18:45:52,559:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:45:52,559:INFO:finalize_model() successfully completed......................................
2025-08-19 18:45:52,624:INFO:Initializing predict_model()
2025-08-19 18:45:52,624:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a4ad40>)
2025-08-19 18:45:52,624:INFO:Checking exceptions
2025-08-19 18:45:52,624:INFO:Preloading libraries
2025-08-19 18:45:52,624:INFO:Set up data.
2025-08-19 18:45:52,628:INFO:Set up index.
2025-08-19 18:45:52,703:INFO:Initializing create_model()
2025-08-19 18:45:52,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:45:52,703:INFO:Checking exceptions
2025-08-19 18:45:52,704:INFO:Importing libraries
2025-08-19 18:45:52,704:INFO:Copying training dataset
2025-08-19 18:45:52,705:INFO:Defining folds
2025-08-19 18:45:52,705:INFO:Declaring metric variables
2025-08-19 18:45:52,705:INFO:Importing untrained model
2025-08-19 18:45:52,705:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:45:52,706:INFO:Starting cross validation
2025-08-19 18:45:52,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:00,918:INFO:Calculating mean and std
2025-08-19 18:46:00,919:INFO:Creating metrics dataframe
2025-08-19 18:46:00,921:INFO:Finalizing model
2025-08-19 18:46:02,362:INFO:Uploading results into container
2025-08-19 18:46:02,363:INFO:Uploading model into container now
2025-08-19 18:46:02,363:INFO:_master_model_container: 18
2025-08-19 18:46:02,363:INFO:_display_container: 5
2025-08-19 18:46:02,363:INFO:<catboost.core.CatBoostClassifier object at 0x307927f40>
2025-08-19 18:46:02,363:INFO:create_model() successfully completed......................................
2025-08-19 18:46:02,445:INFO:Initializing finalize_model()
2025-08-19 18:46:02,445:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=<catboost.core.CatBoostClassifier object at 0x307927f40>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:02,445:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x307927f40>
2025-08-19 18:46:02,447:INFO:Initializing create_model()
2025-08-19 18:46:02,447:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=<catboost.core.CatBoostClassifier object at 0x307927f40>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:02,447:INFO:Checking exceptions
2025-08-19 18:46:02,448:INFO:Importing libraries
2025-08-19 18:46:02,448:INFO:Copying training dataset
2025-08-19 18:46:02,448:INFO:Defining folds
2025-08-19 18:46:02,448:INFO:Declaring metric variables
2025-08-19 18:46:02,448:INFO:Importing untrained model
2025-08-19 18:46:02,448:INFO:Declaring custom model
2025-08-19 18:46:02,448:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:46:02,449:INFO:Cross validation set to False
2025-08-19 18:46:02,449:INFO:Fitting Model
2025-08-19 18:46:03,771:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x306642d10>)],
         verbose=False)
2025-08-19 18:46:03,771:INFO:create_model() successfully completed......................................
2025-08-19 18:46:03,825:INFO:_master_model_container: 18
2025-08-19 18:46:03,825:INFO:_display_container: 5
2025-08-19 18:46:03,828:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x306642d10>)],
         verbose=False)
2025-08-19 18:46:03,828:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:03,886:INFO:Initializing predict_model()
2025-08-19 18:46:03,886:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x306642d10>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a49e10>)
2025-08-19 18:46:03,886:INFO:Checking exceptions
2025-08-19 18:46:03,886:INFO:Preloading libraries
2025-08-19 18:46:03,886:INFO:Set up data.
2025-08-19 18:46:03,889:INFO:Set up index.
2025-08-19 18:46:03,974:INFO:Initializing create_model()
2025-08-19 18:46:03,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:03,974:INFO:Checking exceptions
2025-08-19 18:46:03,975:INFO:Importing libraries
2025-08-19 18:46:03,975:INFO:Copying training dataset
2025-08-19 18:46:03,977:INFO:Defining folds
2025-08-19 18:46:03,977:INFO:Declaring metric variables
2025-08-19 18:46:03,977:INFO:Importing untrained model
2025-08-19 18:46:03,977:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:46:03,977:INFO:Starting cross validation
2025-08-19 18:46:03,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:04,526:INFO:Calculating mean and std
2025-08-19 18:46:04,526:INFO:Creating metrics dataframe
2025-08-19 18:46:04,527:INFO:Finalizing model
2025-08-19 18:46:04,625:INFO:Uploading results into container
2025-08-19 18:46:04,626:INFO:Uploading model into container now
2025-08-19 18:46:04,626:INFO:_master_model_container: 19
2025-08-19 18:46:04,626:INFO:_display_container: 7
2025-08-19 18:46:04,626:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:46:04,626:INFO:create_model() successfully completed......................................
2025-08-19 18:46:04,681:INFO:Initializing finalize_model()
2025-08-19 18:46:04,681:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:04,681:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:46:04,682:INFO:Initializing create_model()
2025-08-19 18:46:04,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:04,682:INFO:Checking exceptions
2025-08-19 18:46:04,683:INFO:Importing libraries
2025-08-19 18:46:04,683:INFO:Copying training dataset
2025-08-19 18:46:04,683:INFO:Defining folds
2025-08-19 18:46:04,683:INFO:Declaring metric variables
2025-08-19 18:46:04,684:INFO:Importing untrained model
2025-08-19 18:46:04,684:INFO:Declaring custom model
2025-08-19 18:46:04,684:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:46:04,685:INFO:Cross validation set to False
2025-08-19 18:46:04,685:INFO:Fitting Model
2025-08-19 18:46:04,784:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:46:04,784:INFO:create_model() successfully completed......................................
2025-08-19 18:46:04,838:INFO:_master_model_container: 19
2025-08-19 18:46:04,839:INFO:_display_container: 7
2025-08-19 18:46:04,843:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:46:04,843:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:04,901:INFO:Initializing predict_model()
2025-08-19 18:46:04,901:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:04,901:INFO:Checking exceptions
2025-08-19 18:46:04,901:INFO:Preloading libraries
2025-08-19 18:46:04,901:INFO:Set up data.
2025-08-19 18:46:04,904:INFO:Set up index.
2025-08-19 18:46:05,003:INFO:Initializing create_model()
2025-08-19 18:46:05,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:05,003:INFO:Checking exceptions
2025-08-19 18:46:05,004:INFO:Importing libraries
2025-08-19 18:46:05,004:INFO:Copying training dataset
2025-08-19 18:46:05,005:INFO:Defining folds
2025-08-19 18:46:05,005:INFO:Declaring metric variables
2025-08-19 18:46:05,006:INFO:Importing untrained model
2025-08-19 18:46:05,006:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:46:05,006:INFO:Starting cross validation
2025-08-19 18:46:05,006:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:05,033:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,034:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,035:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,036:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,046:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,052:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,065:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,101:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,206:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,213:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,348:INFO:Calculating mean and std
2025-08-19 18:46:05,348:INFO:Creating metrics dataframe
2025-08-19 18:46:05,349:INFO:Finalizing model
2025-08-19 18:46:05,370:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,479:INFO:Uploading results into container
2025-08-19 18:46:05,479:INFO:Uploading model into container now
2025-08-19 18:46:05,480:INFO:_master_model_container: 20
2025-08-19 18:46:05,480:INFO:_display_container: 9
2025-08-19 18:46:05,480:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:46:05,480:INFO:create_model() successfully completed......................................
2025-08-19 18:46:05,541:INFO:Initializing finalize_model()
2025-08-19 18:46:05,541:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:05,542:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:46:05,543:INFO:Initializing create_model()
2025-08-19 18:46:05,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:05,543:INFO:Checking exceptions
2025-08-19 18:46:05,544:INFO:Importing libraries
2025-08-19 18:46:05,544:INFO:Copying training dataset
2025-08-19 18:46:05,544:INFO:Defining folds
2025-08-19 18:46:05,544:INFO:Declaring metric variables
2025-08-19 18:46:05,544:INFO:Importing untrained model
2025-08-19 18:46:05,544:INFO:Declaring custom model
2025-08-19 18:46:05,544:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:46:05,545:INFO:Cross validation set to False
2025-08-19 18:46:05,545:INFO:Fitting Model
2025-08-19 18:46:05,564:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:05,694:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:46:05,694:INFO:create_model() successfully completed......................................
2025-08-19 18:46:05,752:INFO:_master_model_container: 20
2025-08-19 18:46:05,752:INFO:_display_container: 9
2025-08-19 18:46:05,756:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:46:05,756:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:05,813:INFO:Initializing predict_model()
2025-08-19 18:46:05,813:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:05,814:INFO:Checking exceptions
2025-08-19 18:46:05,814:INFO:Preloading libraries
2025-08-19 18:46:05,814:INFO:Set up data.
2025-08-19 18:46:05,817:INFO:Set up index.
2025-08-19 18:46:05,892:INFO:Initializing create_model()
2025-08-19 18:46:05,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:05,892:INFO:Checking exceptions
2025-08-19 18:46:05,893:INFO:Importing libraries
2025-08-19 18:46:05,893:INFO:Copying training dataset
2025-08-19 18:46:05,894:INFO:Defining folds
2025-08-19 18:46:05,894:INFO:Declaring metric variables
2025-08-19 18:46:05,894:INFO:Importing untrained model
2025-08-19 18:46:05,895:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:46:05,895:INFO:Starting cross validation
2025-08-19 18:46:05,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:08,998:INFO:Calculating mean and std
2025-08-19 18:46:08,998:INFO:Creating metrics dataframe
2025-08-19 18:46:08,999:INFO:Finalizing model
2025-08-19 18:46:09,021:INFO:[LightGBM] [Info] Number of positive: 480, number of negative: 288
2025-08-19 18:46:09,021:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000320 seconds.
2025-08-19 18:46:09,021:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:46:09,021:INFO:[LightGBM] [Info] Total Bins 6375
2025-08-19 18:46:09,021:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:46:09,022:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.625000 -> initscore=0.510826
2025-08-19 18:46:09,022:INFO:[LightGBM] [Info] Start training from score 0.510826
2025-08-19 18:46:09,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,062:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,435:INFO:Uploading results into container
2025-08-19 18:46:09,436:INFO:Uploading model into container now
2025-08-19 18:46:09,436:INFO:_master_model_container: 21
2025-08-19 18:46:09,436:INFO:_display_container: 11
2025-08-19 18:46:09,436:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:46:09,436:INFO:create_model() successfully completed......................................
2025-08-19 18:46:09,495:INFO:Initializing finalize_model()
2025-08-19 18:46:09,496:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:09,497:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:46:09,499:INFO:Initializing create_model()
2025-08-19 18:46:09,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:09,502:INFO:Checking exceptions
2025-08-19 18:46:09,503:INFO:Importing libraries
2025-08-19 18:46:09,506:INFO:Copying training dataset
2025-08-19 18:46:09,506:INFO:Defining folds
2025-08-19 18:46:09,506:INFO:Declaring metric variables
2025-08-19 18:46:09,507:INFO:Importing untrained model
2025-08-19 18:46:09,508:INFO:Declaring custom model
2025-08-19 18:46:09,508:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:46:09,512:INFO:Cross validation set to False
2025-08-19 18:46:09,512:INFO:Fitting Model
2025-08-19 18:46:09,532:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:46:09,533:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000403 seconds.
2025-08-19 18:46:09,533:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:46:09,533:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:46:09,533:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:46:09,533:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:46:09,533:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:46:09,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,537:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,541:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,544:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:09,980:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:46:09,980:INFO:create_model() successfully completed......................................
2025-08-19 18:46:10,035:INFO:_master_model_container: 21
2025-08-19 18:46:10,035:INFO:_display_container: 11
2025-08-19 18:46:10,040:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:46:10,040:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:10,098:INFO:Initializing predict_model()
2025-08-19 18:46:10,098:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:10,098:INFO:Checking exceptions
2025-08-19 18:46:10,098:INFO:Preloading libraries
2025-08-19 18:46:10,098:INFO:Set up data.
2025-08-19 18:46:10,102:INFO:Set up index.
2025-08-19 18:46:10,174:INFO:Initializing create_model()
2025-08-19 18:46:10,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:10,175:INFO:Checking exceptions
2025-08-19 18:46:10,175:INFO:Importing libraries
2025-08-19 18:46:10,175:INFO:Copying training dataset
2025-08-19 18:46:10,177:INFO:Defining folds
2025-08-19 18:46:10,177:INFO:Declaring metric variables
2025-08-19 18:46:10,177:INFO:Importing untrained model
2025-08-19 18:46:10,177:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:46:10,177:INFO:Starting cross validation
2025-08-19 18:46:10,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:11,178:INFO:Calculating mean and std
2025-08-19 18:46:11,178:INFO:Creating metrics dataframe
2025-08-19 18:46:11,179:INFO:Finalizing model
2025-08-19 18:46:11,632:INFO:Uploading results into container
2025-08-19 18:46:11,632:INFO:Uploading model into container now
2025-08-19 18:46:11,632:INFO:_master_model_container: 22
2025-08-19 18:46:11,632:INFO:_display_container: 13
2025-08-19 18:46:11,633:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:46:11,633:INFO:create_model() successfully completed......................................
2025-08-19 18:46:11,687:INFO:Initializing finalize_model()
2025-08-19 18:46:11,687:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:11,687:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:46:11,689:INFO:Initializing create_model()
2025-08-19 18:46:11,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:11,689:INFO:Checking exceptions
2025-08-19 18:46:11,689:INFO:Importing libraries
2025-08-19 18:46:11,689:INFO:Copying training dataset
2025-08-19 18:46:11,689:INFO:Defining folds
2025-08-19 18:46:11,689:INFO:Declaring metric variables
2025-08-19 18:46:11,690:INFO:Importing untrained model
2025-08-19 18:46:11,690:INFO:Declaring custom model
2025-08-19 18:46:11,690:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:46:11,690:INFO:Cross validation set to False
2025-08-19 18:46:11,690:INFO:Fitting Model
2025-08-19 18:46:12,283:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:46:12,283:INFO:create_model() successfully completed......................................
2025-08-19 18:46:12,347:INFO:_master_model_container: 22
2025-08-19 18:46:12,347:INFO:_display_container: 13
2025-08-19 18:46:12,351:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:46:12,351:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:12,411:INFO:Initializing predict_model()
2025-08-19 18:46:12,411:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:12,411:INFO:Checking exceptions
2025-08-19 18:46:12,411:INFO:Preloading libraries
2025-08-19 18:46:12,411:INFO:Set up data.
2025-08-19 18:46:12,415:INFO:Set up index.
2025-08-19 18:46:12,485:INFO:Initializing create_model()
2025-08-19 18:46:12,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:12,485:INFO:Checking exceptions
2025-08-19 18:46:12,486:INFO:Importing libraries
2025-08-19 18:46:12,486:INFO:Copying training dataset
2025-08-19 18:46:12,487:INFO:Defining folds
2025-08-19 18:46:12,487:INFO:Declaring metric variables
2025-08-19 18:46:12,487:INFO:Importing untrained model
2025-08-19 18:46:12,488:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:46:12,488:INFO:Starting cross validation
2025-08-19 18:46:12,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:12,666:INFO:Calculating mean and std
2025-08-19 18:46:12,667:INFO:Creating metrics dataframe
2025-08-19 18:46:12,668:INFO:Finalizing model
2025-08-19 18:46:12,799:INFO:Uploading results into container
2025-08-19 18:46:12,799:INFO:Uploading model into container now
2025-08-19 18:46:12,800:INFO:_master_model_container: 23
2025-08-19 18:46:12,800:INFO:_display_container: 15
2025-08-19 18:46:12,800:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:46:12,800:INFO:create_model() successfully completed......................................
2025-08-19 18:46:12,855:INFO:Initializing finalize_model()
2025-08-19 18:46:12,855:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:12,855:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:46:12,856:INFO:Initializing create_model()
2025-08-19 18:46:12,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:12,856:INFO:Checking exceptions
2025-08-19 18:46:12,857:INFO:Importing libraries
2025-08-19 18:46:12,857:INFO:Copying training dataset
2025-08-19 18:46:12,857:INFO:Defining folds
2025-08-19 18:46:12,857:INFO:Declaring metric variables
2025-08-19 18:46:12,857:INFO:Importing untrained model
2025-08-19 18:46:12,857:INFO:Declaring custom model
2025-08-19 18:46:12,858:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:46:12,858:INFO:Cross validation set to False
2025-08-19 18:46:12,858:INFO:Fitting Model
2025-08-19 18:46:13,005:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:46:13,006:INFO:create_model() successfully completed......................................
2025-08-19 18:46:13,060:INFO:_master_model_container: 23
2025-08-19 18:46:13,060:INFO:_display_container: 15
2025-08-19 18:46:13,065:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:46:13,065:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:13,127:INFO:Initializing predict_model()
2025-08-19 18:46:13,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:13,127:INFO:Checking exceptions
2025-08-19 18:46:13,127:INFO:Preloading libraries
2025-08-19 18:46:13,127:INFO:Set up data.
2025-08-19 18:46:13,132:INFO:Set up index.
2025-08-19 18:46:13,215:INFO:Initializing create_model()
2025-08-19 18:46:13,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:13,215:INFO:Checking exceptions
2025-08-19 18:46:13,216:INFO:Importing libraries
2025-08-19 18:46:13,216:INFO:Copying training dataset
2025-08-19 18:46:13,218:INFO:Defining folds
2025-08-19 18:46:13,218:INFO:Declaring metric variables
2025-08-19 18:46:13,218:INFO:Importing untrained model
2025-08-19 18:46:13,218:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:46:13,218:INFO:Starting cross validation
2025-08-19 18:46:13,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:13,639:INFO:Calculating mean and std
2025-08-19 18:46:13,640:INFO:Creating metrics dataframe
2025-08-19 18:46:13,641:INFO:Finalizing model
2025-08-19 18:46:13,725:INFO:Uploading results into container
2025-08-19 18:46:13,726:INFO:Uploading model into container now
2025-08-19 18:46:13,742:INFO:_master_model_container: 24
2025-08-19 18:46:13,742:INFO:_display_container: 17
2025-08-19 18:46:13,751:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:46:13,751:INFO:create_model() successfully completed......................................
2025-08-19 18:46:13,824:INFO:Initializing finalize_model()
2025-08-19 18:46:13,824:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:13,825:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:46:13,826:INFO:Initializing create_model()
2025-08-19 18:46:13,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:13,826:INFO:Checking exceptions
2025-08-19 18:46:13,827:INFO:Importing libraries
2025-08-19 18:46:13,827:INFO:Copying training dataset
2025-08-19 18:46:13,827:INFO:Defining folds
2025-08-19 18:46:13,827:INFO:Declaring metric variables
2025-08-19 18:46:13,827:INFO:Importing untrained model
2025-08-19 18:46:13,827:INFO:Declaring custom model
2025-08-19 18:46:13,828:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:46:13,828:INFO:Cross validation set to False
2025-08-19 18:46:13,828:INFO:Fitting Model
2025-08-19 18:46:13,919:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:46:13,920:INFO:create_model() successfully completed......................................
2025-08-19 18:46:13,974:INFO:_master_model_container: 24
2025-08-19 18:46:13,974:INFO:_display_container: 17
2025-08-19 18:46:13,978:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:46:13,978:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:14,043:INFO:Initializing predict_model()
2025-08-19 18:46:14,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:14,043:INFO:Checking exceptions
2025-08-19 18:46:14,043:INFO:Preloading libraries
2025-08-19 18:46:14,043:INFO:Set up data.
2025-08-19 18:46:14,047:INFO:Set up index.
2025-08-19 18:46:14,145:INFO:Initializing create_model()
2025-08-19 18:46:14,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:14,145:INFO:Checking exceptions
2025-08-19 18:46:14,146:INFO:Importing libraries
2025-08-19 18:46:14,146:INFO:Copying training dataset
2025-08-19 18:46:14,147:INFO:Defining folds
2025-08-19 18:46:14,148:INFO:Declaring metric variables
2025-08-19 18:46:14,148:INFO:Importing untrained model
2025-08-19 18:46:14,148:INFO:Dummy Classifier Imported successfully
2025-08-19 18:46:14,148:INFO:Starting cross validation
2025-08-19 18:46:14,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:14,185:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,191:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,196:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,204:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,208:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,212:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,216:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,225:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,230:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,232:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,241:INFO:Calculating mean and std
2025-08-19 18:46:14,242:INFO:Creating metrics dataframe
2025-08-19 18:46:14,243:INFO:Finalizing model
2025-08-19 18:46:14,261:INFO:Uploading results into container
2025-08-19 18:46:14,261:INFO:Uploading model into container now
2025-08-19 18:46:14,262:INFO:_master_model_container: 25
2025-08-19 18:46:14,262:INFO:_display_container: 19
2025-08-19 18:46:14,262:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:46:14,262:INFO:create_model() successfully completed......................................
2025-08-19 18:46:14,316:INFO:Initializing finalize_model()
2025-08-19 18:46:14,316:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:14,316:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:46:14,318:INFO:Initializing create_model()
2025-08-19 18:46:14,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:14,318:INFO:Checking exceptions
2025-08-19 18:46:14,319:INFO:Importing libraries
2025-08-19 18:46:14,319:INFO:Copying training dataset
2025-08-19 18:46:14,319:INFO:Defining folds
2025-08-19 18:46:14,319:INFO:Declaring metric variables
2025-08-19 18:46:14,319:INFO:Importing untrained model
2025-08-19 18:46:14,319:INFO:Declaring custom model
2025-08-19 18:46:14,319:INFO:Dummy Classifier Imported successfully
2025-08-19 18:46:14,320:INFO:Cross validation set to False
2025-08-19 18:46:14,320:INFO:Fitting Model
2025-08-19 18:46:14,341:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:46:14,341:INFO:create_model() successfully completed......................................
2025-08-19 18:46:14,401:INFO:_master_model_container: 25
2025-08-19 18:46:14,401:INFO:_display_container: 19
2025-08-19 18:46:14,405:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:46:14,405:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:14,483:INFO:Initializing predict_model()
2025-08-19 18:46:14,484:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:14,484:INFO:Checking exceptions
2025-08-19 18:46:14,484:INFO:Preloading libraries
2025-08-19 18:46:14,484:INFO:Set up data.
2025-08-19 18:46:14,487:INFO:Set up index.
2025-08-19 18:46:14,501:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:14,574:INFO:Initializing create_model()
2025-08-19 18:46:14,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:14,574:INFO:Checking exceptions
2025-08-19 18:46:14,575:INFO:Importing libraries
2025-08-19 18:46:14,576:INFO:Copying training dataset
2025-08-19 18:46:14,577:INFO:Defining folds
2025-08-19 18:46:14,577:INFO:Declaring metric variables
2025-08-19 18:46:14,577:INFO:Importing untrained model
2025-08-19 18:46:14,578:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:46:14,578:INFO:Starting cross validation
2025-08-19 18:46:14,578:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:14,740:INFO:Calculating mean and std
2025-08-19 18:46:14,740:INFO:Creating metrics dataframe
2025-08-19 18:46:14,741:INFO:Finalizing model
2025-08-19 18:46:14,760:INFO:Uploading results into container
2025-08-19 18:46:14,761:INFO:Uploading model into container now
2025-08-19 18:46:14,761:INFO:_master_model_container: 26
2025-08-19 18:46:14,761:INFO:_display_container: 21
2025-08-19 18:46:14,761:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:46:14,761:INFO:create_model() successfully completed......................................
2025-08-19 18:46:14,816:INFO:Initializing finalize_model()
2025-08-19 18:46:14,816:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:14,816:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:46:14,818:INFO:Initializing create_model()
2025-08-19 18:46:14,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:14,818:INFO:Checking exceptions
2025-08-19 18:46:14,818:INFO:Importing libraries
2025-08-19 18:46:14,818:INFO:Copying training dataset
2025-08-19 18:46:14,819:INFO:Defining folds
2025-08-19 18:46:14,819:INFO:Declaring metric variables
2025-08-19 18:46:14,819:INFO:Importing untrained model
2025-08-19 18:46:14,819:INFO:Declaring custom model
2025-08-19 18:46:14,819:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:46:14,819:INFO:Cross validation set to False
2025-08-19 18:46:14,820:INFO:Fitting Model
2025-08-19 18:46:14,842:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:46:14,842:INFO:create_model() successfully completed......................................
2025-08-19 18:46:14,896:INFO:_master_model_container: 26
2025-08-19 18:46:14,896:INFO:_display_container: 21
2025-08-19 18:46:14,899:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:46:14,900:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:14,958:INFO:Initializing predict_model()
2025-08-19 18:46:14,958:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:14,958:INFO:Checking exceptions
2025-08-19 18:46:14,958:INFO:Preloading libraries
2025-08-19 18:46:14,958:INFO:Set up data.
2025-08-19 18:46:14,962:INFO:Set up index.
2025-08-19 18:46:15,035:INFO:Initializing create_model()
2025-08-19 18:46:15,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:15,035:INFO:Checking exceptions
2025-08-19 18:46:15,036:INFO:Importing libraries
2025-08-19 18:46:15,036:INFO:Copying training dataset
2025-08-19 18:46:15,037:INFO:Defining folds
2025-08-19 18:46:15,037:INFO:Declaring metric variables
2025-08-19 18:46:15,037:INFO:Importing untrained model
2025-08-19 18:46:15,037:INFO:Logistic Regression Imported successfully
2025-08-19 18:46:15,037:INFO:Starting cross validation
2025-08-19 18:46:15,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:15,114:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:15,137:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:15,151:INFO:Calculating mean and std
2025-08-19 18:46:15,152:INFO:Creating metrics dataframe
2025-08-19 18:46:15,153:INFO:Finalizing model
2025-08-19 18:46:15,182:INFO:Uploading results into container
2025-08-19 18:46:15,183:INFO:Uploading model into container now
2025-08-19 18:46:15,184:INFO:_master_model_container: 27
2025-08-19 18:46:15,184:INFO:_display_container: 23
2025-08-19 18:46:15,184:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:46:15,184:INFO:create_model() successfully completed......................................
2025-08-19 18:46:15,259:INFO:Initializing finalize_model()
2025-08-19 18:46:15,260:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:15,260:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:46:15,262:INFO:Initializing create_model()
2025-08-19 18:46:15,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:15,262:INFO:Checking exceptions
2025-08-19 18:46:15,263:INFO:Importing libraries
2025-08-19 18:46:15,263:INFO:Copying training dataset
2025-08-19 18:46:15,263:INFO:Defining folds
2025-08-19 18:46:15,263:INFO:Declaring metric variables
2025-08-19 18:46:15,263:INFO:Importing untrained model
2025-08-19 18:46:15,263:INFO:Declaring custom model
2025-08-19 18:46:15,264:INFO:Logistic Regression Imported successfully
2025-08-19 18:46:15,264:INFO:Cross validation set to False
2025-08-19 18:46:15,264:INFO:Fitting Model
2025-08-19 18:46:15,308:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:46:15,308:INFO:create_model() successfully completed......................................
2025-08-19 18:46:15,376:INFO:_master_model_container: 27
2025-08-19 18:46:15,377:INFO:_display_container: 23
2025-08-19 18:46:15,380:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:46:15,380:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:15,444:INFO:Initializing predict_model()
2025-08-19 18:46:15,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:15,444:INFO:Checking exceptions
2025-08-19 18:46:15,445:INFO:Preloading libraries
2025-08-19 18:46:15,445:INFO:Set up data.
2025-08-19 18:46:15,449:INFO:Set up index.
2025-08-19 18:46:15,548:INFO:Initializing create_model()
2025-08-19 18:46:15,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:15,548:INFO:Checking exceptions
2025-08-19 18:46:15,549:INFO:Importing libraries
2025-08-19 18:46:15,549:INFO:Copying training dataset
2025-08-19 18:46:15,551:INFO:Defining folds
2025-08-19 18:46:15,551:INFO:Declaring metric variables
2025-08-19 18:46:15,551:INFO:Importing untrained model
2025-08-19 18:46:15,551:INFO:Ridge Classifier Imported successfully
2025-08-19 18:46:15,551:INFO:Starting cross validation
2025-08-19 18:46:15,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:15,655:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:15,667:INFO:Calculating mean and std
2025-08-19 18:46:15,667:INFO:Creating metrics dataframe
2025-08-19 18:46:15,668:INFO:Finalizing model
2025-08-19 18:46:15,688:INFO:Uploading results into container
2025-08-19 18:46:15,689:INFO:Uploading model into container now
2025-08-19 18:46:15,689:INFO:_master_model_container: 28
2025-08-19 18:46:15,689:INFO:_display_container: 25
2025-08-19 18:46:15,689:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:46:15,689:INFO:create_model() successfully completed......................................
2025-08-19 18:46:15,788:INFO:Initializing finalize_model()
2025-08-19 18:46:15,788:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:15,788:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:46:15,790:INFO:Initializing create_model()
2025-08-19 18:46:15,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:15,790:INFO:Checking exceptions
2025-08-19 18:46:15,790:INFO:Importing libraries
2025-08-19 18:46:15,790:INFO:Copying training dataset
2025-08-19 18:46:15,791:INFO:Defining folds
2025-08-19 18:46:15,791:INFO:Declaring metric variables
2025-08-19 18:46:15,791:INFO:Importing untrained model
2025-08-19 18:46:15,791:INFO:Declaring custom model
2025-08-19 18:46:15,791:INFO:Ridge Classifier Imported successfully
2025-08-19 18:46:15,793:INFO:Cross validation set to False
2025-08-19 18:46:15,793:INFO:Fitting Model
2025-08-19 18:46:15,840:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:46:15,841:INFO:create_model() successfully completed......................................
2025-08-19 18:46:15,908:INFO:_master_model_container: 28
2025-08-19 18:46:15,909:INFO:_display_container: 25
2025-08-19 18:46:15,912:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:46:15,912:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:15,975:INFO:Initializing predict_model()
2025-08-19 18:46:15,975:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:15,975:INFO:Checking exceptions
2025-08-19 18:46:15,975:INFO:Preloading libraries
2025-08-19 18:46:15,975:INFO:Set up data.
2025-08-19 18:46:15,981:INFO:Set up index.
2025-08-19 18:46:16,073:INFO:Initializing create_model()
2025-08-19 18:46:16,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:16,073:INFO:Checking exceptions
2025-08-19 18:46:16,074:INFO:Importing libraries
2025-08-19 18:46:16,074:INFO:Copying training dataset
2025-08-19 18:46:16,076:INFO:Defining folds
2025-08-19 18:46:16,076:INFO:Declaring metric variables
2025-08-19 18:46:16,076:INFO:Importing untrained model
2025-08-19 18:46:16,076:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:46:16,076:INFO:Starting cross validation
2025-08-19 18:46:16,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:16,178:INFO:Calculating mean and std
2025-08-19 18:46:16,178:INFO:Creating metrics dataframe
2025-08-19 18:46:16,179:INFO:Finalizing model
2025-08-19 18:46:16,200:INFO:Uploading results into container
2025-08-19 18:46:16,201:INFO:Uploading model into container now
2025-08-19 18:46:16,202:INFO:_master_model_container: 29
2025-08-19 18:46:16,202:INFO:_display_container: 27
2025-08-19 18:46:16,202:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:46:16,203:INFO:create_model() successfully completed......................................
2025-08-19 18:46:16,275:INFO:Initializing finalize_model()
2025-08-19 18:46:16,275:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:16,275:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:46:16,276:INFO:Initializing create_model()
2025-08-19 18:46:16,276:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:16,276:INFO:Checking exceptions
2025-08-19 18:46:16,277:INFO:Importing libraries
2025-08-19 18:46:16,277:INFO:Copying training dataset
2025-08-19 18:46:16,277:INFO:Defining folds
2025-08-19 18:46:16,277:INFO:Declaring metric variables
2025-08-19 18:46:16,277:INFO:Importing untrained model
2025-08-19 18:46:16,277:INFO:Declaring custom model
2025-08-19 18:46:16,278:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:46:16,278:INFO:Cross validation set to False
2025-08-19 18:46:16,278:INFO:Fitting Model
2025-08-19 18:46:16,318:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:46:16,318:INFO:create_model() successfully completed......................................
2025-08-19 18:46:16,387:INFO:_master_model_container: 29
2025-08-19 18:46:16,387:INFO:_display_container: 27
2025-08-19 18:46:16,391:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:46:16,391:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:16,475:INFO:Initializing predict_model()
2025-08-19 18:46:16,475:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:16,478:INFO:Checking exceptions
2025-08-19 18:46:16,478:INFO:Preloading libraries
2025-08-19 18:46:16,478:INFO:Set up data.
2025-08-19 18:46:16,490:INFO:Set up index.
2025-08-19 18:46:16,607:INFO:Initializing create_model()
2025-08-19 18:46:16,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:16,607:INFO:Checking exceptions
2025-08-19 18:46:16,608:INFO:Importing libraries
2025-08-19 18:46:16,608:INFO:Copying training dataset
2025-08-19 18:46:16,609:INFO:Defining folds
2025-08-19 18:46:16,609:INFO:Declaring metric variables
2025-08-19 18:46:16,610:INFO:Importing untrained model
2025-08-19 18:46:16,610:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:46:16,610:INFO:Starting cross validation
2025-08-19 18:46:16,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:16,711:INFO:Calculating mean and std
2025-08-19 18:46:16,711:INFO:Creating metrics dataframe
2025-08-19 18:46:16,712:INFO:Finalizing model
2025-08-19 18:46:16,733:INFO:Uploading results into container
2025-08-19 18:46:16,733:INFO:Uploading model into container now
2025-08-19 18:46:16,734:INFO:_master_model_container: 30
2025-08-19 18:46:16,734:INFO:_display_container: 29
2025-08-19 18:46:16,734:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:46:16,734:INFO:create_model() successfully completed......................................
2025-08-19 18:46:16,789:INFO:Initializing finalize_model()
2025-08-19 18:46:16,789:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:16,789:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:46:16,791:INFO:Initializing create_model()
2025-08-19 18:46:16,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:16,791:INFO:Checking exceptions
2025-08-19 18:46:16,791:INFO:Importing libraries
2025-08-19 18:46:16,791:INFO:Copying training dataset
2025-08-19 18:46:16,791:INFO:Defining folds
2025-08-19 18:46:16,791:INFO:Declaring metric variables
2025-08-19 18:46:16,792:INFO:Importing untrained model
2025-08-19 18:46:16,792:INFO:Declaring custom model
2025-08-19 18:46:16,792:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:46:16,793:INFO:Cross validation set to False
2025-08-19 18:46:16,793:INFO:Fitting Model
2025-08-19 18:46:16,818:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:46:16,819:INFO:create_model() successfully completed......................................
2025-08-19 18:46:16,872:INFO:_master_model_container: 30
2025-08-19 18:46:16,872:INFO:_display_container: 29
2025-08-19 18:46:16,876:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:46:16,877:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:16,935:INFO:Initializing predict_model()
2025-08-19 18:46:16,935:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:16,935:INFO:Checking exceptions
2025-08-19 18:46:16,935:INFO:Preloading libraries
2025-08-19 18:46:16,935:INFO:Set up data.
2025-08-19 18:46:16,939:INFO:Set up index.
2025-08-19 18:46:17,012:INFO:Initializing create_model()
2025-08-19 18:46:17,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:17,012:INFO:Checking exceptions
2025-08-19 18:46:17,013:INFO:Importing libraries
2025-08-19 18:46:17,013:INFO:Copying training dataset
2025-08-19 18:46:17,015:INFO:Defining folds
2025-08-19 18:46:17,015:INFO:Declaring metric variables
2025-08-19 18:46:17,015:INFO:Importing untrained model
2025-08-19 18:46:17,015:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:46:17,015:INFO:Starting cross validation
2025-08-19 18:46:17,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:17,083:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,083:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,085:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,088:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,091:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,091:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,098:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,127:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,134:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,134:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,160:INFO:Calculating mean and std
2025-08-19 18:46:17,161:INFO:Creating metrics dataframe
2025-08-19 18:46:17,162:INFO:Finalizing model
2025-08-19 18:46:17,182:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,188:INFO:Uploading results into container
2025-08-19 18:46:17,189:INFO:Uploading model into container now
2025-08-19 18:46:17,189:INFO:_master_model_container: 31
2025-08-19 18:46:17,189:INFO:_display_container: 31
2025-08-19 18:46:17,189:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:46:17,189:INFO:create_model() successfully completed......................................
2025-08-19 18:46:17,285:INFO:Initializing finalize_model()
2025-08-19 18:46:17,285:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:17,285:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:46:17,287:INFO:Initializing create_model()
2025-08-19 18:46:17,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:17,287:INFO:Checking exceptions
2025-08-19 18:46:17,292:INFO:Importing libraries
2025-08-19 18:46:17,293:INFO:Copying training dataset
2025-08-19 18:46:17,293:INFO:Defining folds
2025-08-19 18:46:17,293:INFO:Declaring metric variables
2025-08-19 18:46:17,294:INFO:Importing untrained model
2025-08-19 18:46:17,294:INFO:Declaring custom model
2025-08-19 18:46:17,295:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:46:17,302:INFO:Cross validation set to False
2025-08-19 18:46:17,302:INFO:Fitting Model
2025-08-19 18:46:17,346:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:17,355:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:46:17,355:INFO:create_model() successfully completed......................................
2025-08-19 18:46:17,428:INFO:_master_model_container: 31
2025-08-19 18:46:17,428:INFO:_display_container: 31
2025-08-19 18:46:17,432:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:46:17,432:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:17,508:INFO:Initializing predict_model()
2025-08-19 18:46:17,509:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:17,509:INFO:Checking exceptions
2025-08-19 18:46:17,509:INFO:Preloading libraries
2025-08-19 18:46:17,509:INFO:Set up data.
2025-08-19 18:46:17,512:INFO:Set up index.
2025-08-19 18:46:17,605:INFO:Initializing create_model()
2025-08-19 18:46:17,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:17,605:INFO:Checking exceptions
2025-08-19 18:46:17,606:INFO:Importing libraries
2025-08-19 18:46:17,606:INFO:Copying training dataset
2025-08-19 18:46:17,608:INFO:Defining folds
2025-08-19 18:46:17,608:INFO:Declaring metric variables
2025-08-19 18:46:17,609:INFO:Importing untrained model
2025-08-19 18:46:17,609:INFO:Naive Bayes Imported successfully
2025-08-19 18:46:17,609:INFO:Starting cross validation
2025-08-19 18:46:17,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:17,717:INFO:Calculating mean and std
2025-08-19 18:46:17,717:INFO:Creating metrics dataframe
2025-08-19 18:46:17,718:INFO:Finalizing model
2025-08-19 18:46:17,737:INFO:Uploading results into container
2025-08-19 18:46:17,738:INFO:Uploading model into container now
2025-08-19 18:46:17,738:INFO:_master_model_container: 32
2025-08-19 18:46:17,738:INFO:_display_container: 33
2025-08-19 18:46:17,738:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:46:17,738:INFO:create_model() successfully completed......................................
2025-08-19 18:46:17,793:INFO:Initializing finalize_model()
2025-08-19 18:46:17,793:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:17,793:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:46:17,794:INFO:Initializing create_model()
2025-08-19 18:46:17,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:17,794:INFO:Checking exceptions
2025-08-19 18:46:17,795:INFO:Importing libraries
2025-08-19 18:46:17,795:INFO:Copying training dataset
2025-08-19 18:46:17,795:INFO:Defining folds
2025-08-19 18:46:17,795:INFO:Declaring metric variables
2025-08-19 18:46:17,795:INFO:Importing untrained model
2025-08-19 18:46:17,795:INFO:Declaring custom model
2025-08-19 18:46:17,795:INFO:Naive Bayes Imported successfully
2025-08-19 18:46:17,796:INFO:Cross validation set to False
2025-08-19 18:46:17,796:INFO:Fitting Model
2025-08-19 18:46:17,817:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:46:17,817:INFO:create_model() successfully completed......................................
2025-08-19 18:46:17,871:INFO:_master_model_container: 32
2025-08-19 18:46:17,871:INFO:_display_container: 33
2025-08-19 18:46:17,874:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:46:17,874:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:17,931:INFO:Initializing predict_model()
2025-08-19 18:46:17,932:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307e122f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3074f8ee0>)
2025-08-19 18:46:17,932:INFO:Checking exceptions
2025-08-19 18:46:17,932:INFO:Preloading libraries
2025-08-19 18:46:17,932:INFO:Set up data.
2025-08-19 18:46:17,935:INFO:Set up index.
2025-08-19 18:46:18,016:INFO:PyCaret ClassificationExperiment
2025-08-19 18:46:18,016:INFO:Logging name: clf-default-name
2025-08-19 18:46:18,016:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:46:18,016:INFO:version 3.3.2
2025-08-19 18:46:18,016:INFO:Initializing setup()
2025-08-19 18:46:18,016:INFO:self.USI: 6952
2025-08-19 18:46:18,016:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:46:18,016:INFO:Checking environment
2025-08-19 18:46:18,016:INFO:python_version: 3.10.18
2025-08-19 18:46:18,016:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:46:18,016:INFO:machine: arm64
2025-08-19 18:46:18,016:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:46:18,016:INFO:Memory: svmem(total=17179869184, available=3133505536, percent=81.8, used=5835292672, free=358203392, active=2788671488, inactive=2770780160, wired=3046621184)
2025-08-19 18:46:18,016:INFO:Physical Core: 8
2025-08-19 18:46:18,016:INFO:Logical Core: 8
2025-08-19 18:46:18,016:INFO:Checking libraries
2025-08-19 18:46:18,016:INFO:System:
2025-08-19 18:46:18,016:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:46:18,016:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:46:18,016:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:46:18,016:INFO:PyCaret required dependencies:
2025-08-19 18:46:18,016:INFO:                 pip: 25.2
2025-08-19 18:46:18,016:INFO:          setuptools: 80.9.0
2025-08-19 18:46:18,016:INFO:             pycaret: 3.3.2
2025-08-19 18:46:18,016:INFO:             IPython: 8.37.0
2025-08-19 18:46:18,016:INFO:          ipywidgets: 8.1.7
2025-08-19 18:46:18,016:INFO:                tqdm: 4.67.1
2025-08-19 18:46:18,016:INFO:               numpy: 1.25.2
2025-08-19 18:46:18,016:INFO:              pandas: 2.1.4
2025-08-19 18:46:18,016:INFO:              jinja2: 3.1.6
2025-08-19 18:46:18,016:INFO:               scipy: 1.9.3
2025-08-19 18:46:18,016:INFO:              joblib: 1.3.2
2025-08-19 18:46:18,016:INFO:             sklearn: 1.4.2
2025-08-19 18:46:18,016:INFO:                pyod: 2.0.5
2025-08-19 18:46:18,016:INFO:            imblearn: 0.12.4
2025-08-19 18:46:18,016:INFO:   category_encoders: 2.7.0
2025-08-19 18:46:18,016:INFO:            lightgbm: 4.6.0
2025-08-19 18:46:18,016:INFO:               numba: 0.61.2
2025-08-19 18:46:18,016:INFO:            requests: 2.32.4
2025-08-19 18:46:18,016:INFO:          matplotlib: 3.7.2
2025-08-19 18:46:18,016:INFO:          scikitplot: 0.3.7
2025-08-19 18:46:18,017:INFO:         yellowbrick: 1.5
2025-08-19 18:46:18,017:INFO:              plotly: 5.24.1
2025-08-19 18:46:18,017:INFO:    plotly-resampler: Not installed
2025-08-19 18:46:18,017:INFO:             kaleido: 1.0.0
2025-08-19 18:46:18,017:INFO:           schemdraw: 0.15
2025-08-19 18:46:18,017:INFO:         statsmodels: 0.14.5
2025-08-19 18:46:18,017:INFO:              sktime: 0.26.0
2025-08-19 18:46:18,017:INFO:               tbats: 1.1.3
2025-08-19 18:46:18,017:INFO:            pmdarima: 2.0.4
2025-08-19 18:46:18,017:INFO:              psutil: 7.0.0
2025-08-19 18:46:18,017:INFO:          markupsafe: 3.0.2
2025-08-19 18:46:18,017:INFO:             pickle5: Not installed
2025-08-19 18:46:18,017:INFO:         cloudpickle: 3.1.1
2025-08-19 18:46:18,017:INFO:         deprecation: 2.1.0
2025-08-19 18:46:18,017:INFO:              xxhash: 3.5.0
2025-08-19 18:46:18,017:INFO:           wurlitzer: 3.1.1
2025-08-19 18:46:18,017:INFO:PyCaret optional dependencies:
2025-08-19 18:46:18,017:INFO:                shap: 0.48.0
2025-08-19 18:46:18,017:INFO:           interpret: Not installed
2025-08-19 18:46:18,017:INFO:                umap: Not installed
2025-08-19 18:46:18,017:INFO:     ydata_profiling: Not installed
2025-08-19 18:46:18,017:INFO:  explainerdashboard: Not installed
2025-08-19 18:46:18,017:INFO:             autoviz: Not installed
2025-08-19 18:46:18,017:INFO:           fairlearn: Not installed
2025-08-19 18:46:18,017:INFO:          deepchecks: Not installed
2025-08-19 18:46:18,017:INFO:             xgboost: 3.0.4
2025-08-19 18:46:18,017:INFO:            catboost: 1.2.8
2025-08-19 18:46:18,017:INFO:              kmodes: Not installed
2025-08-19 18:46:18,017:INFO:             mlxtend: 0.23.4
2025-08-19 18:46:18,017:INFO:       statsforecast: Not installed
2025-08-19 18:46:18,017:INFO:        tune_sklearn: Not installed
2025-08-19 18:46:18,017:INFO:                 ray: Not installed
2025-08-19 18:46:18,017:INFO:            hyperopt: Not installed
2025-08-19 18:46:18,017:INFO:              optuna: 4.4.0
2025-08-19 18:46:18,017:INFO:               skopt: Not installed
2025-08-19 18:46:18,017:INFO:              mlflow: Not installed
2025-08-19 18:46:18,017:INFO:              gradio: Not installed
2025-08-19 18:46:18,017:INFO:             fastapi: Not installed
2025-08-19 18:46:18,017:INFO:             uvicorn: Not installed
2025-08-19 18:46:18,017:INFO:              m2cgen: Not installed
2025-08-19 18:46:18,017:INFO:           evidently: Not installed
2025-08-19 18:46:18,017:INFO:               fugue: Not installed
2025-08-19 18:46:18,017:INFO:           streamlit: Not installed
2025-08-19 18:46:18,017:INFO:             prophet: Not installed
2025-08-19 18:46:18,017:INFO:None
2025-08-19 18:46:18,017:INFO:Set up data.
2025-08-19 18:46:18,020:INFO:Set up folding strategy.
2025-08-19 18:46:18,020:INFO:Set up train/test split.
2025-08-19 18:46:18,020:INFO:Set up data.
2025-08-19 18:46:18,024:INFO:Set up index.
2025-08-19 18:46:18,024:INFO:Assigning column types.
2025-08-19 18:46:18,025:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:46:18,046:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:46:18,046:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:46:18,058:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:46:18,059:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:46:18,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:46:18,080:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:46:18,092:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:46:18,093:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:46:18,093:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:46:18,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:46:18,126:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:46:18,127:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:46:18,147:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:46:18,159:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:46:18,161:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:46:18,161:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:46:18,194:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:46:18,195:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:46:18,228:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:46:18,229:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:46:18,229:INFO:Preparing preprocessing pipeline...
2025-08-19 18:46:18,230:INFO:Set up label encoding.
2025-08-19 18:46:18,230:INFO:Set up simple imputation.
2025-08-19 18:46:18,231:INFO:Set up encoding of categorical features.
2025-08-19 18:46:18,274:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:46:18,277:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:46:18,277:INFO:Creating final display dataframe.
2025-08-19 18:46:18,394:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              6952
2025-08-19 18:46:18,440:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:46:18,441:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:46:18,474:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:46:18,476:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:46:18,477:INFO:setup() successfully completed in 0.46s...............
2025-08-19 18:46:18,481:INFO:Initializing compare_models()
2025-08-19 18:46:18,481:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:46:18,481:INFO:Checking exceptions
2025-08-19 18:46:18,482:INFO:Preparing display monitor
2025-08-19 18:46:18,483:INFO:Initializing Logistic Regression
2025-08-19 18:46:18,483:INFO:Total runtime is 7.152557373046875e-07 minutes
2025-08-19 18:46:18,483:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:18,483:INFO:Initializing create_model()
2025-08-19 18:46:18,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:18,483:INFO:Checking exceptions
2025-08-19 18:46:18,483:INFO:Importing libraries
2025-08-19 18:46:18,483:INFO:Copying training dataset
2025-08-19 18:46:18,485:INFO:Defining folds
2025-08-19 18:46:18,485:INFO:Declaring metric variables
2025-08-19 18:46:18,485:INFO:Importing untrained model
2025-08-19 18:46:18,485:INFO:Logistic Regression Imported successfully
2025-08-19 18:46:18,485:INFO:Starting cross validation
2025-08-19 18:46:18,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:18,583:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:18,594:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:18,609:INFO:Calculating mean and std
2025-08-19 18:46:18,609:INFO:Creating metrics dataframe
2025-08-19 18:46:18,610:INFO:Uploading results into container
2025-08-19 18:46:18,611:INFO:Uploading model into container now
2025-08-19 18:46:18,611:INFO:_master_model_container: 1
2025-08-19 18:46:18,611:INFO:_display_container: 2
2025-08-19 18:46:18,611:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:46:18,611:INFO:create_model() successfully completed......................................
2025-08-19 18:46:18,667:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:18,667:INFO:Creating metrics dataframe
2025-08-19 18:46:18,668:INFO:Initializing K Neighbors Classifier
2025-08-19 18:46:18,668:INFO:Total runtime is 0.0030886014302571613 minutes
2025-08-19 18:46:18,669:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:18,669:INFO:Initializing create_model()
2025-08-19 18:46:18,669:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:18,669:INFO:Checking exceptions
2025-08-19 18:46:18,669:INFO:Importing libraries
2025-08-19 18:46:18,669:INFO:Copying training dataset
2025-08-19 18:46:18,671:INFO:Defining folds
2025-08-19 18:46:18,671:INFO:Declaring metric variables
2025-08-19 18:46:18,671:INFO:Importing untrained model
2025-08-19 18:46:18,671:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:46:18,671:INFO:Starting cross validation
2025-08-19 18:46:18,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:18,759:INFO:Calculating mean and std
2025-08-19 18:46:18,759:INFO:Creating metrics dataframe
2025-08-19 18:46:18,760:INFO:Uploading results into container
2025-08-19 18:46:18,760:INFO:Uploading model into container now
2025-08-19 18:46:18,761:INFO:_master_model_container: 2
2025-08-19 18:46:18,761:INFO:_display_container: 2
2025-08-19 18:46:18,761:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:46:18,761:INFO:create_model() successfully completed......................................
2025-08-19 18:46:18,815:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:18,815:INFO:Creating metrics dataframe
2025-08-19 18:46:18,817:INFO:Initializing Naive Bayes
2025-08-19 18:46:18,817:INFO:Total runtime is 0.005557632446289063 minutes
2025-08-19 18:46:18,817:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:18,817:INFO:Initializing create_model()
2025-08-19 18:46:18,817:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:18,817:INFO:Checking exceptions
2025-08-19 18:46:18,817:INFO:Importing libraries
2025-08-19 18:46:18,817:INFO:Copying training dataset
2025-08-19 18:46:18,818:INFO:Defining folds
2025-08-19 18:46:18,818:INFO:Declaring metric variables
2025-08-19 18:46:18,818:INFO:Importing untrained model
2025-08-19 18:46:18,818:INFO:Naive Bayes Imported successfully
2025-08-19 18:46:18,818:INFO:Starting cross validation
2025-08-19 18:46:18,819:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:18,914:INFO:Calculating mean and std
2025-08-19 18:46:18,915:INFO:Creating metrics dataframe
2025-08-19 18:46:18,916:INFO:Uploading results into container
2025-08-19 18:46:18,916:INFO:Uploading model into container now
2025-08-19 18:46:18,916:INFO:_master_model_container: 3
2025-08-19 18:46:18,916:INFO:_display_container: 2
2025-08-19 18:46:18,916:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:46:18,916:INFO:create_model() successfully completed......................................
2025-08-19 18:46:18,971:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:18,972:INFO:Creating metrics dataframe
2025-08-19 18:46:18,973:INFO:Initializing Decision Tree Classifier
2025-08-19 18:46:18,973:INFO:Total runtime is 0.008160734176635744 minutes
2025-08-19 18:46:18,973:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:18,973:INFO:Initializing create_model()
2025-08-19 18:46:18,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:18,973:INFO:Checking exceptions
2025-08-19 18:46:18,973:INFO:Importing libraries
2025-08-19 18:46:18,973:INFO:Copying training dataset
2025-08-19 18:46:18,974:INFO:Defining folds
2025-08-19 18:46:18,974:INFO:Declaring metric variables
2025-08-19 18:46:18,975:INFO:Importing untrained model
2025-08-19 18:46:18,975:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:46:18,975:INFO:Starting cross validation
2025-08-19 18:46:18,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:19,076:INFO:Calculating mean and std
2025-08-19 18:46:19,076:INFO:Creating metrics dataframe
2025-08-19 18:46:19,077:INFO:Uploading results into container
2025-08-19 18:46:19,077:INFO:Uploading model into container now
2025-08-19 18:46:19,077:INFO:_master_model_container: 4
2025-08-19 18:46:19,077:INFO:_display_container: 2
2025-08-19 18:46:19,078:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:46:19,078:INFO:create_model() successfully completed......................................
2025-08-19 18:46:19,132:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:19,132:INFO:Creating metrics dataframe
2025-08-19 18:46:19,133:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:46:19,133:INFO:Total runtime is 0.010833032925923667 minutes
2025-08-19 18:46:19,133:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:19,133:INFO:Initializing create_model()
2025-08-19 18:46:19,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:19,133:INFO:Checking exceptions
2025-08-19 18:46:19,133:INFO:Importing libraries
2025-08-19 18:46:19,133:INFO:Copying training dataset
2025-08-19 18:46:19,135:INFO:Defining folds
2025-08-19 18:46:19,135:INFO:Declaring metric variables
2025-08-19 18:46:19,135:INFO:Importing untrained model
2025-08-19 18:46:19,136:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:46:19,136:INFO:Starting cross validation
2025-08-19 18:46:19,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:19,233:INFO:Calculating mean and std
2025-08-19 18:46:19,234:INFO:Creating metrics dataframe
2025-08-19 18:46:19,235:INFO:Uploading results into container
2025-08-19 18:46:19,235:INFO:Uploading model into container now
2025-08-19 18:46:19,235:INFO:_master_model_container: 5
2025-08-19 18:46:19,235:INFO:_display_container: 2
2025-08-19 18:46:19,235:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:46:19,235:INFO:create_model() successfully completed......................................
2025-08-19 18:46:19,289:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:19,289:INFO:Creating metrics dataframe
2025-08-19 18:46:19,291:INFO:Initializing Ridge Classifier
2025-08-19 18:46:19,291:INFO:Total runtime is 0.013457485040028892 minutes
2025-08-19 18:46:19,291:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:19,291:INFO:Initializing create_model()
2025-08-19 18:46:19,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:19,291:INFO:Checking exceptions
2025-08-19 18:46:19,291:INFO:Importing libraries
2025-08-19 18:46:19,291:INFO:Copying training dataset
2025-08-19 18:46:19,292:INFO:Defining folds
2025-08-19 18:46:19,292:INFO:Declaring metric variables
2025-08-19 18:46:19,292:INFO:Importing untrained model
2025-08-19 18:46:19,292:INFO:Ridge Classifier Imported successfully
2025-08-19 18:46:19,292:INFO:Starting cross validation
2025-08-19 18:46:19,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:19,502:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:19,519:INFO:Calculating mean and std
2025-08-19 18:46:19,519:INFO:Creating metrics dataframe
2025-08-19 18:46:19,520:INFO:Uploading results into container
2025-08-19 18:46:19,521:INFO:Uploading model into container now
2025-08-19 18:46:19,521:INFO:_master_model_container: 6
2025-08-19 18:46:19,521:INFO:_display_container: 2
2025-08-19 18:46:19,521:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:46:19,521:INFO:create_model() successfully completed......................................
2025-08-19 18:46:19,795:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:19,795:INFO:Creating metrics dataframe
2025-08-19 18:46:19,796:INFO:Initializing Random Forest Classifier
2025-08-19 18:46:19,796:INFO:Total runtime is 0.021888498465220133 minutes
2025-08-19 18:46:19,797:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:19,797:INFO:Initializing create_model()
2025-08-19 18:46:19,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:19,797:INFO:Checking exceptions
2025-08-19 18:46:19,797:INFO:Importing libraries
2025-08-19 18:46:19,797:INFO:Copying training dataset
2025-08-19 18:46:19,799:INFO:Defining folds
2025-08-19 18:46:19,799:INFO:Declaring metric variables
2025-08-19 18:46:19,799:INFO:Importing untrained model
2025-08-19 18:46:19,799:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:46:19,799:INFO:Starting cross validation
2025-08-19 18:46:19,800:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:20,660:INFO:Calculating mean and std
2025-08-19 18:46:20,660:INFO:Creating metrics dataframe
2025-08-19 18:46:20,661:INFO:Uploading results into container
2025-08-19 18:46:20,661:INFO:Uploading model into container now
2025-08-19 18:46:20,661:INFO:_master_model_container: 7
2025-08-19 18:46:20,661:INFO:_display_container: 2
2025-08-19 18:46:20,662:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:46:20,662:INFO:create_model() successfully completed......................................
2025-08-19 18:46:20,718:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:20,719:INFO:Creating metrics dataframe
2025-08-19 18:46:20,720:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:46:20,720:INFO:Total runtime is 0.03727880318959554 minutes
2025-08-19 18:46:20,720:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:20,720:INFO:Initializing create_model()
2025-08-19 18:46:20,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:20,720:INFO:Checking exceptions
2025-08-19 18:46:20,720:INFO:Importing libraries
2025-08-19 18:46:20,720:INFO:Copying training dataset
2025-08-19 18:46:20,722:INFO:Defining folds
2025-08-19 18:46:20,722:INFO:Declaring metric variables
2025-08-19 18:46:20,722:INFO:Importing untrained model
2025-08-19 18:46:20,722:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:46:20,722:INFO:Starting cross validation
2025-08-19 18:46:20,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:20,753:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,757:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,759:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,760:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,766:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,768:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,773:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,776:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,792:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,795:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:46:20,817:INFO:Calculating mean and std
2025-08-19 18:46:20,817:INFO:Creating metrics dataframe
2025-08-19 18:46:20,818:INFO:Uploading results into container
2025-08-19 18:46:20,818:INFO:Uploading model into container now
2025-08-19 18:46:20,818:INFO:_master_model_container: 8
2025-08-19 18:46:20,819:INFO:_display_container: 2
2025-08-19 18:46:20,819:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:46:20,819:INFO:create_model() successfully completed......................................
2025-08-19 18:46:20,873:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:20,873:INFO:Creating metrics dataframe
2025-08-19 18:46:20,874:INFO:Initializing Ada Boost Classifier
2025-08-19 18:46:20,874:INFO:Total runtime is 0.03984683354695638 minutes
2025-08-19 18:46:20,874:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:20,874:INFO:Initializing create_model()
2025-08-19 18:46:20,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:20,874:INFO:Checking exceptions
2025-08-19 18:46:20,874:INFO:Importing libraries
2025-08-19 18:46:20,874:INFO:Copying training dataset
2025-08-19 18:46:20,875:INFO:Defining folds
2025-08-19 18:46:20,876:INFO:Declaring metric variables
2025-08-19 18:46:20,876:INFO:Importing untrained model
2025-08-19 18:46:20,876:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:46:20,876:INFO:Starting cross validation
2025-08-19 18:46:20,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:20,902:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:20,910:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:20,910:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:20,914:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:20,916:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:20,922:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:20,935:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:20,938:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:21,076:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:21,080:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:21,204:INFO:Calculating mean and std
2025-08-19 18:46:21,204:INFO:Creating metrics dataframe
2025-08-19 18:46:21,206:INFO:Uploading results into container
2025-08-19 18:46:21,206:INFO:Uploading model into container now
2025-08-19 18:46:21,206:INFO:_master_model_container: 9
2025-08-19 18:46:21,206:INFO:_display_container: 2
2025-08-19 18:46:21,206:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:46:21,206:INFO:create_model() successfully completed......................................
2025-08-19 18:46:21,261:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:21,261:INFO:Creating metrics dataframe
2025-08-19 18:46:21,262:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:46:21,262:INFO:Total runtime is 0.04631024996439616 minutes
2025-08-19 18:46:21,262:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:21,262:INFO:Initializing create_model()
2025-08-19 18:46:21,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:21,262:INFO:Checking exceptions
2025-08-19 18:46:21,262:INFO:Importing libraries
2025-08-19 18:46:21,262:INFO:Copying training dataset
2025-08-19 18:46:21,263:INFO:Defining folds
2025-08-19 18:46:21,263:INFO:Declaring metric variables
2025-08-19 18:46:21,263:INFO:Importing untrained model
2025-08-19 18:46:21,264:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:46:21,264:INFO:Starting cross validation
2025-08-19 18:46:21,264:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:22,411:INFO:Calculating mean and std
2025-08-19 18:46:22,411:INFO:Creating metrics dataframe
2025-08-19 18:46:22,412:INFO:Uploading results into container
2025-08-19 18:46:22,413:INFO:Uploading model into container now
2025-08-19 18:46:22,413:INFO:_master_model_container: 10
2025-08-19 18:46:22,413:INFO:_display_container: 2
2025-08-19 18:46:22,413:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:46:22,413:INFO:create_model() successfully completed......................................
2025-08-19 18:46:22,470:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:22,470:INFO:Creating metrics dataframe
2025-08-19 18:46:22,471:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:46:22,471:INFO:Total runtime is 0.06647034883499145 minutes
2025-08-19 18:46:22,471:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:22,472:INFO:Initializing create_model()
2025-08-19 18:46:22,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:22,472:INFO:Checking exceptions
2025-08-19 18:46:22,472:INFO:Importing libraries
2025-08-19 18:46:22,472:INFO:Copying training dataset
2025-08-19 18:46:22,473:INFO:Defining folds
2025-08-19 18:46:22,473:INFO:Declaring metric variables
2025-08-19 18:46:22,473:INFO:Importing untrained model
2025-08-19 18:46:22,473:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:46:22,473:INFO:Starting cross validation
2025-08-19 18:46:22,474:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:22,581:INFO:Calculating mean and std
2025-08-19 18:46:22,582:INFO:Creating metrics dataframe
2025-08-19 18:46:22,583:INFO:Uploading results into container
2025-08-19 18:46:22,583:INFO:Uploading model into container now
2025-08-19 18:46:22,584:INFO:_master_model_container: 11
2025-08-19 18:46:22,584:INFO:_display_container: 2
2025-08-19 18:46:22,584:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:46:22,584:INFO:create_model() successfully completed......................................
2025-08-19 18:46:22,639:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:22,639:INFO:Creating metrics dataframe
2025-08-19 18:46:22,641:INFO:Initializing Extra Trees Classifier
2025-08-19 18:46:22,641:INFO:Total runtime is 0.0692901333173116 minutes
2025-08-19 18:46:22,641:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:22,641:INFO:Initializing create_model()
2025-08-19 18:46:22,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:22,641:INFO:Checking exceptions
2025-08-19 18:46:22,641:INFO:Importing libraries
2025-08-19 18:46:22,641:INFO:Copying training dataset
2025-08-19 18:46:22,642:INFO:Defining folds
2025-08-19 18:46:22,642:INFO:Declaring metric variables
2025-08-19 18:46:22,642:INFO:Importing untrained model
2025-08-19 18:46:22,643:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:46:22,643:INFO:Starting cross validation
2025-08-19 18:46:22,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:22,978:INFO:Calculating mean and std
2025-08-19 18:46:22,979:INFO:Creating metrics dataframe
2025-08-19 18:46:22,980:INFO:Uploading results into container
2025-08-19 18:46:22,980:INFO:Uploading model into container now
2025-08-19 18:46:22,980:INFO:_master_model_container: 12
2025-08-19 18:46:22,980:INFO:_display_container: 2
2025-08-19 18:46:22,980:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:46:22,980:INFO:create_model() successfully completed......................................
2025-08-19 18:46:23,048:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:23,048:INFO:Creating metrics dataframe
2025-08-19 18:46:23,049:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:46:23,050:INFO:Total runtime is 0.0761054515838623 minutes
2025-08-19 18:46:23,050:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:23,050:INFO:Initializing create_model()
2025-08-19 18:46:23,050:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:23,050:INFO:Checking exceptions
2025-08-19 18:46:23,050:INFO:Importing libraries
2025-08-19 18:46:23,050:INFO:Copying training dataset
2025-08-19 18:46:23,053:INFO:Defining folds
2025-08-19 18:46:23,053:INFO:Declaring metric variables
2025-08-19 18:46:23,053:INFO:Importing untrained model
2025-08-19 18:46:23,053:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:46:23,054:INFO:Starting cross validation
2025-08-19 18:46:23,054:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:23,233:INFO:Calculating mean and std
2025-08-19 18:46:23,233:INFO:Creating metrics dataframe
2025-08-19 18:46:23,234:INFO:Uploading results into container
2025-08-19 18:46:23,234:INFO:Uploading model into container now
2025-08-19 18:46:23,234:INFO:_master_model_container: 13
2025-08-19 18:46:23,234:INFO:_display_container: 2
2025-08-19 18:46:23,235:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:46:23,235:INFO:create_model() successfully completed......................................
2025-08-19 18:46:23,293:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:23,293:INFO:Creating metrics dataframe
2025-08-19 18:46:23,295:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:46:23,295:INFO:Total runtime is 0.08018948237101237 minutes
2025-08-19 18:46:23,295:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:23,295:INFO:Initializing create_model()
2025-08-19 18:46:23,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:23,295:INFO:Checking exceptions
2025-08-19 18:46:23,295:INFO:Importing libraries
2025-08-19 18:46:23,295:INFO:Copying training dataset
2025-08-19 18:46:23,296:INFO:Defining folds
2025-08-19 18:46:23,296:INFO:Declaring metric variables
2025-08-19 18:46:23,296:INFO:Importing untrained model
2025-08-19 18:46:23,296:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:46:23,297:INFO:Starting cross validation
2025-08-19 18:46:23,297:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:27,103:INFO:Calculating mean and std
2025-08-19 18:46:27,103:INFO:Creating metrics dataframe
2025-08-19 18:46:27,104:INFO:Uploading results into container
2025-08-19 18:46:27,105:INFO:Uploading model into container now
2025-08-19 18:46:27,105:INFO:_master_model_container: 14
2025-08-19 18:46:27,105:INFO:_display_container: 2
2025-08-19 18:46:27,105:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:46:27,105:INFO:create_model() successfully completed......................................
2025-08-19 18:46:27,160:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:27,160:INFO:Creating metrics dataframe
2025-08-19 18:46:27,161:INFO:Initializing CatBoost Classifier
2025-08-19 18:46:27,161:INFO:Total runtime is 0.14463804960250853 minutes
2025-08-19 18:46:27,162:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:27,162:INFO:Initializing create_model()
2025-08-19 18:46:27,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:27,162:INFO:Checking exceptions
2025-08-19 18:46:27,162:INFO:Importing libraries
2025-08-19 18:46:27,162:INFO:Copying training dataset
2025-08-19 18:46:27,163:INFO:Defining folds
2025-08-19 18:46:27,163:INFO:Declaring metric variables
2025-08-19 18:46:27,163:INFO:Importing untrained model
2025-08-19 18:46:27,164:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:46:27,164:INFO:Starting cross validation
2025-08-19 18:46:27,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:36,365:INFO:Calculating mean and std
2025-08-19 18:46:36,369:INFO:Creating metrics dataframe
2025-08-19 18:46:36,373:INFO:Uploading results into container
2025-08-19 18:46:36,373:INFO:Uploading model into container now
2025-08-19 18:46:36,373:INFO:_master_model_container: 15
2025-08-19 18:46:36,373:INFO:_display_container: 2
2025-08-19 18:46:36,373:INFO:<catboost.core.CatBoostClassifier object at 0x308f3e2f0>
2025-08-19 18:46:36,374:INFO:create_model() successfully completed......................................
2025-08-19 18:46:36,461:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:36,461:INFO:Creating metrics dataframe
2025-08-19 18:46:36,462:INFO:Initializing Dummy Classifier
2025-08-19 18:46:36,462:INFO:Total runtime is 0.299651034673055 minutes
2025-08-19 18:46:36,462:INFO:SubProcess create_model() called ==================================
2025-08-19 18:46:36,463:INFO:Initializing create_model()
2025-08-19 18:46:36,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x308f3e830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:36,463:INFO:Checking exceptions
2025-08-19 18:46:36,463:INFO:Importing libraries
2025-08-19 18:46:36,463:INFO:Copying training dataset
2025-08-19 18:46:36,464:INFO:Defining folds
2025-08-19 18:46:36,464:INFO:Declaring metric variables
2025-08-19 18:46:36,464:INFO:Importing untrained model
2025-08-19 18:46:36,464:INFO:Dummy Classifier Imported successfully
2025-08-19 18:46:36,464:INFO:Starting cross validation
2025-08-19 18:46:36,465:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:36,509:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,509:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,516:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,524:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,539:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,541:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,542:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,559:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,563:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,565:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:36,574:INFO:Calculating mean and std
2025-08-19 18:46:36,575:INFO:Creating metrics dataframe
2025-08-19 18:46:36,575:INFO:Uploading results into container
2025-08-19 18:46:36,576:INFO:Uploading model into container now
2025-08-19 18:46:36,576:INFO:_master_model_container: 16
2025-08-19 18:46:36,576:INFO:_display_container: 2
2025-08-19 18:46:36,576:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:46:36,576:INFO:create_model() successfully completed......................................
2025-08-19 18:46:36,633:INFO:SubProcess create_model() end ==================================
2025-08-19 18:46:36,633:INFO:Creating metrics dataframe
2025-08-19 18:46:36,635:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:46:36,636:INFO:Initializing create_model()
2025-08-19 18:46:36,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:36,636:INFO:Checking exceptions
2025-08-19 18:46:36,637:INFO:Importing libraries
2025-08-19 18:46:36,637:INFO:Copying training dataset
2025-08-19 18:46:36,638:INFO:Defining folds
2025-08-19 18:46:36,638:INFO:Declaring metric variables
2025-08-19 18:46:36,638:INFO:Importing untrained model
2025-08-19 18:46:36,638:INFO:Declaring custom model
2025-08-19 18:46:36,639:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:46:36,639:INFO:Cross validation set to False
2025-08-19 18:46:36,639:INFO:Fitting Model
2025-08-19 18:46:36,665:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:46:36,665:INFO:create_model() successfully completed......................................
2025-08-19 18:46:36,723:INFO:_master_model_container: 16
2025-08-19 18:46:36,723:INFO:_display_container: 2
2025-08-19 18:46:36,723:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:46:36,723:INFO:compare_models() successfully completed......................................
2025-08-19 18:46:36,723:INFO:Initializing create_model()
2025-08-19 18:46:36,724:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:36,724:INFO:Checking exceptions
2025-08-19 18:46:36,725:INFO:Importing libraries
2025-08-19 18:46:36,725:INFO:Copying training dataset
2025-08-19 18:46:36,726:INFO:Defining folds
2025-08-19 18:46:36,726:INFO:Declaring metric variables
2025-08-19 18:46:36,726:INFO:Importing untrained model
2025-08-19 18:46:36,726:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:46:36,726:INFO:Starting cross validation
2025-08-19 18:46:36,727:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:36,865:INFO:Calculating mean and std
2025-08-19 18:46:36,867:INFO:Creating metrics dataframe
2025-08-19 18:46:36,868:INFO:Finalizing model
2025-08-19 18:46:36,898:INFO:Uploading results into container
2025-08-19 18:46:36,898:INFO:Uploading model into container now
2025-08-19 18:46:36,898:INFO:_master_model_container: 17
2025-08-19 18:46:36,898:INFO:_display_container: 3
2025-08-19 18:46:36,899:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:46:36,899:INFO:create_model() successfully completed......................................
2025-08-19 18:46:36,961:INFO:Initializing finalize_model()
2025-08-19 18:46:36,962:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:36,962:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:46:36,964:INFO:Initializing create_model()
2025-08-19 18:46:36,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:36,964:INFO:Checking exceptions
2025-08-19 18:46:36,964:INFO:Importing libraries
2025-08-19 18:46:36,965:INFO:Copying training dataset
2025-08-19 18:46:36,965:INFO:Defining folds
2025-08-19 18:46:36,965:INFO:Declaring metric variables
2025-08-19 18:46:36,965:INFO:Importing untrained model
2025-08-19 18:46:36,965:INFO:Declaring custom model
2025-08-19 18:46:36,965:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:46:36,966:INFO:Cross validation set to False
2025-08-19 18:46:36,966:INFO:Fitting Model
2025-08-19 18:46:37,008:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:46:37,008:INFO:create_model() successfully completed......................................
2025-08-19 18:46:37,069:INFO:_master_model_container: 17
2025-08-19 18:46:37,070:INFO:_display_container: 3
2025-08-19 18:46:37,074:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:46:37,074:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:37,136:INFO:Initializing predict_model()
2025-08-19 18:46:37,136:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:46:37,136:INFO:Checking exceptions
2025-08-19 18:46:37,136:INFO:Preloading libraries
2025-08-19 18:46:37,136:INFO:Set up data.
2025-08-19 18:46:37,139:INFO:Set up index.
2025-08-19 18:46:37,210:INFO:Initializing create_model()
2025-08-19 18:46:37,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:37,210:INFO:Checking exceptions
2025-08-19 18:46:37,211:INFO:Importing libraries
2025-08-19 18:46:37,211:INFO:Copying training dataset
2025-08-19 18:46:37,212:INFO:Defining folds
2025-08-19 18:46:37,212:INFO:Declaring metric variables
2025-08-19 18:46:37,212:INFO:Importing untrained model
2025-08-19 18:46:37,212:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:46:37,212:INFO:Starting cross validation
2025-08-19 18:46:37,213:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:45,290:INFO:Calculating mean and std
2025-08-19 18:46:45,290:INFO:Creating metrics dataframe
2025-08-19 18:46:45,292:INFO:Finalizing model
2025-08-19 18:46:46,585:INFO:Uploading results into container
2025-08-19 18:46:46,585:INFO:Uploading model into container now
2025-08-19 18:46:46,585:INFO:_master_model_container: 18
2025-08-19 18:46:46,586:INFO:_display_container: 5
2025-08-19 18:46:46,586:INFO:<catboost.core.CatBoostClassifier object at 0x3075b3cd0>
2025-08-19 18:46:46,586:INFO:create_model() successfully completed......................................
2025-08-19 18:46:46,650:INFO:Initializing finalize_model()
2025-08-19 18:46:46,650:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=<catboost.core.CatBoostClassifier object at 0x3075b3cd0>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:46,650:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x3075b3cd0>
2025-08-19 18:46:46,652:INFO:Initializing create_model()
2025-08-19 18:46:46,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=<catboost.core.CatBoostClassifier object at 0x3075b3cd0>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:46,652:INFO:Checking exceptions
2025-08-19 18:46:46,653:INFO:Importing libraries
2025-08-19 18:46:46,653:INFO:Copying training dataset
2025-08-19 18:46:46,653:INFO:Defining folds
2025-08-19 18:46:46,653:INFO:Declaring metric variables
2025-08-19 18:46:46,653:INFO:Importing untrained model
2025-08-19 18:46:46,653:INFO:Declaring custom model
2025-08-19 18:46:46,653:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:46:46,654:INFO:Cross validation set to False
2025-08-19 18:46:46,654:INFO:Fitting Model
2025-08-19 18:46:47,867:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x309ab1840>)],
         verbose=False)
2025-08-19 18:46:47,867:INFO:create_model() successfully completed......................................
2025-08-19 18:46:47,921:INFO:_master_model_container: 18
2025-08-19 18:46:47,921:INFO:_display_container: 5
2025-08-19 18:46:47,924:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x309ab1840>)],
         verbose=False)
2025-08-19 18:46:47,924:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:47,981:INFO:Initializing predict_model()
2025-08-19 18:46:47,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x309ab1840>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933d00>)
2025-08-19 18:46:47,981:INFO:Checking exceptions
2025-08-19 18:46:47,981:INFO:Preloading libraries
2025-08-19 18:46:47,981:INFO:Set up data.
2025-08-19 18:46:47,985:INFO:Set up index.
2025-08-19 18:46:48,056:INFO:Initializing create_model()
2025-08-19 18:46:48,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:48,056:INFO:Checking exceptions
2025-08-19 18:46:48,057:INFO:Importing libraries
2025-08-19 18:46:48,057:INFO:Copying training dataset
2025-08-19 18:46:48,058:INFO:Defining folds
2025-08-19 18:46:48,058:INFO:Declaring metric variables
2025-08-19 18:46:48,058:INFO:Importing untrained model
2025-08-19 18:46:48,059:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:46:48,059:INFO:Starting cross validation
2025-08-19 18:46:48,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:48,505:INFO:Calculating mean and std
2025-08-19 18:46:48,506:INFO:Creating metrics dataframe
2025-08-19 18:46:48,507:INFO:Finalizing model
2025-08-19 18:46:48,614:INFO:Uploading results into container
2025-08-19 18:46:48,615:INFO:Uploading model into container now
2025-08-19 18:46:48,615:INFO:_master_model_container: 19
2025-08-19 18:46:48,615:INFO:_display_container: 7
2025-08-19 18:46:48,615:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:46:48,615:INFO:create_model() successfully completed......................................
2025-08-19 18:46:48,670:INFO:Initializing finalize_model()
2025-08-19 18:46:48,670:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:48,670:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:46:48,671:INFO:Initializing create_model()
2025-08-19 18:46:48,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:48,671:INFO:Checking exceptions
2025-08-19 18:46:48,672:INFO:Importing libraries
2025-08-19 18:46:48,672:INFO:Copying training dataset
2025-08-19 18:46:48,672:INFO:Defining folds
2025-08-19 18:46:48,672:INFO:Declaring metric variables
2025-08-19 18:46:48,672:INFO:Importing untrained model
2025-08-19 18:46:48,672:INFO:Declaring custom model
2025-08-19 18:46:48,672:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:46:48,673:INFO:Cross validation set to False
2025-08-19 18:46:48,673:INFO:Fitting Model
2025-08-19 18:46:48,783:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:46:48,783:INFO:create_model() successfully completed......................................
2025-08-19 18:46:48,836:INFO:_master_model_container: 19
2025-08-19 18:46:48,836:INFO:_display_container: 7
2025-08-19 18:46:48,840:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:46:48,840:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:48,898:INFO:Initializing predict_model()
2025-08-19 18:46:48,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933d00>)
2025-08-19 18:46:48,898:INFO:Checking exceptions
2025-08-19 18:46:48,898:INFO:Preloading libraries
2025-08-19 18:46:48,898:INFO:Set up data.
2025-08-19 18:46:48,902:INFO:Set up index.
2025-08-19 18:46:48,994:INFO:Initializing create_model()
2025-08-19 18:46:48,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:48,995:INFO:Checking exceptions
2025-08-19 18:46:48,995:INFO:Importing libraries
2025-08-19 18:46:48,995:INFO:Copying training dataset
2025-08-19 18:46:48,997:INFO:Defining folds
2025-08-19 18:46:48,997:INFO:Declaring metric variables
2025-08-19 18:46:48,997:INFO:Importing untrained model
2025-08-19 18:46:48,997:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:46:48,997:INFO:Starting cross validation
2025-08-19 18:46:48,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:49,023:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,029:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,030:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,031:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,040:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,050:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,051:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,067:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,208:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,230:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,354:INFO:Calculating mean and std
2025-08-19 18:46:49,355:INFO:Creating metrics dataframe
2025-08-19 18:46:49,355:INFO:Finalizing model
2025-08-19 18:46:49,376:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,484:INFO:Uploading results into container
2025-08-19 18:46:49,484:INFO:Uploading model into container now
2025-08-19 18:46:49,484:INFO:_master_model_container: 20
2025-08-19 18:46:49,484:INFO:_display_container: 9
2025-08-19 18:46:49,484:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:46:49,484:INFO:create_model() successfully completed......................................
2025-08-19 18:46:49,546:INFO:Initializing finalize_model()
2025-08-19 18:46:49,546:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:49,546:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:46:49,548:INFO:Initializing create_model()
2025-08-19 18:46:49,548:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:49,548:INFO:Checking exceptions
2025-08-19 18:46:49,548:INFO:Importing libraries
2025-08-19 18:46:49,548:INFO:Copying training dataset
2025-08-19 18:46:49,549:INFO:Defining folds
2025-08-19 18:46:49,549:INFO:Declaring metric variables
2025-08-19 18:46:49,549:INFO:Importing untrained model
2025-08-19 18:46:49,549:INFO:Declaring custom model
2025-08-19 18:46:49,549:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:46:49,550:INFO:Cross validation set to False
2025-08-19 18:46:49,550:INFO:Fitting Model
2025-08-19 18:46:49,570:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:46:49,707:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:46:49,707:INFO:create_model() successfully completed......................................
2025-08-19 18:46:49,761:INFO:_master_model_container: 20
2025-08-19 18:46:49,761:INFO:_display_container: 9
2025-08-19 18:46:49,765:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:46:49,765:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:49,822:INFO:Initializing predict_model()
2025-08-19 18:46:49,822:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933d00>)
2025-08-19 18:46:49,822:INFO:Checking exceptions
2025-08-19 18:46:49,822:INFO:Preloading libraries
2025-08-19 18:46:49,822:INFO:Set up data.
2025-08-19 18:46:49,826:INFO:Set up index.
2025-08-19 18:46:49,901:INFO:Initializing create_model()
2025-08-19 18:46:49,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:49,901:INFO:Checking exceptions
2025-08-19 18:46:49,902:INFO:Importing libraries
2025-08-19 18:46:49,902:INFO:Copying training dataset
2025-08-19 18:46:49,904:INFO:Defining folds
2025-08-19 18:46:49,904:INFO:Declaring metric variables
2025-08-19 18:46:49,904:INFO:Importing untrained model
2025-08-19 18:46:49,904:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:46:49,904:INFO:Starting cross validation
2025-08-19 18:46:49,905:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:53,172:INFO:Calculating mean and std
2025-08-19 18:46:53,172:INFO:Creating metrics dataframe
2025-08-19 18:46:53,173:INFO:Finalizing model
2025-08-19 18:46:53,194:INFO:[LightGBM] [Info] Number of positive: 480, number of negative: 288
2025-08-19 18:46:53,194:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000370 seconds.
2025-08-19 18:46:53,195:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:46:53,195:INFO:[LightGBM] [Info] Total Bins 6375
2025-08-19 18:46:53,195:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:46:53,195:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.625000 -> initscore=0.510826
2025-08-19 18:46:53,195:INFO:[LightGBM] [Info] Start training from score 0.510826
2025-08-19 18:46:53,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,590:INFO:Uploading results into container
2025-08-19 18:46:53,591:INFO:Uploading model into container now
2025-08-19 18:46:53,591:INFO:_master_model_container: 21
2025-08-19 18:46:53,591:INFO:_display_container: 11
2025-08-19 18:46:53,591:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:46:53,591:INFO:create_model() successfully completed......................................
2025-08-19 18:46:53,654:INFO:Initializing finalize_model()
2025-08-19 18:46:53,654:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:53,654:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:46:53,656:INFO:Initializing create_model()
2025-08-19 18:46:53,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:53,656:INFO:Checking exceptions
2025-08-19 18:46:53,657:INFO:Importing libraries
2025-08-19 18:46:53,657:INFO:Copying training dataset
2025-08-19 18:46:53,657:INFO:Defining folds
2025-08-19 18:46:53,657:INFO:Declaring metric variables
2025-08-19 18:46:53,657:INFO:Importing untrained model
2025-08-19 18:46:53,657:INFO:Declaring custom model
2025-08-19 18:46:53,657:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:46:53,658:INFO:Cross validation set to False
2025-08-19 18:46:53,658:INFO:Fitting Model
2025-08-19 18:46:53,680:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:46:53,680:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000376 seconds.
2025-08-19 18:46:53,680:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:46:53,680:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:46:53,680:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:46:53,681:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:46:53,681:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:46:53,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:53,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:46:54,141:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:46:54,141:INFO:create_model() successfully completed......................................
2025-08-19 18:46:54,195:INFO:_master_model_container: 21
2025-08-19 18:46:54,195:INFO:_display_container: 11
2025-08-19 18:46:54,200:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:46:54,200:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:54,258:INFO:Initializing predict_model()
2025-08-19 18:46:54,258:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933d00>)
2025-08-19 18:46:54,258:INFO:Checking exceptions
2025-08-19 18:46:54,258:INFO:Preloading libraries
2025-08-19 18:46:54,258:INFO:Set up data.
2025-08-19 18:46:54,262:INFO:Set up index.
2025-08-19 18:46:54,334:INFO:Initializing create_model()
2025-08-19 18:46:54,334:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:54,334:INFO:Checking exceptions
2025-08-19 18:46:54,335:INFO:Importing libraries
2025-08-19 18:46:54,335:INFO:Copying training dataset
2025-08-19 18:46:54,337:INFO:Defining folds
2025-08-19 18:46:54,337:INFO:Declaring metric variables
2025-08-19 18:46:54,337:INFO:Importing untrained model
2025-08-19 18:46:54,337:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:46:54,337:INFO:Starting cross validation
2025-08-19 18:46:54,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:55,343:INFO:Calculating mean and std
2025-08-19 18:46:55,344:INFO:Creating metrics dataframe
2025-08-19 18:46:55,345:INFO:Finalizing model
2025-08-19 18:46:55,809:INFO:Uploading results into container
2025-08-19 18:46:55,810:INFO:Uploading model into container now
2025-08-19 18:46:55,810:INFO:_master_model_container: 22
2025-08-19 18:46:55,810:INFO:_display_container: 13
2025-08-19 18:46:55,810:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:46:55,810:INFO:create_model() successfully completed......................................
2025-08-19 18:46:55,864:INFO:Initializing finalize_model()
2025-08-19 18:46:55,864:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:55,865:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:46:55,866:INFO:Initializing create_model()
2025-08-19 18:46:55,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:55,866:INFO:Checking exceptions
2025-08-19 18:46:55,867:INFO:Importing libraries
2025-08-19 18:46:55,867:INFO:Copying training dataset
2025-08-19 18:46:55,867:INFO:Defining folds
2025-08-19 18:46:55,867:INFO:Declaring metric variables
2025-08-19 18:46:55,867:INFO:Importing untrained model
2025-08-19 18:46:55,867:INFO:Declaring custom model
2025-08-19 18:46:55,867:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:46:55,868:INFO:Cross validation set to False
2025-08-19 18:46:55,868:INFO:Fitting Model
2025-08-19 18:46:56,439:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:46:56,439:INFO:create_model() successfully completed......................................
2025-08-19 18:46:56,494:INFO:_master_model_container: 22
2025-08-19 18:46:56,494:INFO:_display_container: 13
2025-08-19 18:46:56,498:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:46:56,498:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:56,557:INFO:Initializing predict_model()
2025-08-19 18:46:56,557:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933d00>)
2025-08-19 18:46:56,557:INFO:Checking exceptions
2025-08-19 18:46:56,557:INFO:Preloading libraries
2025-08-19 18:46:56,557:INFO:Set up data.
2025-08-19 18:46:56,561:INFO:Set up index.
2025-08-19 18:46:56,632:INFO:Initializing create_model()
2025-08-19 18:46:56,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:56,632:INFO:Checking exceptions
2025-08-19 18:46:56,632:INFO:Importing libraries
2025-08-19 18:46:56,633:INFO:Copying training dataset
2025-08-19 18:46:56,634:INFO:Defining folds
2025-08-19 18:46:56,634:INFO:Declaring metric variables
2025-08-19 18:46:56,634:INFO:Importing untrained model
2025-08-19 18:46:56,634:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:46:56,634:INFO:Starting cross validation
2025-08-19 18:46:56,635:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:56,798:INFO:Calculating mean and std
2025-08-19 18:46:56,799:INFO:Creating metrics dataframe
2025-08-19 18:46:56,800:INFO:Finalizing model
2025-08-19 18:46:56,927:INFO:Uploading results into container
2025-08-19 18:46:56,928:INFO:Uploading model into container now
2025-08-19 18:46:56,928:INFO:_master_model_container: 23
2025-08-19 18:46:56,928:INFO:_display_container: 15
2025-08-19 18:46:56,928:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:46:56,929:INFO:create_model() successfully completed......................................
2025-08-19 18:46:56,983:INFO:Initializing finalize_model()
2025-08-19 18:46:56,983:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:56,984:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:46:56,985:INFO:Initializing create_model()
2025-08-19 18:46:56,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:56,985:INFO:Checking exceptions
2025-08-19 18:46:56,986:INFO:Importing libraries
2025-08-19 18:46:56,986:INFO:Copying training dataset
2025-08-19 18:46:56,986:INFO:Defining folds
2025-08-19 18:46:56,986:INFO:Declaring metric variables
2025-08-19 18:46:56,986:INFO:Importing untrained model
2025-08-19 18:46:56,986:INFO:Declaring custom model
2025-08-19 18:46:56,987:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:46:56,988:INFO:Cross validation set to False
2025-08-19 18:46:56,988:INFO:Fitting Model
2025-08-19 18:46:57,133:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:46:57,133:INFO:create_model() successfully completed......................................
2025-08-19 18:46:57,187:INFO:_master_model_container: 23
2025-08-19 18:46:57,187:INFO:_display_container: 15
2025-08-19 18:46:57,192:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:46:57,192:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:57,250:INFO:Initializing predict_model()
2025-08-19 18:46:57,250:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933d00>)
2025-08-19 18:46:57,250:INFO:Checking exceptions
2025-08-19 18:46:57,250:INFO:Preloading libraries
2025-08-19 18:46:57,250:INFO:Set up data.
2025-08-19 18:46:57,254:INFO:Set up index.
2025-08-19 18:46:57,332:INFO:Initializing create_model()
2025-08-19 18:46:57,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:57,332:INFO:Checking exceptions
2025-08-19 18:46:57,333:INFO:Importing libraries
2025-08-19 18:46:57,333:INFO:Copying training dataset
2025-08-19 18:46:57,336:INFO:Defining folds
2025-08-19 18:46:57,336:INFO:Declaring metric variables
2025-08-19 18:46:57,336:INFO:Importing untrained model
2025-08-19 18:46:57,336:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:46:57,336:INFO:Starting cross validation
2025-08-19 18:46:57,337:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:57,695:INFO:Calculating mean and std
2025-08-19 18:46:57,695:INFO:Creating metrics dataframe
2025-08-19 18:46:57,696:INFO:Finalizing model
2025-08-19 18:46:57,781:INFO:Uploading results into container
2025-08-19 18:46:57,782:INFO:Uploading model into container now
2025-08-19 18:46:57,782:INFO:_master_model_container: 24
2025-08-19 18:46:57,782:INFO:_display_container: 17
2025-08-19 18:46:57,782:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:46:57,782:INFO:create_model() successfully completed......................................
2025-08-19 18:46:57,836:INFO:Initializing finalize_model()
2025-08-19 18:46:57,836:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:57,837:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:46:57,838:INFO:Initializing create_model()
2025-08-19 18:46:57,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:57,838:INFO:Checking exceptions
2025-08-19 18:46:57,839:INFO:Importing libraries
2025-08-19 18:46:57,839:INFO:Copying training dataset
2025-08-19 18:46:57,839:INFO:Defining folds
2025-08-19 18:46:57,839:INFO:Declaring metric variables
2025-08-19 18:46:57,839:INFO:Importing untrained model
2025-08-19 18:46:57,839:INFO:Declaring custom model
2025-08-19 18:46:57,839:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:46:57,840:INFO:Cross validation set to False
2025-08-19 18:46:57,840:INFO:Fitting Model
2025-08-19 18:46:57,928:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:46:57,928:INFO:create_model() successfully completed......................................
2025-08-19 18:46:57,983:INFO:_master_model_container: 24
2025-08-19 18:46:57,983:INFO:_display_container: 17
2025-08-19 18:46:57,987:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:46:57,987:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:58,046:INFO:Initializing predict_model()
2025-08-19 18:46:58,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307933d00>)
2025-08-19 18:46:58,046:INFO:Checking exceptions
2025-08-19 18:46:58,046:INFO:Preloading libraries
2025-08-19 18:46:58,046:INFO:Set up data.
2025-08-19 18:46:58,049:INFO:Set up index.
2025-08-19 18:46:58,147:INFO:Initializing create_model()
2025-08-19 18:46:58,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:58,147:INFO:Checking exceptions
2025-08-19 18:46:58,148:INFO:Importing libraries
2025-08-19 18:46:58,148:INFO:Copying training dataset
2025-08-19 18:46:58,150:INFO:Defining folds
2025-08-19 18:46:58,150:INFO:Declaring metric variables
2025-08-19 18:46:58,150:INFO:Importing untrained model
2025-08-19 18:46:58,150:INFO:Dummy Classifier Imported successfully
2025-08-19 18:46:58,150:INFO:Starting cross validation
2025-08-19 18:46:58,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:58,186:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,192:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,196:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,202:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,208:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,213:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,222:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,223:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,231:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,233:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,245:INFO:Calculating mean and std
2025-08-19 18:46:58,245:INFO:Creating metrics dataframe
2025-08-19 18:46:58,246:INFO:Finalizing model
2025-08-19 18:46:58,265:INFO:Uploading results into container
2025-08-19 18:46:58,265:INFO:Uploading model into container now
2025-08-19 18:46:58,265:INFO:_master_model_container: 25
2025-08-19 18:46:58,265:INFO:_display_container: 19
2025-08-19 18:46:58,265:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:46:58,265:INFO:create_model() successfully completed......................................
2025-08-19 18:46:58,319:INFO:Initializing finalize_model()
2025-08-19 18:46:58,319:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:58,319:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:46:58,320:INFO:Initializing create_model()
2025-08-19 18:46:58,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:58,320:INFO:Checking exceptions
2025-08-19 18:46:58,321:INFO:Importing libraries
2025-08-19 18:46:58,321:INFO:Copying training dataset
2025-08-19 18:46:58,321:INFO:Defining folds
2025-08-19 18:46:58,321:INFO:Declaring metric variables
2025-08-19 18:46:58,321:INFO:Importing untrained model
2025-08-19 18:46:58,321:INFO:Declaring custom model
2025-08-19 18:46:58,322:INFO:Dummy Classifier Imported successfully
2025-08-19 18:46:58,322:INFO:Cross validation set to False
2025-08-19 18:46:58,322:INFO:Fitting Model
2025-08-19 18:46:58,344:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:46:58,344:INFO:create_model() successfully completed......................................
2025-08-19 18:46:58,398:INFO:_master_model_container: 25
2025-08-19 18:46:58,398:INFO:_display_container: 19
2025-08-19 18:46:58,402:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:46:58,402:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:58,460:INFO:Initializing predict_model()
2025-08-19 18:46:58,460:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307957e20>)
2025-08-19 18:46:58,460:INFO:Checking exceptions
2025-08-19 18:46:58,460:INFO:Preloading libraries
2025-08-19 18:46:58,460:INFO:Set up data.
2025-08-19 18:46:58,463:INFO:Set up index.
2025-08-19 18:46:58,476:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:58,536:INFO:Initializing create_model()
2025-08-19 18:46:58,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:58,537:INFO:Checking exceptions
2025-08-19 18:46:58,537:INFO:Importing libraries
2025-08-19 18:46:58,537:INFO:Copying training dataset
2025-08-19 18:46:58,539:INFO:Defining folds
2025-08-19 18:46:58,539:INFO:Declaring metric variables
2025-08-19 18:46:58,539:INFO:Importing untrained model
2025-08-19 18:46:58,540:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:46:58,540:INFO:Starting cross validation
2025-08-19 18:46:58,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:58,653:INFO:Calculating mean and std
2025-08-19 18:46:58,653:INFO:Creating metrics dataframe
2025-08-19 18:46:58,654:INFO:Finalizing model
2025-08-19 18:46:58,673:INFO:Uploading results into container
2025-08-19 18:46:58,673:INFO:Uploading model into container now
2025-08-19 18:46:58,674:INFO:_master_model_container: 26
2025-08-19 18:46:58,674:INFO:_display_container: 21
2025-08-19 18:46:58,674:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:46:58,674:INFO:create_model() successfully completed......................................
2025-08-19 18:46:58,731:INFO:Initializing finalize_model()
2025-08-19 18:46:58,731:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:58,731:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:46:58,732:INFO:Initializing create_model()
2025-08-19 18:46:58,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:58,732:INFO:Checking exceptions
2025-08-19 18:46:58,733:INFO:Importing libraries
2025-08-19 18:46:58,733:INFO:Copying training dataset
2025-08-19 18:46:58,733:INFO:Defining folds
2025-08-19 18:46:58,733:INFO:Declaring metric variables
2025-08-19 18:46:58,733:INFO:Importing untrained model
2025-08-19 18:46:58,733:INFO:Declaring custom model
2025-08-19 18:46:58,733:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:46:58,734:INFO:Cross validation set to False
2025-08-19 18:46:58,734:INFO:Fitting Model
2025-08-19 18:46:58,758:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:46:58,758:INFO:create_model() successfully completed......................................
2025-08-19 18:46:58,813:INFO:_master_model_container: 26
2025-08-19 18:46:58,814:INFO:_display_container: 21
2025-08-19 18:46:58,818:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:46:58,818:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:58,876:INFO:Initializing predict_model()
2025-08-19 18:46:58,876:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307957e20>)
2025-08-19 18:46:58,876:INFO:Checking exceptions
2025-08-19 18:46:58,876:INFO:Preloading libraries
2025-08-19 18:46:58,876:INFO:Set up data.
2025-08-19 18:46:58,880:INFO:Set up index.
2025-08-19 18:46:58,953:INFO:Initializing create_model()
2025-08-19 18:46:58,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:58,953:INFO:Checking exceptions
2025-08-19 18:46:58,954:INFO:Importing libraries
2025-08-19 18:46:58,954:INFO:Copying training dataset
2025-08-19 18:46:58,956:INFO:Defining folds
2025-08-19 18:46:58,956:INFO:Declaring metric variables
2025-08-19 18:46:58,956:INFO:Importing untrained model
2025-08-19 18:46:58,956:INFO:Logistic Regression Imported successfully
2025-08-19 18:46:58,956:INFO:Starting cross validation
2025-08-19 18:46:58,957:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:59,042:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:59,064:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:59,072:INFO:Calculating mean and std
2025-08-19 18:46:59,072:INFO:Creating metrics dataframe
2025-08-19 18:46:59,073:INFO:Finalizing model
2025-08-19 18:46:59,104:INFO:Uploading results into container
2025-08-19 18:46:59,107:INFO:Uploading model into container now
2025-08-19 18:46:59,108:INFO:_master_model_container: 27
2025-08-19 18:46:59,108:INFO:_display_container: 23
2025-08-19 18:46:59,108:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:46:59,108:INFO:create_model() successfully completed......................................
2025-08-19 18:46:59,175:INFO:Initializing finalize_model()
2025-08-19 18:46:59,175:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:59,175:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:46:59,182:INFO:Initializing create_model()
2025-08-19 18:46:59,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:59,182:INFO:Checking exceptions
2025-08-19 18:46:59,183:INFO:Importing libraries
2025-08-19 18:46:59,183:INFO:Copying training dataset
2025-08-19 18:46:59,183:INFO:Defining folds
2025-08-19 18:46:59,183:INFO:Declaring metric variables
2025-08-19 18:46:59,183:INFO:Importing untrained model
2025-08-19 18:46:59,183:INFO:Declaring custom model
2025-08-19 18:46:59,184:INFO:Logistic Regression Imported successfully
2025-08-19 18:46:59,184:INFO:Cross validation set to False
2025-08-19 18:46:59,184:INFO:Fitting Model
2025-08-19 18:46:59,248:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:46:59,249:INFO:create_model() successfully completed......................................
2025-08-19 18:46:59,315:INFO:_master_model_container: 27
2025-08-19 18:46:59,315:INFO:_display_container: 23
2025-08-19 18:46:59,319:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:46:59,319:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:59,400:INFO:Initializing predict_model()
2025-08-19 18:46:59,400:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307957e20>)
2025-08-19 18:46:59,400:INFO:Checking exceptions
2025-08-19 18:46:59,400:INFO:Preloading libraries
2025-08-19 18:46:59,400:INFO:Set up data.
2025-08-19 18:46:59,404:INFO:Set up index.
2025-08-19 18:46:59,501:INFO:Initializing create_model()
2025-08-19 18:46:59,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:59,501:INFO:Checking exceptions
2025-08-19 18:46:59,502:INFO:Importing libraries
2025-08-19 18:46:59,502:INFO:Copying training dataset
2025-08-19 18:46:59,504:INFO:Defining folds
2025-08-19 18:46:59,504:INFO:Declaring metric variables
2025-08-19 18:46:59,504:INFO:Importing untrained model
2025-08-19 18:46:59,504:INFO:Ridge Classifier Imported successfully
2025-08-19 18:46:59,504:INFO:Starting cross validation
2025-08-19 18:46:59,505:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:46:59,590:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:46:59,596:INFO:Calculating mean and std
2025-08-19 18:46:59,596:INFO:Creating metrics dataframe
2025-08-19 18:46:59,597:INFO:Finalizing model
2025-08-19 18:46:59,618:INFO:Uploading results into container
2025-08-19 18:46:59,619:INFO:Uploading model into container now
2025-08-19 18:46:59,619:INFO:_master_model_container: 28
2025-08-19 18:46:59,619:INFO:_display_container: 25
2025-08-19 18:46:59,619:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:46:59,619:INFO:create_model() successfully completed......................................
2025-08-19 18:46:59,682:INFO:Initializing finalize_model()
2025-08-19 18:46:59,683:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:46:59,683:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:46:59,684:INFO:Initializing create_model()
2025-08-19 18:46:59,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:59,684:INFO:Checking exceptions
2025-08-19 18:46:59,685:INFO:Importing libraries
2025-08-19 18:46:59,685:INFO:Copying training dataset
2025-08-19 18:46:59,685:INFO:Defining folds
2025-08-19 18:46:59,685:INFO:Declaring metric variables
2025-08-19 18:46:59,685:INFO:Importing untrained model
2025-08-19 18:46:59,685:INFO:Declaring custom model
2025-08-19 18:46:59,685:INFO:Ridge Classifier Imported successfully
2025-08-19 18:46:59,686:INFO:Cross validation set to False
2025-08-19 18:46:59,686:INFO:Fitting Model
2025-08-19 18:46:59,721:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:46:59,721:INFO:create_model() successfully completed......................................
2025-08-19 18:46:59,799:INFO:_master_model_container: 28
2025-08-19 18:46:59,799:INFO:_display_container: 25
2025-08-19 18:46:59,802:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:46:59,802:INFO:finalize_model() successfully completed......................................
2025-08-19 18:46:59,878:INFO:Initializing predict_model()
2025-08-19 18:46:59,878:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307957e20>)
2025-08-19 18:46:59,878:INFO:Checking exceptions
2025-08-19 18:46:59,878:INFO:Preloading libraries
2025-08-19 18:46:59,878:INFO:Set up data.
2025-08-19 18:46:59,882:INFO:Set up index.
2025-08-19 18:46:59,960:INFO:Initializing create_model()
2025-08-19 18:46:59,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:46:59,960:INFO:Checking exceptions
2025-08-19 18:46:59,961:INFO:Importing libraries
2025-08-19 18:46:59,961:INFO:Copying training dataset
2025-08-19 18:46:59,962:INFO:Defining folds
2025-08-19 18:46:59,962:INFO:Declaring metric variables
2025-08-19 18:46:59,963:INFO:Importing untrained model
2025-08-19 18:46:59,963:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:46:59,963:INFO:Starting cross validation
2025-08-19 18:46:59,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:47:00,079:INFO:Calculating mean and std
2025-08-19 18:47:00,079:INFO:Creating metrics dataframe
2025-08-19 18:47:00,080:INFO:Finalizing model
2025-08-19 18:47:00,104:INFO:Uploading results into container
2025-08-19 18:47:00,105:INFO:Uploading model into container now
2025-08-19 18:47:00,105:INFO:_master_model_container: 29
2025-08-19 18:47:00,105:INFO:_display_container: 27
2025-08-19 18:47:00,106:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:47:00,106:INFO:create_model() successfully completed......................................
2025-08-19 18:47:00,167:INFO:Initializing finalize_model()
2025-08-19 18:47:00,167:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:47:00,167:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:47:00,168:INFO:Initializing create_model()
2025-08-19 18:47:00,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:47:00,168:INFO:Checking exceptions
2025-08-19 18:47:00,170:INFO:Importing libraries
2025-08-19 18:47:00,170:INFO:Copying training dataset
2025-08-19 18:47:00,170:INFO:Defining folds
2025-08-19 18:47:00,170:INFO:Declaring metric variables
2025-08-19 18:47:00,171:INFO:Importing untrained model
2025-08-19 18:47:00,171:INFO:Declaring custom model
2025-08-19 18:47:00,171:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:47:00,174:INFO:Cross validation set to False
2025-08-19 18:47:00,174:INFO:Fitting Model
2025-08-19 18:47:00,213:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:47:00,213:INFO:create_model() successfully completed......................................
2025-08-19 18:47:00,282:INFO:_master_model_container: 29
2025-08-19 18:47:00,282:INFO:_display_container: 27
2025-08-19 18:47:00,287:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:47:00,288:INFO:finalize_model() successfully completed......................................
2025-08-19 18:47:00,358:INFO:Initializing predict_model()
2025-08-19 18:47:00,358:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307957e20>)
2025-08-19 18:47:00,358:INFO:Checking exceptions
2025-08-19 18:47:00,358:INFO:Preloading libraries
2025-08-19 18:47:00,358:INFO:Set up data.
2025-08-19 18:47:00,425:INFO:Set up index.
2025-08-19 18:47:00,536:INFO:Initializing create_model()
2025-08-19 18:47:00,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:47:00,536:INFO:Checking exceptions
2025-08-19 18:47:00,537:INFO:Importing libraries
2025-08-19 18:47:00,537:INFO:Copying training dataset
2025-08-19 18:47:00,538:INFO:Defining folds
2025-08-19 18:47:00,538:INFO:Declaring metric variables
2025-08-19 18:47:00,538:INFO:Importing untrained model
2025-08-19 18:47:00,538:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:47:00,539:INFO:Starting cross validation
2025-08-19 18:47:00,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:47:00,685:INFO:Calculating mean and std
2025-08-19 18:47:00,685:INFO:Creating metrics dataframe
2025-08-19 18:47:00,687:INFO:Finalizing model
2025-08-19 18:47:00,709:INFO:Uploading results into container
2025-08-19 18:47:00,709:INFO:Uploading model into container now
2025-08-19 18:47:00,709:INFO:_master_model_container: 30
2025-08-19 18:47:00,709:INFO:_display_container: 29
2025-08-19 18:47:00,709:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:47:00,709:INFO:create_model() successfully completed......................................
2025-08-19 18:47:00,796:INFO:Initializing finalize_model()
2025-08-19 18:47:00,796:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:47:00,796:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:47:00,798:INFO:Initializing create_model()
2025-08-19 18:47:00,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:47:00,798:INFO:Checking exceptions
2025-08-19 18:47:00,798:INFO:Importing libraries
2025-08-19 18:47:00,798:INFO:Copying training dataset
2025-08-19 18:47:00,798:INFO:Defining folds
2025-08-19 18:47:00,798:INFO:Declaring metric variables
2025-08-19 18:47:00,799:INFO:Importing untrained model
2025-08-19 18:47:00,799:INFO:Declaring custom model
2025-08-19 18:47:00,799:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:47:00,799:INFO:Cross validation set to False
2025-08-19 18:47:00,799:INFO:Fitting Model
2025-08-19 18:47:00,826:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:47:00,826:INFO:create_model() successfully completed......................................
2025-08-19 18:47:00,880:INFO:_master_model_container: 30
2025-08-19 18:47:00,880:INFO:_display_container: 29
2025-08-19 18:47:00,884:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:47:00,884:INFO:finalize_model() successfully completed......................................
2025-08-19 18:47:00,942:INFO:Initializing predict_model()
2025-08-19 18:47:00,942:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307957e20>)
2025-08-19 18:47:00,942:INFO:Checking exceptions
2025-08-19 18:47:00,942:INFO:Preloading libraries
2025-08-19 18:47:00,943:INFO:Set up data.
2025-08-19 18:47:00,946:INFO:Set up index.
2025-08-19 18:47:01,054:INFO:Initializing create_model()
2025-08-19 18:47:01,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:47:01,055:INFO:Checking exceptions
2025-08-19 18:47:01,056:INFO:Importing libraries
2025-08-19 18:47:01,056:INFO:Copying training dataset
2025-08-19 18:47:01,057:INFO:Defining folds
2025-08-19 18:47:01,057:INFO:Declaring metric variables
2025-08-19 18:47:01,057:INFO:Importing untrained model
2025-08-19 18:47:01,057:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:47:01,057:INFO:Starting cross validation
2025-08-19 18:47:01,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:47:01,089:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,093:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,096:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,099:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,118:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,128:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,133:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,139:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,145:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,149:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,168:INFO:Calculating mean and std
2025-08-19 18:47:01,168:INFO:Creating metrics dataframe
2025-08-19 18:47:01,169:INFO:Finalizing model
2025-08-19 18:47:01,192:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,220:INFO:Uploading results into container
2025-08-19 18:47:01,221:INFO:Uploading model into container now
2025-08-19 18:47:01,221:INFO:_master_model_container: 31
2025-08-19 18:47:01,221:INFO:_display_container: 31
2025-08-19 18:47:01,221:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:47:01,221:INFO:create_model() successfully completed......................................
2025-08-19 18:47:01,333:INFO:Initializing finalize_model()
2025-08-19 18:47:01,333:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:47:01,334:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:47:01,337:INFO:Initializing create_model()
2025-08-19 18:47:01,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:47:01,337:INFO:Checking exceptions
2025-08-19 18:47:01,338:INFO:Importing libraries
2025-08-19 18:47:01,338:INFO:Copying training dataset
2025-08-19 18:47:01,338:INFO:Defining folds
2025-08-19 18:47:01,338:INFO:Declaring metric variables
2025-08-19 18:47:01,338:INFO:Importing untrained model
2025-08-19 18:47:01,338:INFO:Declaring custom model
2025-08-19 18:47:01,338:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:47:01,339:INFO:Cross validation set to False
2025-08-19 18:47:01,339:INFO:Fitting Model
2025-08-19 18:47:01,363:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:47:01,369:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:47:01,369:INFO:create_model() successfully completed......................................
2025-08-19 18:47:01,441:INFO:_master_model_container: 31
2025-08-19 18:47:01,441:INFO:_display_container: 31
2025-08-19 18:47:01,449:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:47:01,449:INFO:finalize_model() successfully completed......................................
2025-08-19 18:47:01,510:INFO:Initializing predict_model()
2025-08-19 18:47:01,510:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307957e20>)
2025-08-19 18:47:01,510:INFO:Checking exceptions
2025-08-19 18:47:01,510:INFO:Preloading libraries
2025-08-19 18:47:01,510:INFO:Set up data.
2025-08-19 18:47:01,513:INFO:Set up index.
2025-08-19 18:47:01,591:INFO:Initializing create_model()
2025-08-19 18:47:01,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:47:01,591:INFO:Checking exceptions
2025-08-19 18:47:01,592:INFO:Importing libraries
2025-08-19 18:47:01,592:INFO:Copying training dataset
2025-08-19 18:47:01,594:INFO:Defining folds
2025-08-19 18:47:01,594:INFO:Declaring metric variables
2025-08-19 18:47:01,594:INFO:Importing untrained model
2025-08-19 18:47:01,594:INFO:Naive Bayes Imported successfully
2025-08-19 18:47:01,594:INFO:Starting cross validation
2025-08-19 18:47:01,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:47:01,693:INFO:Calculating mean and std
2025-08-19 18:47:01,693:INFO:Creating metrics dataframe
2025-08-19 18:47:01,694:INFO:Finalizing model
2025-08-19 18:47:01,714:INFO:Uploading results into container
2025-08-19 18:47:01,714:INFO:Uploading model into container now
2025-08-19 18:47:01,715:INFO:_master_model_container: 32
2025-08-19 18:47:01,715:INFO:_display_container: 33
2025-08-19 18:47:01,715:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:47:01,715:INFO:create_model() successfully completed......................................
2025-08-19 18:47:01,769:INFO:Initializing finalize_model()
2025-08-19 18:47:01,769:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:47:01,769:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:47:01,770:INFO:Initializing create_model()
2025-08-19 18:47:01,770:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:47:01,770:INFO:Checking exceptions
2025-08-19 18:47:01,771:INFO:Importing libraries
2025-08-19 18:47:01,771:INFO:Copying training dataset
2025-08-19 18:47:01,771:INFO:Defining folds
2025-08-19 18:47:01,771:INFO:Declaring metric variables
2025-08-19 18:47:01,771:INFO:Importing untrained model
2025-08-19 18:47:01,771:INFO:Declaring custom model
2025-08-19 18:47:01,771:INFO:Naive Bayes Imported successfully
2025-08-19 18:47:01,772:INFO:Cross validation set to False
2025-08-19 18:47:01,772:INFO:Fitting Model
2025-08-19 18:47:01,795:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:47:01,795:INFO:create_model() successfully completed......................................
2025-08-19 18:47:01,849:INFO:_master_model_container: 32
2025-08-19 18:47:01,849:INFO:_display_container: 33
2025-08-19 18:47:01,853:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:47:01,853:INFO:finalize_model() successfully completed......................................
2025-08-19 18:47:01,911:INFO:Initializing predict_model()
2025-08-19 18:47:01,911:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a08b700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307957e20>)
2025-08-19 18:47:01,911:INFO:Checking exceptions
2025-08-19 18:47:01,911:INFO:Preloading libraries
2025-08-19 18:47:01,911:INFO:Set up data.
2025-08-19 18:47:01,914:INFO:Set up index.
2025-08-19 18:53:05,208:INFO:PyCaret ClassificationExperiment
2025-08-19 18:53:05,209:INFO:Logging name: clf-default-name
2025-08-19 18:53:05,209:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:53:05,209:INFO:version 3.3.2
2025-08-19 18:53:05,209:INFO:Initializing setup()
2025-08-19 18:53:05,209:INFO:self.USI: ec24
2025-08-19 18:53:05,209:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:53:05,209:INFO:Checking environment
2025-08-19 18:53:05,209:INFO:python_version: 3.10.18
2025-08-19 18:53:05,209:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:53:05,209:INFO:machine: arm64
2025-08-19 18:53:05,209:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:53:05,209:INFO:Memory: svmem(total=17179869184, available=3631382528, percent=78.9, used=6808600576, free=74498048, active=3573284864, inactive=3540697088, wired=3235315712)
2025-08-19 18:53:05,209:INFO:Physical Core: 8
2025-08-19 18:53:05,209:INFO:Logical Core: 8
2025-08-19 18:53:05,209:INFO:Checking libraries
2025-08-19 18:53:05,210:INFO:System:
2025-08-19 18:53:05,210:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:53:05,210:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:53:05,210:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:53:05,210:INFO:PyCaret required dependencies:
2025-08-19 18:53:05,210:INFO:                 pip: 25.2
2025-08-19 18:53:05,210:INFO:          setuptools: 80.9.0
2025-08-19 18:53:05,210:INFO:             pycaret: 3.3.2
2025-08-19 18:53:05,210:INFO:             IPython: 8.37.0
2025-08-19 18:53:05,210:INFO:          ipywidgets: 8.1.7
2025-08-19 18:53:05,210:INFO:                tqdm: 4.67.1
2025-08-19 18:53:05,210:INFO:               numpy: 1.25.2
2025-08-19 18:53:05,210:INFO:              pandas: 2.1.4
2025-08-19 18:53:05,210:INFO:              jinja2: 3.1.6
2025-08-19 18:53:05,210:INFO:               scipy: 1.9.3
2025-08-19 18:53:05,210:INFO:              joblib: 1.3.2
2025-08-19 18:53:05,210:INFO:             sklearn: 1.4.2
2025-08-19 18:53:05,211:INFO:                pyod: 2.0.5
2025-08-19 18:53:05,211:INFO:            imblearn: 0.12.4
2025-08-19 18:53:05,211:INFO:   category_encoders: 2.7.0
2025-08-19 18:53:05,211:INFO:            lightgbm: 4.6.0
2025-08-19 18:53:05,211:INFO:               numba: 0.61.2
2025-08-19 18:53:05,211:INFO:            requests: 2.32.4
2025-08-19 18:53:05,211:INFO:          matplotlib: 3.7.2
2025-08-19 18:53:05,211:INFO:          scikitplot: 0.3.7
2025-08-19 18:53:05,211:INFO:         yellowbrick: 1.5
2025-08-19 18:53:05,211:INFO:              plotly: 5.24.1
2025-08-19 18:53:05,211:INFO:    plotly-resampler: Not installed
2025-08-19 18:53:05,211:INFO:             kaleido: 1.0.0
2025-08-19 18:53:05,211:INFO:           schemdraw: 0.15
2025-08-19 18:53:05,211:INFO:         statsmodels: 0.14.5
2025-08-19 18:53:05,211:INFO:              sktime: 0.26.0
2025-08-19 18:53:05,211:INFO:               tbats: 1.1.3
2025-08-19 18:53:05,211:INFO:            pmdarima: 2.0.4
2025-08-19 18:53:05,211:INFO:              psutil: 7.0.0
2025-08-19 18:53:05,211:INFO:          markupsafe: 3.0.2
2025-08-19 18:53:05,211:INFO:             pickle5: Not installed
2025-08-19 18:53:05,211:INFO:         cloudpickle: 3.1.1
2025-08-19 18:53:05,211:INFO:         deprecation: 2.1.0
2025-08-19 18:53:05,211:INFO:              xxhash: 3.5.0
2025-08-19 18:53:05,211:INFO:           wurlitzer: 3.1.1
2025-08-19 18:53:05,211:INFO:PyCaret optional dependencies:
2025-08-19 18:53:05,211:INFO:                shap: 0.48.0
2025-08-19 18:53:05,211:INFO:           interpret: Not installed
2025-08-19 18:53:05,211:INFO:                umap: Not installed
2025-08-19 18:53:05,211:INFO:     ydata_profiling: Not installed
2025-08-19 18:53:05,211:INFO:  explainerdashboard: Not installed
2025-08-19 18:53:05,211:INFO:             autoviz: Not installed
2025-08-19 18:53:05,211:INFO:           fairlearn: Not installed
2025-08-19 18:53:05,211:INFO:          deepchecks: Not installed
2025-08-19 18:53:05,211:INFO:             xgboost: 3.0.4
2025-08-19 18:53:05,211:INFO:            catboost: 1.2.8
2025-08-19 18:53:05,211:INFO:              kmodes: Not installed
2025-08-19 18:53:05,211:INFO:             mlxtend: 0.23.4
2025-08-19 18:53:05,211:INFO:       statsforecast: Not installed
2025-08-19 18:53:05,211:INFO:        tune_sklearn: Not installed
2025-08-19 18:53:05,211:INFO:                 ray: Not installed
2025-08-19 18:53:05,211:INFO:            hyperopt: Not installed
2025-08-19 18:53:05,211:INFO:              optuna: 4.4.0
2025-08-19 18:53:05,211:INFO:               skopt: Not installed
2025-08-19 18:53:05,211:INFO:              mlflow: Not installed
2025-08-19 18:53:05,211:INFO:              gradio: Not installed
2025-08-19 18:53:05,211:INFO:             fastapi: Not installed
2025-08-19 18:53:05,211:INFO:             uvicorn: Not installed
2025-08-19 18:53:05,211:INFO:              m2cgen: Not installed
2025-08-19 18:53:05,211:INFO:           evidently: Not installed
2025-08-19 18:53:05,211:INFO:               fugue: Not installed
2025-08-19 18:53:05,211:INFO:           streamlit: Not installed
2025-08-19 18:53:05,211:INFO:             prophet: Not installed
2025-08-19 18:53:05,211:INFO:None
2025-08-19 18:53:05,211:INFO:Set up data.
2025-08-19 18:53:05,220:INFO:Set up folding strategy.
2025-08-19 18:53:05,220:INFO:Set up train/test split.
2025-08-19 18:53:05,220:INFO:Set up data.
2025-08-19 18:53:05,226:INFO:Set up index.
2025-08-19 18:53:05,230:INFO:Assigning column types.
2025-08-19 18:53:05,231:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:53:05,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:53:05,254:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:53:05,268:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:05,269:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:05,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:53:05,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:53:05,305:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:05,306:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:05,306:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:53:05,326:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:53:05,339:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:05,340:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:05,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:53:05,372:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:05,373:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:05,373:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:53:05,413:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:05,414:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:05,450:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:05,451:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:05,452:INFO:Preparing preprocessing pipeline...
2025-08-19 18:53:05,453:INFO:Set up label encoding.
2025-08-19 18:53:05,453:INFO:Set up simple imputation.
2025-08-19 18:53:05,455:INFO:Set up encoding of categorical features.
2025-08-19 18:53:05,503:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:53:05,506:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:53:05,506:INFO:Creating final display dataframe.
2025-08-19 18:53:05,631:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              ec24
2025-08-19 18:53:05,666:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:05,668:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:05,701:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:05,702:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:05,703:INFO:setup() successfully completed in 0.51s...............
2025-08-19 18:53:05,703:INFO:Initializing compare_models()
2025-08-19 18:53:05,703:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:53:05,703:INFO:Checking exceptions
2025-08-19 18:53:05,705:INFO:Preparing display monitor
2025-08-19 18:53:05,708:INFO:Initializing Logistic Regression
2025-08-19 18:53:05,708:INFO:Total runtime is 3.516674041748047e-06 minutes
2025-08-19 18:53:05,708:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:05,709:INFO:Initializing create_model()
2025-08-19 18:53:05,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:05,709:INFO:Checking exceptions
2025-08-19 18:53:05,709:INFO:Importing libraries
2025-08-19 18:53:05,709:INFO:Copying training dataset
2025-08-19 18:53:05,710:INFO:Defining folds
2025-08-19 18:53:05,710:INFO:Declaring metric variables
2025-08-19 18:53:05,710:INFO:Importing untrained model
2025-08-19 18:53:05,710:INFO:Logistic Regression Imported successfully
2025-08-19 18:53:05,710:INFO:Starting cross validation
2025-08-19 18:53:05,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:10,027:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:10,112:INFO:Calculating mean and std
2025-08-19 18:53:10,113:INFO:Creating metrics dataframe
2025-08-19 18:53:10,116:INFO:Uploading results into container
2025-08-19 18:53:10,117:INFO:Uploading model into container now
2025-08-19 18:53:10,117:INFO:_master_model_container: 1
2025-08-19 18:53:10,117:INFO:_display_container: 2
2025-08-19 18:53:10,118:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:53:10,118:INFO:create_model() successfully completed......................................
2025-08-19 18:53:10,242:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:10,243:INFO:Creating metrics dataframe
2025-08-19 18:53:10,244:INFO:Initializing K Neighbors Classifier
2025-08-19 18:53:10,244:INFO:Total runtime is 0.07559630076090494 minutes
2025-08-19 18:53:10,244:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:10,244:INFO:Initializing create_model()
2025-08-19 18:53:10,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:10,244:INFO:Checking exceptions
2025-08-19 18:53:10,244:INFO:Importing libraries
2025-08-19 18:53:10,244:INFO:Copying training dataset
2025-08-19 18:53:10,246:INFO:Defining folds
2025-08-19 18:53:10,246:INFO:Declaring metric variables
2025-08-19 18:53:10,246:INFO:Importing untrained model
2025-08-19 18:53:10,246:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:53:10,247:INFO:Starting cross validation
2025-08-19 18:53:10,247:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:10,421:INFO:Calculating mean and std
2025-08-19 18:53:10,421:INFO:Creating metrics dataframe
2025-08-19 18:53:10,422:INFO:Uploading results into container
2025-08-19 18:53:10,422:INFO:Uploading model into container now
2025-08-19 18:53:10,422:INFO:_master_model_container: 2
2025-08-19 18:53:10,422:INFO:_display_container: 2
2025-08-19 18:53:10,423:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:53:10,423:INFO:create_model() successfully completed......................................
2025-08-19 18:53:10,521:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:10,521:INFO:Creating metrics dataframe
2025-08-19 18:53:10,522:INFO:Initializing Naive Bayes
2025-08-19 18:53:10,523:INFO:Total runtime is 0.08024391730626423 minutes
2025-08-19 18:53:10,523:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:10,523:INFO:Initializing create_model()
2025-08-19 18:53:10,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:10,523:INFO:Checking exceptions
2025-08-19 18:53:10,523:INFO:Importing libraries
2025-08-19 18:53:10,523:INFO:Copying training dataset
2025-08-19 18:53:10,524:INFO:Defining folds
2025-08-19 18:53:10,524:INFO:Declaring metric variables
2025-08-19 18:53:10,524:INFO:Importing untrained model
2025-08-19 18:53:10,525:INFO:Naive Bayes Imported successfully
2025-08-19 18:53:10,525:INFO:Starting cross validation
2025-08-19 18:53:10,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:10,629:INFO:Calculating mean and std
2025-08-19 18:53:10,630:INFO:Creating metrics dataframe
2025-08-19 18:53:10,631:INFO:Uploading results into container
2025-08-19 18:53:10,631:INFO:Uploading model into container now
2025-08-19 18:53:10,632:INFO:_master_model_container: 3
2025-08-19 18:53:10,632:INFO:_display_container: 2
2025-08-19 18:53:10,632:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:53:10,632:INFO:create_model() successfully completed......................................
2025-08-19 18:53:10,708:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:10,708:INFO:Creating metrics dataframe
2025-08-19 18:53:10,709:INFO:Initializing Decision Tree Classifier
2025-08-19 18:53:10,709:INFO:Total runtime is 0.08335215250651042 minutes
2025-08-19 18:53:10,709:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:10,709:INFO:Initializing create_model()
2025-08-19 18:53:10,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:10,709:INFO:Checking exceptions
2025-08-19 18:53:10,709:INFO:Importing libraries
2025-08-19 18:53:10,709:INFO:Copying training dataset
2025-08-19 18:53:10,711:INFO:Defining folds
2025-08-19 18:53:10,711:INFO:Declaring metric variables
2025-08-19 18:53:10,711:INFO:Importing untrained model
2025-08-19 18:53:10,711:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:53:10,711:INFO:Starting cross validation
2025-08-19 18:53:10,712:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:10,841:INFO:Calculating mean and std
2025-08-19 18:53:10,842:INFO:Creating metrics dataframe
2025-08-19 18:53:10,844:INFO:Uploading results into container
2025-08-19 18:53:10,844:INFO:Uploading model into container now
2025-08-19 18:53:10,844:INFO:_master_model_container: 4
2025-08-19 18:53:10,845:INFO:_display_container: 2
2025-08-19 18:53:10,845:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:53:10,845:INFO:create_model() successfully completed......................................
2025-08-19 18:53:10,930:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:10,930:INFO:Creating metrics dataframe
2025-08-19 18:53:10,931:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:53:10,931:INFO:Total runtime is 0.08705583413441975 minutes
2025-08-19 18:53:10,931:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:10,931:INFO:Initializing create_model()
2025-08-19 18:53:10,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:10,931:INFO:Checking exceptions
2025-08-19 18:53:10,932:INFO:Importing libraries
2025-08-19 18:53:10,932:INFO:Copying training dataset
2025-08-19 18:53:10,933:INFO:Defining folds
2025-08-19 18:53:10,933:INFO:Declaring metric variables
2025-08-19 18:53:10,933:INFO:Importing untrained model
2025-08-19 18:53:10,933:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:53:10,933:INFO:Starting cross validation
2025-08-19 18:53:10,934:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:11,071:INFO:Calculating mean and std
2025-08-19 18:53:11,071:INFO:Creating metrics dataframe
2025-08-19 18:53:11,072:INFO:Uploading results into container
2025-08-19 18:53:11,072:INFO:Uploading model into container now
2025-08-19 18:53:11,072:INFO:_master_model_container: 5
2025-08-19 18:53:11,072:INFO:_display_container: 2
2025-08-19 18:53:11,073:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:53:11,073:INFO:create_model() successfully completed......................................
2025-08-19 18:53:11,148:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:11,148:INFO:Creating metrics dataframe
2025-08-19 18:53:11,149:INFO:Initializing Ridge Classifier
2025-08-19 18:53:11,149:INFO:Total runtime is 0.09069288571675618 minutes
2025-08-19 18:53:11,150:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:11,150:INFO:Initializing create_model()
2025-08-19 18:53:11,150:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:11,150:INFO:Checking exceptions
2025-08-19 18:53:11,150:INFO:Importing libraries
2025-08-19 18:53:11,150:INFO:Copying training dataset
2025-08-19 18:53:11,151:INFO:Defining folds
2025-08-19 18:53:11,151:INFO:Declaring metric variables
2025-08-19 18:53:11,151:INFO:Importing untrained model
2025-08-19 18:53:11,151:INFO:Ridge Classifier Imported successfully
2025-08-19 18:53:11,151:INFO:Starting cross validation
2025-08-19 18:53:11,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:11,199:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:11,245:INFO:Calculating mean and std
2025-08-19 18:53:11,245:INFO:Creating metrics dataframe
2025-08-19 18:53:11,246:INFO:Uploading results into container
2025-08-19 18:53:11,246:INFO:Uploading model into container now
2025-08-19 18:53:11,246:INFO:_master_model_container: 6
2025-08-19 18:53:11,246:INFO:_display_container: 2
2025-08-19 18:53:11,247:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:53:11,247:INFO:create_model() successfully completed......................................
2025-08-19 18:53:11,315:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:11,315:INFO:Creating metrics dataframe
2025-08-19 18:53:11,317:INFO:Initializing Random Forest Classifier
2025-08-19 18:53:11,317:INFO:Total runtime is 0.09348286787668864 minutes
2025-08-19 18:53:11,317:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:11,317:INFO:Initializing create_model()
2025-08-19 18:53:11,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:11,317:INFO:Checking exceptions
2025-08-19 18:53:11,317:INFO:Importing libraries
2025-08-19 18:53:11,317:INFO:Copying training dataset
2025-08-19 18:53:11,318:INFO:Defining folds
2025-08-19 18:53:11,318:INFO:Declaring metric variables
2025-08-19 18:53:11,319:INFO:Importing untrained model
2025-08-19 18:53:11,319:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:53:11,319:INFO:Starting cross validation
2025-08-19 18:53:11,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:11,806:INFO:Calculating mean and std
2025-08-19 18:53:11,806:INFO:Creating metrics dataframe
2025-08-19 18:53:11,807:INFO:Uploading results into container
2025-08-19 18:53:11,807:INFO:Uploading model into container now
2025-08-19 18:53:11,807:INFO:_master_model_container: 7
2025-08-19 18:53:11,807:INFO:_display_container: 2
2025-08-19 18:53:11,808:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:53:11,808:INFO:create_model() successfully completed......................................
2025-08-19 18:53:11,875:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:11,875:INFO:Creating metrics dataframe
2025-08-19 18:53:11,877:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:53:11,877:INFO:Total runtime is 0.10281160275141397 minutes
2025-08-19 18:53:11,877:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:11,877:INFO:Initializing create_model()
2025-08-19 18:53:11,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:11,877:INFO:Checking exceptions
2025-08-19 18:53:11,877:INFO:Importing libraries
2025-08-19 18:53:11,877:INFO:Copying training dataset
2025-08-19 18:53:11,878:INFO:Defining folds
2025-08-19 18:53:11,878:INFO:Declaring metric variables
2025-08-19 18:53:11,879:INFO:Importing untrained model
2025-08-19 18:53:11,879:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:53:11,879:INFO:Starting cross validation
2025-08-19 18:53:11,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:11,907:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,912:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,917:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,919:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,923:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,951:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,953:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,955:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,969:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,976:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:11,996:INFO:Calculating mean and std
2025-08-19 18:53:11,996:INFO:Creating metrics dataframe
2025-08-19 18:53:11,998:INFO:Uploading results into container
2025-08-19 18:53:11,998:INFO:Uploading model into container now
2025-08-19 18:53:11,998:INFO:_master_model_container: 8
2025-08-19 18:53:11,998:INFO:_display_container: 2
2025-08-19 18:53:11,998:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:53:11,998:INFO:create_model() successfully completed......................................
2025-08-19 18:53:12,068:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:12,068:INFO:Creating metrics dataframe
2025-08-19 18:53:12,070:INFO:Initializing Ada Boost Classifier
2025-08-19 18:53:12,070:INFO:Total runtime is 0.10602863629659016 minutes
2025-08-19 18:53:12,070:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:12,070:INFO:Initializing create_model()
2025-08-19 18:53:12,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:12,070:INFO:Checking exceptions
2025-08-19 18:53:12,070:INFO:Importing libraries
2025-08-19 18:53:12,070:INFO:Copying training dataset
2025-08-19 18:53:12,071:INFO:Defining folds
2025-08-19 18:53:12,071:INFO:Declaring metric variables
2025-08-19 18:53:12,071:INFO:Importing untrained model
2025-08-19 18:53:12,071:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:53:12,071:INFO:Starting cross validation
2025-08-19 18:53:12,072:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:12,106:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,106:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,107:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,108:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,109:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,123:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,130:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,138:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,360:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,380:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:12,717:INFO:Calculating mean and std
2025-08-19 18:53:12,721:INFO:Creating metrics dataframe
2025-08-19 18:53:12,730:INFO:Uploading results into container
2025-08-19 18:53:12,731:INFO:Uploading model into container now
2025-08-19 18:53:12,732:INFO:_master_model_container: 9
2025-08-19 18:53:12,732:INFO:_display_container: 2
2025-08-19 18:53:12,733:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:53:12,733:INFO:create_model() successfully completed......................................
2025-08-19 18:53:12,916:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:12,916:INFO:Creating metrics dataframe
2025-08-19 18:53:12,931:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:53:12,932:INFO:Total runtime is 0.12039451996485392 minutes
2025-08-19 18:53:12,932:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:12,932:INFO:Initializing create_model()
2025-08-19 18:53:12,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:12,932:INFO:Checking exceptions
2025-08-19 18:53:12,932:INFO:Importing libraries
2025-08-19 18:53:12,932:INFO:Copying training dataset
2025-08-19 18:53:12,952:INFO:Defining folds
2025-08-19 18:53:12,952:INFO:Declaring metric variables
2025-08-19 18:53:12,952:INFO:Importing untrained model
2025-08-19 18:53:12,952:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:53:12,953:INFO:Starting cross validation
2025-08-19 18:53:12,957:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:14,269:INFO:Calculating mean and std
2025-08-19 18:53:14,270:INFO:Creating metrics dataframe
2025-08-19 18:53:14,271:INFO:Uploading results into container
2025-08-19 18:53:14,271:INFO:Uploading model into container now
2025-08-19 18:53:14,271:INFO:_master_model_container: 10
2025-08-19 18:53:14,271:INFO:_display_container: 2
2025-08-19 18:53:14,272:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:53:14,272:INFO:create_model() successfully completed......................................
2025-08-19 18:53:14,339:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:14,340:INFO:Creating metrics dataframe
2025-08-19 18:53:14,341:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:53:14,341:INFO:Total runtime is 0.14388018449147544 minutes
2025-08-19 18:53:14,341:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:14,341:INFO:Initializing create_model()
2025-08-19 18:53:14,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:14,341:INFO:Checking exceptions
2025-08-19 18:53:14,341:INFO:Importing libraries
2025-08-19 18:53:14,341:INFO:Copying training dataset
2025-08-19 18:53:14,343:INFO:Defining folds
2025-08-19 18:53:14,343:INFO:Declaring metric variables
2025-08-19 18:53:14,343:INFO:Importing untrained model
2025-08-19 18:53:14,343:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:53:14,343:INFO:Starting cross validation
2025-08-19 18:53:14,344:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:14,401:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:14,464:INFO:Calculating mean and std
2025-08-19 18:53:14,465:INFO:Creating metrics dataframe
2025-08-19 18:53:14,466:INFO:Uploading results into container
2025-08-19 18:53:14,466:INFO:Uploading model into container now
2025-08-19 18:53:14,466:INFO:_master_model_container: 11
2025-08-19 18:53:14,466:INFO:_display_container: 2
2025-08-19 18:53:14,466:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:53:14,466:INFO:create_model() successfully completed......................................
2025-08-19 18:53:14,535:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:14,535:INFO:Creating metrics dataframe
2025-08-19 18:53:14,537:INFO:Initializing Extra Trees Classifier
2025-08-19 18:53:14,537:INFO:Total runtime is 0.1471485177675883 minutes
2025-08-19 18:53:14,537:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:14,537:INFO:Initializing create_model()
2025-08-19 18:53:14,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:14,537:INFO:Checking exceptions
2025-08-19 18:53:14,537:INFO:Importing libraries
2025-08-19 18:53:14,537:INFO:Copying training dataset
2025-08-19 18:53:14,538:INFO:Defining folds
2025-08-19 18:53:14,538:INFO:Declaring metric variables
2025-08-19 18:53:14,539:INFO:Importing untrained model
2025-08-19 18:53:14,539:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:53:14,539:INFO:Starting cross validation
2025-08-19 18:53:14,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:14,889:INFO:Calculating mean and std
2025-08-19 18:53:14,889:INFO:Creating metrics dataframe
2025-08-19 18:53:14,890:INFO:Uploading results into container
2025-08-19 18:53:14,890:INFO:Uploading model into container now
2025-08-19 18:53:14,890:INFO:_master_model_container: 12
2025-08-19 18:53:14,890:INFO:_display_container: 2
2025-08-19 18:53:14,890:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:53:14,891:INFO:create_model() successfully completed......................................
2025-08-19 18:53:14,958:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:14,958:INFO:Creating metrics dataframe
2025-08-19 18:53:14,959:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:53:14,959:INFO:Total runtime is 0.15419028600056967 minutes
2025-08-19 18:53:14,959:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:14,960:INFO:Initializing create_model()
2025-08-19 18:53:14,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:14,960:INFO:Checking exceptions
2025-08-19 18:53:14,960:INFO:Importing libraries
2025-08-19 18:53:14,960:INFO:Copying training dataset
2025-08-19 18:53:14,962:INFO:Defining folds
2025-08-19 18:53:14,962:INFO:Declaring metric variables
2025-08-19 18:53:14,962:INFO:Importing untrained model
2025-08-19 18:53:14,962:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:53:14,962:INFO:Starting cross validation
2025-08-19 18:53:14,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:15,216:INFO:Calculating mean and std
2025-08-19 18:53:15,216:INFO:Creating metrics dataframe
2025-08-19 18:53:15,217:INFO:Uploading results into container
2025-08-19 18:53:15,217:INFO:Uploading model into container now
2025-08-19 18:53:15,218:INFO:_master_model_container: 13
2025-08-19 18:53:15,218:INFO:_display_container: 2
2025-08-19 18:53:15,218:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:53:15,218:INFO:create_model() successfully completed......................................
2025-08-19 18:53:15,299:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:15,299:INFO:Creating metrics dataframe
2025-08-19 18:53:15,300:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:53:15,300:INFO:Total runtime is 0.15987361669540406 minutes
2025-08-19 18:53:15,300:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:15,301:INFO:Initializing create_model()
2025-08-19 18:53:15,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:15,301:INFO:Checking exceptions
2025-08-19 18:53:15,301:INFO:Importing libraries
2025-08-19 18:53:15,301:INFO:Copying training dataset
2025-08-19 18:53:15,303:INFO:Defining folds
2025-08-19 18:53:15,303:INFO:Declaring metric variables
2025-08-19 18:53:15,303:INFO:Importing untrained model
2025-08-19 18:53:15,303:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:53:15,303:INFO:Starting cross validation
2025-08-19 18:53:15,304:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:18,283:INFO:Calculating mean and std
2025-08-19 18:53:18,284:INFO:Creating metrics dataframe
2025-08-19 18:53:18,285:INFO:Uploading results into container
2025-08-19 18:53:18,285:INFO:Uploading model into container now
2025-08-19 18:53:18,286:INFO:_master_model_container: 14
2025-08-19 18:53:18,286:INFO:_display_container: 2
2025-08-19 18:53:18,286:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:53:18,286:INFO:create_model() successfully completed......................................
2025-08-19 18:53:18,356:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:18,356:INFO:Creating metrics dataframe
2025-08-19 18:53:18,357:INFO:Initializing CatBoost Classifier
2025-08-19 18:53:18,357:INFO:Total runtime is 0.21082433462142947 minutes
2025-08-19 18:53:18,357:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:18,358:INFO:Initializing create_model()
2025-08-19 18:53:18,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:18,358:INFO:Checking exceptions
2025-08-19 18:53:18,358:INFO:Importing libraries
2025-08-19 18:53:18,358:INFO:Copying training dataset
2025-08-19 18:53:18,359:INFO:Defining folds
2025-08-19 18:53:18,359:INFO:Declaring metric variables
2025-08-19 18:53:18,359:INFO:Importing untrained model
2025-08-19 18:53:18,359:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:53:18,359:INFO:Starting cross validation
2025-08-19 18:53:18,360:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:26,137:INFO:Calculating mean and std
2025-08-19 18:53:26,137:INFO:Creating metrics dataframe
2025-08-19 18:53:26,140:INFO:Uploading results into container
2025-08-19 18:53:26,140:INFO:Uploading model into container now
2025-08-19 18:53:26,140:INFO:_master_model_container: 15
2025-08-19 18:53:26,140:INFO:_display_container: 2
2025-08-19 18:53:26,140:INFO:<catboost.core.CatBoostClassifier object at 0x3079e5120>
2025-08-19 18:53:26,140:INFO:create_model() successfully completed......................................
2025-08-19 18:53:26,237:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:26,237:INFO:Creating metrics dataframe
2025-08-19 18:53:26,238:INFO:Initializing Dummy Classifier
2025-08-19 18:53:26,238:INFO:Total runtime is 0.34216995239257814 minutes
2025-08-19 18:53:26,238:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:26,238:INFO:Initializing create_model()
2025-08-19 18:53:26,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x31ff9d360>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:26,238:INFO:Checking exceptions
2025-08-19 18:53:26,238:INFO:Importing libraries
2025-08-19 18:53:26,238:INFO:Copying training dataset
2025-08-19 18:53:26,240:INFO:Defining folds
2025-08-19 18:53:26,240:INFO:Declaring metric variables
2025-08-19 18:53:26,240:INFO:Importing untrained model
2025-08-19 18:53:26,240:INFO:Dummy Classifier Imported successfully
2025-08-19 18:53:26,241:INFO:Starting cross validation
2025-08-19 18:53:26,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:26,292:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,294:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,300:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,301:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,309:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,310:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,325:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,330:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,337:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,384:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:26,388:INFO:Calculating mean and std
2025-08-19 18:53:26,388:INFO:Creating metrics dataframe
2025-08-19 18:53:26,389:INFO:Uploading results into container
2025-08-19 18:53:26,389:INFO:Uploading model into container now
2025-08-19 18:53:26,389:INFO:_master_model_container: 16
2025-08-19 18:53:26,389:INFO:_display_container: 2
2025-08-19 18:53:26,390:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:53:26,390:INFO:create_model() successfully completed......................................
2025-08-19 18:53:26,458:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:26,458:INFO:Creating metrics dataframe
2025-08-19 18:53:26,460:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:53:26,460:INFO:Initializing create_model()
2025-08-19 18:53:26,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:26,460:INFO:Checking exceptions
2025-08-19 18:53:26,461:INFO:Importing libraries
2025-08-19 18:53:26,461:INFO:Copying training dataset
2025-08-19 18:53:26,462:INFO:Defining folds
2025-08-19 18:53:26,462:INFO:Declaring metric variables
2025-08-19 18:53:26,463:INFO:Importing untrained model
2025-08-19 18:53:26,463:INFO:Declaring custom model
2025-08-19 18:53:26,463:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:53:26,463:INFO:Cross validation set to False
2025-08-19 18:53:26,463:INFO:Fitting Model
2025-08-19 18:53:26,570:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:53:26,570:INFO:create_model() successfully completed......................................
2025-08-19 18:53:26,641:INFO:_master_model_container: 16
2025-08-19 18:53:26,641:INFO:_display_container: 2
2025-08-19 18:53:26,641:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:53:26,641:INFO:compare_models() successfully completed......................................
2025-08-19 18:53:26,642:INFO:Initializing create_model()
2025-08-19 18:53:26,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:26,642:INFO:Checking exceptions
2025-08-19 18:53:26,643:INFO:Importing libraries
2025-08-19 18:53:26,643:INFO:Copying training dataset
2025-08-19 18:53:26,645:INFO:Defining folds
2025-08-19 18:53:26,645:INFO:Declaring metric variables
2025-08-19 18:53:26,645:INFO:Importing untrained model
2025-08-19 18:53:26,645:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:53:26,645:INFO:Starting cross validation
2025-08-19 18:53:26,646:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:27,145:INFO:Calculating mean and std
2025-08-19 18:53:27,145:INFO:Creating metrics dataframe
2025-08-19 18:53:27,147:INFO:Finalizing model
2025-08-19 18:53:27,255:INFO:Uploading results into container
2025-08-19 18:53:27,256:INFO:Uploading model into container now
2025-08-19 18:53:27,256:INFO:_master_model_container: 17
2025-08-19 18:53:27,256:INFO:_display_container: 3
2025-08-19 18:53:27,256:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:53:27,256:INFO:create_model() successfully completed......................................
2025-08-19 18:53:27,327:INFO:Initializing finalize_model()
2025-08-19 18:53:27,327:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:27,327:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:53:27,328:INFO:Initializing create_model()
2025-08-19 18:53:27,328:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:27,328:INFO:Checking exceptions
2025-08-19 18:53:27,329:INFO:Importing libraries
2025-08-19 18:53:27,329:INFO:Copying training dataset
2025-08-19 18:53:27,329:INFO:Defining folds
2025-08-19 18:53:27,329:INFO:Declaring metric variables
2025-08-19 18:53:27,329:INFO:Importing untrained model
2025-08-19 18:53:27,329:INFO:Declaring custom model
2025-08-19 18:53:27,329:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:53:27,330:INFO:Cross validation set to False
2025-08-19 18:53:27,330:INFO:Fitting Model
2025-08-19 18:53:27,441:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:53:27,441:INFO:create_model() successfully completed......................................
2025-08-19 18:53:27,509:INFO:_master_model_container: 17
2025-08-19 18:53:27,509:INFO:_display_container: 3
2025-08-19 18:53:27,513:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:53:27,513:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:27,585:INFO:Initializing predict_model()
2025-08-19 18:53:27,585:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a4b910>)
2025-08-19 18:53:27,585:INFO:Checking exceptions
2025-08-19 18:53:27,585:INFO:Preloading libraries
2025-08-19 18:53:27,585:INFO:Set up data.
2025-08-19 18:53:27,589:INFO:Set up index.
2025-08-19 18:53:27,701:INFO:Initializing create_model()
2025-08-19 18:53:27,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:27,701:INFO:Checking exceptions
2025-08-19 18:53:27,702:INFO:Importing libraries
2025-08-19 18:53:27,702:INFO:Copying training dataset
2025-08-19 18:53:27,703:INFO:Defining folds
2025-08-19 18:53:27,703:INFO:Declaring metric variables
2025-08-19 18:53:27,703:INFO:Importing untrained model
2025-08-19 18:53:27,703:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:53:27,703:INFO:Starting cross validation
2025-08-19 18:53:27,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:35,363:INFO:Calculating mean and std
2025-08-19 18:53:35,364:INFO:Creating metrics dataframe
2025-08-19 18:53:35,365:INFO:Finalizing model
2025-08-19 18:53:36,737:INFO:Uploading results into container
2025-08-19 18:53:36,738:INFO:Uploading model into container now
2025-08-19 18:53:36,738:INFO:_master_model_container: 18
2025-08-19 18:53:36,738:INFO:_display_container: 5
2025-08-19 18:53:36,738:INFO:<catboost.core.CatBoostClassifier object at 0x307e7d720>
2025-08-19 18:53:36,738:INFO:create_model() successfully completed......................................
2025-08-19 18:53:36,815:INFO:Initializing finalize_model()
2025-08-19 18:53:36,815:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=<catboost.core.CatBoostClassifier object at 0x307e7d720>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:36,815:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x307e7d720>
2025-08-19 18:53:36,816:INFO:Initializing create_model()
2025-08-19 18:53:36,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=<catboost.core.CatBoostClassifier object at 0x307e7d720>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:36,816:INFO:Checking exceptions
2025-08-19 18:53:36,817:INFO:Importing libraries
2025-08-19 18:53:36,817:INFO:Copying training dataset
2025-08-19 18:53:36,817:INFO:Defining folds
2025-08-19 18:53:36,817:INFO:Declaring metric variables
2025-08-19 18:53:36,817:INFO:Importing untrained model
2025-08-19 18:53:36,817:INFO:Declaring custom model
2025-08-19 18:53:36,817:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:53:36,818:INFO:Cross validation set to False
2025-08-19 18:53:36,818:INFO:Fitting Model
2025-08-19 18:53:38,223:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x31ffb8820>)],
         verbose=False)
2025-08-19 18:53:38,223:INFO:create_model() successfully completed......................................
2025-08-19 18:53:38,294:INFO:_master_model_container: 18
2025-08-19 18:53:38,294:INFO:_display_container: 5
2025-08-19 18:53:38,298:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x31ffb8820>)],
         verbose=False)
2025-08-19 18:53:38,298:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:38,425:INFO:Initializing predict_model()
2025-08-19 18:53:38,425:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x31ffb8820>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a4b910>)
2025-08-19 18:53:38,425:INFO:Checking exceptions
2025-08-19 18:53:38,425:INFO:Preloading libraries
2025-08-19 18:53:38,425:INFO:Set up data.
2025-08-19 18:53:38,429:INFO:Set up index.
2025-08-19 18:53:38,529:INFO:Initializing create_model()
2025-08-19 18:53:38,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:38,530:INFO:Checking exceptions
2025-08-19 18:53:38,531:INFO:Importing libraries
2025-08-19 18:53:38,531:INFO:Copying training dataset
2025-08-19 18:53:38,534:INFO:Defining folds
2025-08-19 18:53:38,534:INFO:Declaring metric variables
2025-08-19 18:53:38,534:INFO:Importing untrained model
2025-08-19 18:53:38,534:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:53:38,534:INFO:Starting cross validation
2025-08-19 18:53:38,535:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:39,583:INFO:Calculating mean and std
2025-08-19 18:53:39,583:INFO:Creating metrics dataframe
2025-08-19 18:53:39,585:INFO:Finalizing model
2025-08-19 18:53:40,049:INFO:Uploading results into container
2025-08-19 18:53:40,049:INFO:Uploading model into container now
2025-08-19 18:53:40,050:INFO:_master_model_container: 19
2025-08-19 18:53:40,050:INFO:_display_container: 7
2025-08-19 18:53:40,050:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:53:40,050:INFO:create_model() successfully completed......................................
2025-08-19 18:53:40,120:INFO:Initializing finalize_model()
2025-08-19 18:53:40,120:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:40,120:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:53:40,122:INFO:Initializing create_model()
2025-08-19 18:53:40,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:40,122:INFO:Checking exceptions
2025-08-19 18:53:40,122:INFO:Importing libraries
2025-08-19 18:53:40,122:INFO:Copying training dataset
2025-08-19 18:53:40,122:INFO:Defining folds
2025-08-19 18:53:40,122:INFO:Declaring metric variables
2025-08-19 18:53:40,123:INFO:Importing untrained model
2025-08-19 18:53:40,123:INFO:Declaring custom model
2025-08-19 18:53:40,123:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:53:40,123:INFO:Cross validation set to False
2025-08-19 18:53:40,123:INFO:Fitting Model
2025-08-19 18:53:40,682:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:53:40,682:INFO:create_model() successfully completed......................................
2025-08-19 18:53:40,750:INFO:_master_model_container: 19
2025-08-19 18:53:40,750:INFO:_display_container: 7
2025-08-19 18:53:40,754:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:53:40,754:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:40,826:INFO:Initializing predict_model()
2025-08-19 18:53:40,826:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a4b910>)
2025-08-19 18:53:40,826:INFO:Checking exceptions
2025-08-19 18:53:40,826:INFO:Preloading libraries
2025-08-19 18:53:40,826:INFO:Set up data.
2025-08-19 18:53:40,829:INFO:Set up index.
2025-08-19 18:53:40,924:INFO:Initializing create_model()
2025-08-19 18:53:40,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:40,924:INFO:Checking exceptions
2025-08-19 18:53:40,926:INFO:Importing libraries
2025-08-19 18:53:40,926:INFO:Copying training dataset
2025-08-19 18:53:40,927:INFO:Defining folds
2025-08-19 18:53:40,928:INFO:Declaring metric variables
2025-08-19 18:53:40,928:INFO:Importing untrained model
2025-08-19 18:53:40,928:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:53:40,928:INFO:Starting cross validation
2025-08-19 18:53:40,929:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:41,188:INFO:Calculating mean and std
2025-08-19 18:53:41,188:INFO:Creating metrics dataframe
2025-08-19 18:53:41,189:INFO:Finalizing model
2025-08-19 18:53:41,335:INFO:Uploading results into container
2025-08-19 18:53:41,336:INFO:Uploading model into container now
2025-08-19 18:53:41,336:INFO:_master_model_container: 20
2025-08-19 18:53:41,336:INFO:_display_container: 9
2025-08-19 18:53:41,336:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:53:41,337:INFO:create_model() successfully completed......................................
2025-08-19 18:53:41,406:INFO:Initializing finalize_model()
2025-08-19 18:53:41,406:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:41,406:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:53:41,407:INFO:Initializing create_model()
2025-08-19 18:53:41,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:41,408:INFO:Checking exceptions
2025-08-19 18:53:41,408:INFO:Importing libraries
2025-08-19 18:53:41,408:INFO:Copying training dataset
2025-08-19 18:53:41,408:INFO:Defining folds
2025-08-19 18:53:41,408:INFO:Declaring metric variables
2025-08-19 18:53:41,408:INFO:Importing untrained model
2025-08-19 18:53:41,408:INFO:Declaring custom model
2025-08-19 18:53:41,409:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:53:41,410:INFO:Cross validation set to False
2025-08-19 18:53:41,410:INFO:Fitting Model
2025-08-19 18:53:41,568:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:53:41,568:INFO:create_model() successfully completed......................................
2025-08-19 18:53:41,638:INFO:_master_model_container: 20
2025-08-19 18:53:41,638:INFO:_display_container: 9
2025-08-19 18:53:41,643:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:53:41,643:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:41,716:INFO:Initializing predict_model()
2025-08-19 18:53:41,716:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a4b910>)
2025-08-19 18:53:41,716:INFO:Checking exceptions
2025-08-19 18:53:41,716:INFO:Preloading libraries
2025-08-19 18:53:41,716:INFO:Set up data.
2025-08-19 18:53:41,720:INFO:Set up index.
2025-08-19 18:53:41,806:INFO:Initializing create_model()
2025-08-19 18:53:41,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:41,806:INFO:Checking exceptions
2025-08-19 18:53:41,807:INFO:Importing libraries
2025-08-19 18:53:41,807:INFO:Copying training dataset
2025-08-19 18:53:41,809:INFO:Defining folds
2025-08-19 18:53:41,809:INFO:Declaring metric variables
2025-08-19 18:53:41,809:INFO:Importing untrained model
2025-08-19 18:53:41,810:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:53:41,810:INFO:Starting cross validation
2025-08-19 18:53:41,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:41,924:INFO:Calculating mean and std
2025-08-19 18:53:41,925:INFO:Creating metrics dataframe
2025-08-19 18:53:41,925:INFO:Finalizing model
2025-08-19 18:53:41,958:INFO:Uploading results into container
2025-08-19 18:53:41,959:INFO:Uploading model into container now
2025-08-19 18:53:41,959:INFO:_master_model_container: 21
2025-08-19 18:53:41,959:INFO:_display_container: 11
2025-08-19 18:53:41,959:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:53:41,959:INFO:create_model() successfully completed......................................
2025-08-19 18:53:42,029:INFO:Initializing finalize_model()
2025-08-19 18:53:42,029:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:42,029:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:53:42,030:INFO:Initializing create_model()
2025-08-19 18:53:42,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:42,030:INFO:Checking exceptions
2025-08-19 18:53:42,031:INFO:Importing libraries
2025-08-19 18:53:42,031:INFO:Copying training dataset
2025-08-19 18:53:42,031:INFO:Defining folds
2025-08-19 18:53:42,031:INFO:Declaring metric variables
2025-08-19 18:53:42,031:INFO:Importing untrained model
2025-08-19 18:53:42,031:INFO:Declaring custom model
2025-08-19 18:53:42,031:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:53:42,032:INFO:Cross validation set to False
2025-08-19 18:53:42,032:INFO:Fitting Model
2025-08-19 18:53:42,071:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:53:42,071:INFO:create_model() successfully completed......................................
2025-08-19 18:53:42,140:INFO:_master_model_container: 21
2025-08-19 18:53:42,140:INFO:_display_container: 11
2025-08-19 18:53:42,144:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:53:42,144:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:42,233:INFO:Initializing predict_model()
2025-08-19 18:53:42,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:42,233:INFO:Checking exceptions
2025-08-19 18:53:42,233:INFO:Preloading libraries
2025-08-19 18:53:42,233:INFO:Set up data.
2025-08-19 18:53:42,236:INFO:Set up index.
2025-08-19 18:53:42,332:INFO:Initializing create_model()
2025-08-19 18:53:42,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:42,332:INFO:Checking exceptions
2025-08-19 18:53:42,333:INFO:Importing libraries
2025-08-19 18:53:42,333:INFO:Copying training dataset
2025-08-19 18:53:42,334:INFO:Defining folds
2025-08-19 18:53:42,334:INFO:Declaring metric variables
2025-08-19 18:53:42,334:INFO:Importing untrained model
2025-08-19 18:53:42,335:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:53:42,335:INFO:Starting cross validation
2025-08-19 18:53:42,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:45,254:INFO:Calculating mean and std
2025-08-19 18:53:45,254:INFO:Creating metrics dataframe
2025-08-19 18:53:45,255:INFO:Finalizing model
2025-08-19 18:53:45,275:INFO:[LightGBM] [Info] Number of positive: 474, number of negative: 294
2025-08-19 18:53:45,276:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000314 seconds.
2025-08-19 18:53:45,276:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:53:45,276:INFO:[LightGBM] [Info] Total Bins 6377
2025-08-19 18:53:45,276:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:53:45,276:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.617188 -> initscore=0.477628
2025-08-19 18:53:45,276:INFO:[LightGBM] [Info] Start training from score 0.477628
2025-08-19 18:53:45,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,709:INFO:Uploading results into container
2025-08-19 18:53:45,710:INFO:Uploading model into container now
2025-08-19 18:53:45,710:INFO:_master_model_container: 22
2025-08-19 18:53:45,710:INFO:_display_container: 13
2025-08-19 18:53:45,710:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:53:45,710:INFO:create_model() successfully completed......................................
2025-08-19 18:53:45,778:INFO:Initializing finalize_model()
2025-08-19 18:53:45,779:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:45,779:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:53:45,780:INFO:Initializing create_model()
2025-08-19 18:53:45,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:45,780:INFO:Checking exceptions
2025-08-19 18:53:45,781:INFO:Importing libraries
2025-08-19 18:53:45,781:INFO:Copying training dataset
2025-08-19 18:53:45,781:INFO:Defining folds
2025-08-19 18:53:45,781:INFO:Declaring metric variables
2025-08-19 18:53:45,781:INFO:Importing untrained model
2025-08-19 18:53:45,781:INFO:Declaring custom model
2025-08-19 18:53:45,782:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:53:45,783:INFO:Cross validation set to False
2025-08-19 18:53:45,783:INFO:Fitting Model
2025-08-19 18:53:45,803:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:53:45,803:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000322 seconds.
2025-08-19 18:53:45,804:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:53:45,804:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:53:45,804:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:53:45,804:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:53:45,804:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:53:45,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:45,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:53:46,246:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:53:46,247:INFO:create_model() successfully completed......................................
2025-08-19 18:53:46,319:INFO:_master_model_container: 22
2025-08-19 18:53:46,319:INFO:_display_container: 13
2025-08-19 18:53:46,324:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:53:46,324:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:46,399:INFO:Initializing predict_model()
2025-08-19 18:53:46,399:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:46,399:INFO:Checking exceptions
2025-08-19 18:53:46,399:INFO:Preloading libraries
2025-08-19 18:53:46,399:INFO:Set up data.
2025-08-19 18:53:46,402:INFO:Set up index.
2025-08-19 18:53:46,488:INFO:Initializing create_model()
2025-08-19 18:53:46,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:46,488:INFO:Checking exceptions
2025-08-19 18:53:46,489:INFO:Importing libraries
2025-08-19 18:53:46,489:INFO:Copying training dataset
2025-08-19 18:53:46,491:INFO:Defining folds
2025-08-19 18:53:46,491:INFO:Declaring metric variables
2025-08-19 18:53:46,491:INFO:Importing untrained model
2025-08-19 18:53:46,491:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:53:46,491:INFO:Starting cross validation
2025-08-19 18:53:46,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:46,518:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,528:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,530:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,535:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,535:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,564:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,564:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,593:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,707:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,710:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,836:INFO:Calculating mean and std
2025-08-19 18:53:46,837:INFO:Creating metrics dataframe
2025-08-19 18:53:46,838:INFO:Finalizing model
2025-08-19 18:53:46,856:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:46,962:INFO:Uploading results into container
2025-08-19 18:53:46,963:INFO:Uploading model into container now
2025-08-19 18:53:46,963:INFO:_master_model_container: 23
2025-08-19 18:53:46,963:INFO:_display_container: 15
2025-08-19 18:53:46,963:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:53:46,963:INFO:create_model() successfully completed......................................
2025-08-19 18:53:47,031:INFO:Initializing finalize_model()
2025-08-19 18:53:47,031:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:47,031:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:53:47,032:INFO:Initializing create_model()
2025-08-19 18:53:47,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:47,032:INFO:Checking exceptions
2025-08-19 18:53:47,033:INFO:Importing libraries
2025-08-19 18:53:47,033:INFO:Copying training dataset
2025-08-19 18:53:47,034:INFO:Defining folds
2025-08-19 18:53:47,034:INFO:Declaring metric variables
2025-08-19 18:53:47,034:INFO:Importing untrained model
2025-08-19 18:53:47,034:INFO:Declaring custom model
2025-08-19 18:53:47,034:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:53:47,034:INFO:Cross validation set to False
2025-08-19 18:53:47,034:INFO:Fitting Model
2025-08-19 18:53:47,052:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:47,182:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:53:47,182:INFO:create_model() successfully completed......................................
2025-08-19 18:53:47,251:INFO:_master_model_container: 23
2025-08-19 18:53:47,251:INFO:_display_container: 15
2025-08-19 18:53:47,255:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:53:47,255:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:47,327:INFO:Initializing predict_model()
2025-08-19 18:53:47,327:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:47,327:INFO:Checking exceptions
2025-08-19 18:53:47,327:INFO:Preloading libraries
2025-08-19 18:53:47,327:INFO:Set up data.
2025-08-19 18:53:47,330:INFO:Set up index.
2025-08-19 18:53:47,434:INFO:Initializing create_model()
2025-08-19 18:53:47,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:47,434:INFO:Checking exceptions
2025-08-19 18:53:47,435:INFO:Importing libraries
2025-08-19 18:53:47,435:INFO:Copying training dataset
2025-08-19 18:53:47,437:INFO:Defining folds
2025-08-19 18:53:47,437:INFO:Declaring metric variables
2025-08-19 18:53:47,437:INFO:Importing untrained model
2025-08-19 18:53:47,438:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:53:47,438:INFO:Starting cross validation
2025-08-19 18:53:47,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:48,007:INFO:Calculating mean and std
2025-08-19 18:53:48,008:INFO:Creating metrics dataframe
2025-08-19 18:53:48,009:INFO:Finalizing model
2025-08-19 18:53:48,093:INFO:Uploading results into container
2025-08-19 18:53:48,093:INFO:Uploading model into container now
2025-08-19 18:53:48,093:INFO:_master_model_container: 24
2025-08-19 18:53:48,093:INFO:_display_container: 17
2025-08-19 18:53:48,094:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:53:48,094:INFO:create_model() successfully completed......................................
2025-08-19 18:53:48,173:INFO:Initializing finalize_model()
2025-08-19 18:53:48,173:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:48,173:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:53:48,175:INFO:Initializing create_model()
2025-08-19 18:53:48,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:48,175:INFO:Checking exceptions
2025-08-19 18:53:48,175:INFO:Importing libraries
2025-08-19 18:53:48,175:INFO:Copying training dataset
2025-08-19 18:53:48,175:INFO:Defining folds
2025-08-19 18:53:48,175:INFO:Declaring metric variables
2025-08-19 18:53:48,176:INFO:Importing untrained model
2025-08-19 18:53:48,176:INFO:Declaring custom model
2025-08-19 18:53:48,176:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:53:48,176:INFO:Cross validation set to False
2025-08-19 18:53:48,177:INFO:Fitting Model
2025-08-19 18:53:48,265:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:53:48,265:INFO:create_model() successfully completed......................................
2025-08-19 18:53:48,334:INFO:_master_model_container: 24
2025-08-19 18:53:48,334:INFO:_display_container: 17
2025-08-19 18:53:48,338:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:53:48,338:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:48,438:INFO:Initializing predict_model()
2025-08-19 18:53:48,438:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:48,438:INFO:Checking exceptions
2025-08-19 18:53:48,438:INFO:Preloading libraries
2025-08-19 18:53:48,438:INFO:Set up data.
2025-08-19 18:53:48,441:INFO:Set up index.
2025-08-19 18:53:48,555:INFO:Initializing create_model()
2025-08-19 18:53:48,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:48,555:INFO:Checking exceptions
2025-08-19 18:53:48,556:INFO:Importing libraries
2025-08-19 18:53:48,556:INFO:Copying training dataset
2025-08-19 18:53:48,557:INFO:Defining folds
2025-08-19 18:53:48,557:INFO:Declaring metric variables
2025-08-19 18:53:48,557:INFO:Importing untrained model
2025-08-19 18:53:48,558:INFO:Dummy Classifier Imported successfully
2025-08-19 18:53:48,558:INFO:Starting cross validation
2025-08-19 18:53:48,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:48,601:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,603:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,605:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,610:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,628:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,630:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,638:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,638:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,645:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,650:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:48,654:INFO:Calculating mean and std
2025-08-19 18:53:48,654:INFO:Creating metrics dataframe
2025-08-19 18:53:48,655:INFO:Finalizing model
2025-08-19 18:53:48,674:INFO:Uploading results into container
2025-08-19 18:53:48,674:INFO:Uploading model into container now
2025-08-19 18:53:48,675:INFO:_master_model_container: 25
2025-08-19 18:53:48,675:INFO:_display_container: 19
2025-08-19 18:53:48,675:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:53:48,675:INFO:create_model() successfully completed......................................
2025-08-19 18:53:48,743:INFO:Initializing finalize_model()
2025-08-19 18:53:48,743:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:48,744:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:53:48,745:INFO:Initializing create_model()
2025-08-19 18:53:48,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:48,745:INFO:Checking exceptions
2025-08-19 18:53:48,746:INFO:Importing libraries
2025-08-19 18:53:48,746:INFO:Copying training dataset
2025-08-19 18:53:48,746:INFO:Defining folds
2025-08-19 18:53:48,746:INFO:Declaring metric variables
2025-08-19 18:53:48,746:INFO:Importing untrained model
2025-08-19 18:53:48,746:INFO:Declaring custom model
2025-08-19 18:53:48,746:INFO:Dummy Classifier Imported successfully
2025-08-19 18:53:48,747:INFO:Cross validation set to False
2025-08-19 18:53:48,747:INFO:Fitting Model
2025-08-19 18:53:48,767:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:53:48,767:INFO:create_model() successfully completed......................................
2025-08-19 18:53:48,838:INFO:_master_model_container: 25
2025-08-19 18:53:48,838:INFO:_display_container: 19
2025-08-19 18:53:48,841:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:53:48,841:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:48,919:INFO:Initializing predict_model()
2025-08-19 18:53:48,919:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:48,919:INFO:Checking exceptions
2025-08-19 18:53:48,919:INFO:Preloading libraries
2025-08-19 18:53:48,919:INFO:Set up data.
2025-08-19 18:53:48,922:INFO:Set up index.
2025-08-19 18:53:48,946:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:49,040:INFO:Initializing create_model()
2025-08-19 18:53:49,040:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:49,040:INFO:Checking exceptions
2025-08-19 18:53:49,041:INFO:Importing libraries
2025-08-19 18:53:49,041:INFO:Copying training dataset
2025-08-19 18:53:49,042:INFO:Defining folds
2025-08-19 18:53:49,042:INFO:Declaring metric variables
2025-08-19 18:53:49,042:INFO:Importing untrained model
2025-08-19 18:53:49,043:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:53:49,043:INFO:Starting cross validation
2025-08-19 18:53:49,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:49,177:INFO:Calculating mean and std
2025-08-19 18:53:49,177:INFO:Creating metrics dataframe
2025-08-19 18:53:49,178:INFO:Finalizing model
2025-08-19 18:53:49,197:INFO:Uploading results into container
2025-08-19 18:53:49,197:INFO:Uploading model into container now
2025-08-19 18:53:49,197:INFO:_master_model_container: 26
2025-08-19 18:53:49,197:INFO:_display_container: 21
2025-08-19 18:53:49,197:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:53:49,197:INFO:create_model() successfully completed......................................
2025-08-19 18:53:49,266:INFO:Initializing finalize_model()
2025-08-19 18:53:49,267:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:49,267:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:53:49,268:INFO:Initializing create_model()
2025-08-19 18:53:49,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:49,268:INFO:Checking exceptions
2025-08-19 18:53:49,269:INFO:Importing libraries
2025-08-19 18:53:49,269:INFO:Copying training dataset
2025-08-19 18:53:49,269:INFO:Defining folds
2025-08-19 18:53:49,269:INFO:Declaring metric variables
2025-08-19 18:53:49,269:INFO:Importing untrained model
2025-08-19 18:53:49,269:INFO:Declaring custom model
2025-08-19 18:53:49,269:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:53:49,270:INFO:Cross validation set to False
2025-08-19 18:53:49,270:INFO:Fitting Model
2025-08-19 18:53:49,292:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:53:49,292:INFO:create_model() successfully completed......................................
2025-08-19 18:53:49,360:INFO:_master_model_container: 26
2025-08-19 18:53:49,361:INFO:_display_container: 21
2025-08-19 18:53:49,364:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:53:49,364:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:49,437:INFO:Initializing predict_model()
2025-08-19 18:53:49,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:49,437:INFO:Checking exceptions
2025-08-19 18:53:49,437:INFO:Preloading libraries
2025-08-19 18:53:49,437:INFO:Set up data.
2025-08-19 18:53:49,441:INFO:Set up index.
2025-08-19 18:53:49,711:INFO:Initializing create_model()
2025-08-19 18:53:49,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:49,714:INFO:Checking exceptions
2025-08-19 18:53:49,718:INFO:Importing libraries
2025-08-19 18:53:49,718:INFO:Copying training dataset
2025-08-19 18:53:49,719:INFO:Defining folds
2025-08-19 18:53:49,719:INFO:Declaring metric variables
2025-08-19 18:53:49,719:INFO:Importing untrained model
2025-08-19 18:53:49,719:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:53:49,720:INFO:Starting cross validation
2025-08-19 18:53:49,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:49,752:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,755:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,770:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,774:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,777:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,781:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,793:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,799:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,812:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,813:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,839:INFO:Calculating mean and std
2025-08-19 18:53:49,839:INFO:Creating metrics dataframe
2025-08-19 18:53:49,840:INFO:Finalizing model
2025-08-19 18:53:49,860:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:49,863:INFO:Uploading results into container
2025-08-19 18:53:49,863:INFO:Uploading model into container now
2025-08-19 18:53:49,864:INFO:_master_model_container: 27
2025-08-19 18:53:49,864:INFO:_display_container: 23
2025-08-19 18:53:49,864:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:53:49,864:INFO:create_model() successfully completed......................................
2025-08-19 18:53:49,950:INFO:Initializing finalize_model()
2025-08-19 18:53:49,950:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:49,951:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:53:49,952:INFO:Initializing create_model()
2025-08-19 18:53:49,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:49,952:INFO:Checking exceptions
2025-08-19 18:53:49,952:INFO:Importing libraries
2025-08-19 18:53:49,953:INFO:Copying training dataset
2025-08-19 18:53:49,953:INFO:Defining folds
2025-08-19 18:53:49,953:INFO:Declaring metric variables
2025-08-19 18:53:49,953:INFO:Importing untrained model
2025-08-19 18:53:49,953:INFO:Declaring custom model
2025-08-19 18:53:49,953:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:53:49,953:INFO:Cross validation set to False
2025-08-19 18:53:49,953:INFO:Fitting Model
2025-08-19 18:53:49,998:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:50,007:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:53:50,007:INFO:create_model() successfully completed......................................
2025-08-19 18:53:50,094:INFO:_master_model_container: 27
2025-08-19 18:53:50,094:INFO:_display_container: 23
2025-08-19 18:53:50,098:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:53:50,098:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:50,184:INFO:Initializing predict_model()
2025-08-19 18:53:50,184:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:50,184:INFO:Checking exceptions
2025-08-19 18:53:50,184:INFO:Preloading libraries
2025-08-19 18:53:50,184:INFO:Set up data.
2025-08-19 18:53:50,188:INFO:Set up index.
2025-08-19 18:53:50,316:INFO:Initializing create_model()
2025-08-19 18:53:50,317:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:50,317:INFO:Checking exceptions
2025-08-19 18:53:50,317:INFO:Importing libraries
2025-08-19 18:53:50,317:INFO:Copying training dataset
2025-08-19 18:53:50,319:INFO:Defining folds
2025-08-19 18:53:50,319:INFO:Declaring metric variables
2025-08-19 18:53:50,319:INFO:Importing untrained model
2025-08-19 18:53:50,319:INFO:Ridge Classifier Imported successfully
2025-08-19 18:53:50,319:INFO:Starting cross validation
2025-08-19 18:53:50,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:50,422:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:50,447:INFO:Calculating mean and std
2025-08-19 18:53:50,448:INFO:Creating metrics dataframe
2025-08-19 18:53:50,448:INFO:Finalizing model
2025-08-19 18:53:50,471:INFO:Uploading results into container
2025-08-19 18:53:50,472:INFO:Uploading model into container now
2025-08-19 18:53:50,472:INFO:_master_model_container: 28
2025-08-19 18:53:50,473:INFO:_display_container: 25
2025-08-19 18:53:50,473:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:53:50,473:INFO:create_model() successfully completed......................................
2025-08-19 18:53:50,567:INFO:Initializing finalize_model()
2025-08-19 18:53:50,567:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:50,567:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:53:50,569:INFO:Initializing create_model()
2025-08-19 18:53:50,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:50,569:INFO:Checking exceptions
2025-08-19 18:53:50,570:INFO:Importing libraries
2025-08-19 18:53:50,570:INFO:Copying training dataset
2025-08-19 18:53:50,570:INFO:Defining folds
2025-08-19 18:53:50,570:INFO:Declaring metric variables
2025-08-19 18:53:50,570:INFO:Importing untrained model
2025-08-19 18:53:50,570:INFO:Declaring custom model
2025-08-19 18:53:50,571:INFO:Ridge Classifier Imported successfully
2025-08-19 18:53:50,571:INFO:Cross validation set to False
2025-08-19 18:53:50,571:INFO:Fitting Model
2025-08-19 18:53:50,608:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:53:50,609:INFO:create_model() successfully completed......................................
2025-08-19 18:53:50,701:INFO:_master_model_container: 28
2025-08-19 18:53:50,701:INFO:_display_container: 25
2025-08-19 18:53:50,706:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:53:50,706:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:50,801:INFO:Initializing predict_model()
2025-08-19 18:53:50,802:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:50,802:INFO:Checking exceptions
2025-08-19 18:53:50,802:INFO:Preloading libraries
2025-08-19 18:53:50,802:INFO:Set up data.
2025-08-19 18:53:50,807:INFO:Set up index.
2025-08-19 18:53:50,906:INFO:Initializing create_model()
2025-08-19 18:53:50,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:50,906:INFO:Checking exceptions
2025-08-19 18:53:50,906:INFO:Importing libraries
2025-08-19 18:53:50,907:INFO:Copying training dataset
2025-08-19 18:53:50,909:INFO:Defining folds
2025-08-19 18:53:50,909:INFO:Declaring metric variables
2025-08-19 18:53:50,909:INFO:Importing untrained model
2025-08-19 18:53:50,909:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:53:50,909:INFO:Starting cross validation
2025-08-19 18:53:50,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:50,951:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:51,015:INFO:Calculating mean and std
2025-08-19 18:53:51,015:INFO:Creating metrics dataframe
2025-08-19 18:53:51,017:INFO:Finalizing model
2025-08-19 18:53:51,039:INFO:Uploading results into container
2025-08-19 18:53:51,039:INFO:Uploading model into container now
2025-08-19 18:53:51,040:INFO:_master_model_container: 29
2025-08-19 18:53:51,040:INFO:_display_container: 27
2025-08-19 18:53:51,040:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:53:51,041:INFO:create_model() successfully completed......................................
2025-08-19 18:53:51,118:INFO:Initializing finalize_model()
2025-08-19 18:53:51,118:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:51,118:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:53:51,119:INFO:Initializing create_model()
2025-08-19 18:53:51,119:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:51,119:INFO:Checking exceptions
2025-08-19 18:53:51,120:INFO:Importing libraries
2025-08-19 18:53:51,120:INFO:Copying training dataset
2025-08-19 18:53:51,120:INFO:Defining folds
2025-08-19 18:53:51,120:INFO:Declaring metric variables
2025-08-19 18:53:51,120:INFO:Importing untrained model
2025-08-19 18:53:51,120:INFO:Declaring custom model
2025-08-19 18:53:51,121:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:53:51,123:INFO:Cross validation set to False
2025-08-19 18:53:51,123:INFO:Fitting Model
2025-08-19 18:53:51,177:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:53:51,177:INFO:create_model() successfully completed......................................
2025-08-19 18:53:51,261:INFO:_master_model_container: 29
2025-08-19 18:53:51,261:INFO:_display_container: 27
2025-08-19 18:53:51,265:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:53:51,265:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:51,350:INFO:Initializing predict_model()
2025-08-19 18:53:51,350:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:51,350:INFO:Checking exceptions
2025-08-19 18:53:51,350:INFO:Preloading libraries
2025-08-19 18:53:51,351:INFO:Set up data.
2025-08-19 18:53:51,354:INFO:Set up index.
2025-08-19 18:53:51,472:INFO:Initializing create_model()
2025-08-19 18:53:51,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:51,473:INFO:Checking exceptions
2025-08-19 18:53:51,473:INFO:Importing libraries
2025-08-19 18:53:51,474:INFO:Copying training dataset
2025-08-19 18:53:51,475:INFO:Defining folds
2025-08-19 18:53:51,475:INFO:Declaring metric variables
2025-08-19 18:53:51,475:INFO:Importing untrained model
2025-08-19 18:53:51,476:INFO:Logistic Regression Imported successfully
2025-08-19 18:53:51,476:INFO:Starting cross validation
2025-08-19 18:53:51,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:51,554:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:51,629:INFO:Calculating mean and std
2025-08-19 18:53:51,629:INFO:Creating metrics dataframe
2025-08-19 18:53:51,630:INFO:Finalizing model
2025-08-19 18:53:51,727:INFO:Uploading results into container
2025-08-19 18:53:51,728:INFO:Uploading model into container now
2025-08-19 18:53:51,728:INFO:_master_model_container: 30
2025-08-19 18:53:51,728:INFO:_display_container: 29
2025-08-19 18:53:51,728:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:53:51,728:INFO:create_model() successfully completed......................................
2025-08-19 18:53:51,816:INFO:Initializing finalize_model()
2025-08-19 18:53:51,816:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:51,817:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:53:51,818:INFO:Initializing create_model()
2025-08-19 18:53:51,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:51,819:INFO:Checking exceptions
2025-08-19 18:53:51,819:INFO:Importing libraries
2025-08-19 18:53:51,819:INFO:Copying training dataset
2025-08-19 18:53:51,819:INFO:Defining folds
2025-08-19 18:53:51,819:INFO:Declaring metric variables
2025-08-19 18:53:51,819:INFO:Importing untrained model
2025-08-19 18:53:51,819:INFO:Declaring custom model
2025-08-19 18:53:51,820:INFO:Logistic Regression Imported successfully
2025-08-19 18:53:51,820:INFO:Cross validation set to False
2025-08-19 18:53:51,820:INFO:Fitting Model
2025-08-19 18:53:51,866:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:53:51,867:INFO:create_model() successfully completed......................................
2025-08-19 18:53:51,956:INFO:_master_model_container: 30
2025-08-19 18:53:51,956:INFO:_display_container: 29
2025-08-19 18:53:51,960:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:53:51,960:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:52,037:INFO:Initializing predict_model()
2025-08-19 18:53:52,038:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:52,038:INFO:Checking exceptions
2025-08-19 18:53:52,038:INFO:Preloading libraries
2025-08-19 18:53:52,038:INFO:Set up data.
2025-08-19 18:53:52,041:INFO:Set up index.
2025-08-19 18:53:52,140:INFO:Initializing create_model()
2025-08-19 18:53:52,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:52,140:INFO:Checking exceptions
2025-08-19 18:53:52,141:INFO:Importing libraries
2025-08-19 18:53:52,141:INFO:Copying training dataset
2025-08-19 18:53:52,143:INFO:Defining folds
2025-08-19 18:53:52,143:INFO:Declaring metric variables
2025-08-19 18:53:52,143:INFO:Importing untrained model
2025-08-19 18:53:52,144:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:53:52,144:INFO:Starting cross validation
2025-08-19 18:53:52,144:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:52,247:INFO:Calculating mean and std
2025-08-19 18:53:52,247:INFO:Creating metrics dataframe
2025-08-19 18:53:52,248:INFO:Finalizing model
2025-08-19 18:53:52,271:INFO:Uploading results into container
2025-08-19 18:53:52,271:INFO:Uploading model into container now
2025-08-19 18:53:52,271:INFO:_master_model_container: 31
2025-08-19 18:53:52,271:INFO:_display_container: 31
2025-08-19 18:53:52,271:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:53:52,271:INFO:create_model() successfully completed......................................
2025-08-19 18:53:52,340:INFO:Initializing finalize_model()
2025-08-19 18:53:52,340:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:52,340:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:53:52,342:INFO:Initializing create_model()
2025-08-19 18:53:52,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:52,342:INFO:Checking exceptions
2025-08-19 18:53:52,343:INFO:Importing libraries
2025-08-19 18:53:52,343:INFO:Copying training dataset
2025-08-19 18:53:52,343:INFO:Defining folds
2025-08-19 18:53:52,343:INFO:Declaring metric variables
2025-08-19 18:53:52,343:INFO:Importing untrained model
2025-08-19 18:53:52,343:INFO:Declaring custom model
2025-08-19 18:53:52,343:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:53:52,344:INFO:Cross validation set to False
2025-08-19 18:53:52,344:INFO:Fitting Model
2025-08-19 18:53:52,370:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:53:52,370:INFO:create_model() successfully completed......................................
2025-08-19 18:53:52,440:INFO:_master_model_container: 31
2025-08-19 18:53:52,440:INFO:_display_container: 31
2025-08-19 18:53:52,444:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:53:52,444:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:52,516:INFO:Initializing predict_model()
2025-08-19 18:53:52,516:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:52,516:INFO:Checking exceptions
2025-08-19 18:53:52,517:INFO:Preloading libraries
2025-08-19 18:53:52,517:INFO:Set up data.
2025-08-19 18:53:52,520:INFO:Set up index.
2025-08-19 18:53:52,604:INFO:Initializing create_model()
2025-08-19 18:53:52,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:52,604:INFO:Checking exceptions
2025-08-19 18:53:52,605:INFO:Importing libraries
2025-08-19 18:53:52,605:INFO:Copying training dataset
2025-08-19 18:53:52,606:INFO:Defining folds
2025-08-19 18:53:52,606:INFO:Declaring metric variables
2025-08-19 18:53:52,606:INFO:Importing untrained model
2025-08-19 18:53:52,606:INFO:Naive Bayes Imported successfully
2025-08-19 18:53:52,606:INFO:Starting cross validation
2025-08-19 18:53:52,607:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:52,704:INFO:Calculating mean and std
2025-08-19 18:53:52,705:INFO:Creating metrics dataframe
2025-08-19 18:53:52,706:INFO:Finalizing model
2025-08-19 18:53:52,726:INFO:Uploading results into container
2025-08-19 18:53:52,726:INFO:Uploading model into container now
2025-08-19 18:53:52,726:INFO:_master_model_container: 32
2025-08-19 18:53:52,726:INFO:_display_container: 33
2025-08-19 18:53:52,726:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:53:52,726:INFO:create_model() successfully completed......................................
2025-08-19 18:53:52,797:INFO:Initializing finalize_model()
2025-08-19 18:53:52,797:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:53:52,797:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:53:52,799:INFO:Initializing create_model()
2025-08-19 18:53:52,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:52,799:INFO:Checking exceptions
2025-08-19 18:53:52,800:INFO:Importing libraries
2025-08-19 18:53:52,800:INFO:Copying training dataset
2025-08-19 18:53:52,800:INFO:Defining folds
2025-08-19 18:53:52,800:INFO:Declaring metric variables
2025-08-19 18:53:52,801:INFO:Importing untrained model
2025-08-19 18:53:52,801:INFO:Declaring custom model
2025-08-19 18:53:52,801:INFO:Naive Bayes Imported successfully
2025-08-19 18:53:52,801:INFO:Cross validation set to False
2025-08-19 18:53:52,801:INFO:Fitting Model
2025-08-19 18:53:52,828:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:53:52,828:INFO:create_model() successfully completed......................................
2025-08-19 18:53:52,906:INFO:_master_model_container: 32
2025-08-19 18:53:52,906:INFO:_display_container: 33
2025-08-19 18:53:52,910:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:53:52,910:INFO:finalize_model() successfully completed......................................
2025-08-19 18:53:52,987:INFO:Initializing predict_model()
2025-08-19 18:53:52,987:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x309a4a3e0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x309a63880>)
2025-08-19 18:53:52,987:INFO:Checking exceptions
2025-08-19 18:53:52,987:INFO:Preloading libraries
2025-08-19 18:53:52,987:INFO:Set up data.
2025-08-19 18:53:52,991:INFO:Set up index.
2025-08-19 18:53:53,089:INFO:PyCaret ClassificationExperiment
2025-08-19 18:53:53,089:INFO:Logging name: clf-default-name
2025-08-19 18:53:53,089:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:53:53,089:INFO:version 3.3.2
2025-08-19 18:53:53,089:INFO:Initializing setup()
2025-08-19 18:53:53,089:INFO:self.USI: b8f4
2025-08-19 18:53:53,089:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:53:53,089:INFO:Checking environment
2025-08-19 18:53:53,089:INFO:python_version: 3.10.18
2025-08-19 18:53:53,090:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:53:53,090:INFO:machine: arm64
2025-08-19 18:53:53,090:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:53:53,090:INFO:Memory: svmem(total=17179869184, available=3173810176, percent=81.5, used=5709922304, free=415596544, active=2769272832, inactive=2741370880, wired=2940649472)
2025-08-19 18:53:53,090:INFO:Physical Core: 8
2025-08-19 18:53:53,090:INFO:Logical Core: 8
2025-08-19 18:53:53,090:INFO:Checking libraries
2025-08-19 18:53:53,090:INFO:System:
2025-08-19 18:53:53,090:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:53:53,090:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:53:53,090:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:53:53,090:INFO:PyCaret required dependencies:
2025-08-19 18:53:53,090:INFO:                 pip: 25.2
2025-08-19 18:53:53,090:INFO:          setuptools: 80.9.0
2025-08-19 18:53:53,090:INFO:             pycaret: 3.3.2
2025-08-19 18:53:53,090:INFO:             IPython: 8.37.0
2025-08-19 18:53:53,090:INFO:          ipywidgets: 8.1.7
2025-08-19 18:53:53,090:INFO:                tqdm: 4.67.1
2025-08-19 18:53:53,090:INFO:               numpy: 1.25.2
2025-08-19 18:53:53,090:INFO:              pandas: 2.1.4
2025-08-19 18:53:53,090:INFO:              jinja2: 3.1.6
2025-08-19 18:53:53,090:INFO:               scipy: 1.9.3
2025-08-19 18:53:53,090:INFO:              joblib: 1.3.2
2025-08-19 18:53:53,090:INFO:             sklearn: 1.4.2
2025-08-19 18:53:53,090:INFO:                pyod: 2.0.5
2025-08-19 18:53:53,090:INFO:            imblearn: 0.12.4
2025-08-19 18:53:53,090:INFO:   category_encoders: 2.7.0
2025-08-19 18:53:53,090:INFO:            lightgbm: 4.6.0
2025-08-19 18:53:53,090:INFO:               numba: 0.61.2
2025-08-19 18:53:53,090:INFO:            requests: 2.32.4
2025-08-19 18:53:53,090:INFO:          matplotlib: 3.7.2
2025-08-19 18:53:53,090:INFO:          scikitplot: 0.3.7
2025-08-19 18:53:53,090:INFO:         yellowbrick: 1.5
2025-08-19 18:53:53,090:INFO:              plotly: 5.24.1
2025-08-19 18:53:53,090:INFO:    plotly-resampler: Not installed
2025-08-19 18:53:53,090:INFO:             kaleido: 1.0.0
2025-08-19 18:53:53,090:INFO:           schemdraw: 0.15
2025-08-19 18:53:53,090:INFO:         statsmodels: 0.14.5
2025-08-19 18:53:53,090:INFO:              sktime: 0.26.0
2025-08-19 18:53:53,090:INFO:               tbats: 1.1.3
2025-08-19 18:53:53,090:INFO:            pmdarima: 2.0.4
2025-08-19 18:53:53,090:INFO:              psutil: 7.0.0
2025-08-19 18:53:53,090:INFO:          markupsafe: 3.0.2
2025-08-19 18:53:53,090:INFO:             pickle5: Not installed
2025-08-19 18:53:53,090:INFO:         cloudpickle: 3.1.1
2025-08-19 18:53:53,090:INFO:         deprecation: 2.1.0
2025-08-19 18:53:53,090:INFO:              xxhash: 3.5.0
2025-08-19 18:53:53,091:INFO:           wurlitzer: 3.1.1
2025-08-19 18:53:53,091:INFO:PyCaret optional dependencies:
2025-08-19 18:53:53,091:INFO:                shap: 0.48.0
2025-08-19 18:53:53,091:INFO:           interpret: Not installed
2025-08-19 18:53:53,091:INFO:                umap: Not installed
2025-08-19 18:53:53,091:INFO:     ydata_profiling: Not installed
2025-08-19 18:53:53,091:INFO:  explainerdashboard: Not installed
2025-08-19 18:53:53,091:INFO:             autoviz: Not installed
2025-08-19 18:53:53,091:INFO:           fairlearn: Not installed
2025-08-19 18:53:53,091:INFO:          deepchecks: Not installed
2025-08-19 18:53:53,091:INFO:             xgboost: 3.0.4
2025-08-19 18:53:53,091:INFO:            catboost: 1.2.8
2025-08-19 18:53:53,091:INFO:              kmodes: Not installed
2025-08-19 18:53:53,091:INFO:             mlxtend: 0.23.4
2025-08-19 18:53:53,091:INFO:       statsforecast: Not installed
2025-08-19 18:53:53,091:INFO:        tune_sklearn: Not installed
2025-08-19 18:53:53,091:INFO:                 ray: Not installed
2025-08-19 18:53:53,091:INFO:            hyperopt: Not installed
2025-08-19 18:53:53,091:INFO:              optuna: 4.4.0
2025-08-19 18:53:53,091:INFO:               skopt: Not installed
2025-08-19 18:53:53,091:INFO:              mlflow: Not installed
2025-08-19 18:53:53,091:INFO:              gradio: Not installed
2025-08-19 18:53:53,091:INFO:             fastapi: Not installed
2025-08-19 18:53:53,091:INFO:             uvicorn: Not installed
2025-08-19 18:53:53,091:INFO:              m2cgen: Not installed
2025-08-19 18:53:53,091:INFO:           evidently: Not installed
2025-08-19 18:53:53,091:INFO:               fugue: Not installed
2025-08-19 18:53:53,091:INFO:           streamlit: Not installed
2025-08-19 18:53:53,091:INFO:             prophet: Not installed
2025-08-19 18:53:53,091:INFO:None
2025-08-19 18:53:53,091:INFO:Set up data.
2025-08-19 18:53:53,095:INFO:Set up folding strategy.
2025-08-19 18:53:53,095:INFO:Set up train/test split.
2025-08-19 18:53:53,095:INFO:Set up data.
2025-08-19 18:53:53,098:INFO:Set up index.
2025-08-19 18:53:53,098:INFO:Assigning column types.
2025-08-19 18:53:53,100:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:53:53,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:53:53,120:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:53:53,132:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:53,133:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:53,153:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:53:53,153:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:53:53,165:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:53,166:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:53,167:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:53:53,187:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:53:53,199:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:53,200:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:53,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:53:53,232:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:53,233:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:53,234:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:53:53,267:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:53,268:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:53,300:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:53,301:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:53,302:INFO:Preparing preprocessing pipeline...
2025-08-19 18:53:53,303:INFO:Set up label encoding.
2025-08-19 18:53:53,303:INFO:Set up simple imputation.
2025-08-19 18:53:53,304:INFO:Set up encoding of categorical features.
2025-08-19 18:53:53,349:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:53:53,352:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:53:53,352:INFO:Creating final display dataframe.
2025-08-19 18:53:53,464:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              b8f4
2025-08-19 18:53:53,495:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:53,497:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:53,528:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:53:53,529:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:53:53,530:INFO:setup() successfully completed in 0.44s...............
2025-08-19 18:53:53,532:INFO:Initializing compare_models()
2025-08-19 18:53:53,532:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:53:53,532:INFO:Checking exceptions
2025-08-19 18:53:53,534:INFO:Preparing display monitor
2025-08-19 18:53:53,535:INFO:Initializing Logistic Regression
2025-08-19 18:53:53,535:INFO:Total runtime is 8.304913838704427e-07 minutes
2025-08-19 18:53:53,535:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:53,535:INFO:Initializing create_model()
2025-08-19 18:53:53,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:53,535:INFO:Checking exceptions
2025-08-19 18:53:53,535:INFO:Importing libraries
2025-08-19 18:53:53,535:INFO:Copying training dataset
2025-08-19 18:53:53,536:INFO:Defining folds
2025-08-19 18:53:53,536:INFO:Declaring metric variables
2025-08-19 18:53:53,536:INFO:Importing untrained model
2025-08-19 18:53:53,536:INFO:Logistic Regression Imported successfully
2025-08-19 18:53:53,537:INFO:Starting cross validation
2025-08-19 18:53:53,537:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:53,633:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:53,642:INFO:Calculating mean and std
2025-08-19 18:53:53,642:INFO:Creating metrics dataframe
2025-08-19 18:53:53,643:INFO:Uploading results into container
2025-08-19 18:53:53,643:INFO:Uploading model into container now
2025-08-19 18:53:53,643:INFO:_master_model_container: 1
2025-08-19 18:53:53,643:INFO:_display_container: 2
2025-08-19 18:53:53,643:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:53:53,643:INFO:create_model() successfully completed......................................
2025-08-19 18:53:53,712:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:53,713:INFO:Creating metrics dataframe
2025-08-19 18:53:53,714:INFO:Initializing K Neighbors Classifier
2025-08-19 18:53:53,714:INFO:Total runtime is 0.0029818137486775716 minutes
2025-08-19 18:53:53,714:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:53,714:INFO:Initializing create_model()
2025-08-19 18:53:53,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:53,714:INFO:Checking exceptions
2025-08-19 18:53:53,714:INFO:Importing libraries
2025-08-19 18:53:53,714:INFO:Copying training dataset
2025-08-19 18:53:53,716:INFO:Defining folds
2025-08-19 18:53:53,716:INFO:Declaring metric variables
2025-08-19 18:53:53,716:INFO:Importing untrained model
2025-08-19 18:53:53,716:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:53:53,716:INFO:Starting cross validation
2025-08-19 18:53:53,717:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:53,808:INFO:Calculating mean and std
2025-08-19 18:53:53,809:INFO:Creating metrics dataframe
2025-08-19 18:53:53,810:INFO:Uploading results into container
2025-08-19 18:53:53,810:INFO:Uploading model into container now
2025-08-19 18:53:53,810:INFO:_master_model_container: 2
2025-08-19 18:53:53,810:INFO:_display_container: 2
2025-08-19 18:53:53,810:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:53:53,810:INFO:create_model() successfully completed......................................
2025-08-19 18:53:53,879:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:53,879:INFO:Creating metrics dataframe
2025-08-19 18:53:53,881:INFO:Initializing Naive Bayes
2025-08-19 18:53:53,881:INFO:Total runtime is 0.005763196945190429 minutes
2025-08-19 18:53:53,881:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:53,881:INFO:Initializing create_model()
2025-08-19 18:53:53,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:53,881:INFO:Checking exceptions
2025-08-19 18:53:53,881:INFO:Importing libraries
2025-08-19 18:53:53,881:INFO:Copying training dataset
2025-08-19 18:53:53,883:INFO:Defining folds
2025-08-19 18:53:53,883:INFO:Declaring metric variables
2025-08-19 18:53:53,883:INFO:Importing untrained model
2025-08-19 18:53:53,883:INFO:Naive Bayes Imported successfully
2025-08-19 18:53:53,883:INFO:Starting cross validation
2025-08-19 18:53:53,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:54,152:INFO:Calculating mean and std
2025-08-19 18:53:54,153:INFO:Creating metrics dataframe
2025-08-19 18:53:54,169:INFO:Uploading results into container
2025-08-19 18:53:54,171:INFO:Uploading model into container now
2025-08-19 18:53:54,176:INFO:_master_model_container: 3
2025-08-19 18:53:54,176:INFO:_display_container: 2
2025-08-19 18:53:54,176:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:53:54,176:INFO:create_model() successfully completed......................................
2025-08-19 18:53:54,266:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:54,266:INFO:Creating metrics dataframe
2025-08-19 18:53:54,268:INFO:Initializing Decision Tree Classifier
2025-08-19 18:53:54,268:INFO:Total runtime is 0.012215081850687662 minutes
2025-08-19 18:53:54,268:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:54,268:INFO:Initializing create_model()
2025-08-19 18:53:54,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:54,268:INFO:Checking exceptions
2025-08-19 18:53:54,268:INFO:Importing libraries
2025-08-19 18:53:54,268:INFO:Copying training dataset
2025-08-19 18:53:54,270:INFO:Defining folds
2025-08-19 18:53:54,270:INFO:Declaring metric variables
2025-08-19 18:53:54,270:INFO:Importing untrained model
2025-08-19 18:53:54,270:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:53:54,270:INFO:Starting cross validation
2025-08-19 18:53:54,271:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:54,398:INFO:Calculating mean and std
2025-08-19 18:53:54,399:INFO:Creating metrics dataframe
2025-08-19 18:53:54,400:INFO:Uploading results into container
2025-08-19 18:53:54,400:INFO:Uploading model into container now
2025-08-19 18:53:54,400:INFO:_master_model_container: 4
2025-08-19 18:53:54,400:INFO:_display_container: 2
2025-08-19 18:53:54,401:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:53:54,401:INFO:create_model() successfully completed......................................
2025-08-19 18:53:54,470:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:54,470:INFO:Creating metrics dataframe
2025-08-19 18:53:54,471:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:53:54,471:INFO:Total runtime is 0.015602815151214599 minutes
2025-08-19 18:53:54,471:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:54,471:INFO:Initializing create_model()
2025-08-19 18:53:54,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:54,471:INFO:Checking exceptions
2025-08-19 18:53:54,471:INFO:Importing libraries
2025-08-19 18:53:54,471:INFO:Copying training dataset
2025-08-19 18:53:54,472:INFO:Defining folds
2025-08-19 18:53:54,473:INFO:Declaring metric variables
2025-08-19 18:53:54,473:INFO:Importing untrained model
2025-08-19 18:53:54,473:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:53:54,473:INFO:Starting cross validation
2025-08-19 18:53:54,473:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:54,566:INFO:Calculating mean and std
2025-08-19 18:53:54,566:INFO:Creating metrics dataframe
2025-08-19 18:53:54,567:INFO:Uploading results into container
2025-08-19 18:53:54,567:INFO:Uploading model into container now
2025-08-19 18:53:54,567:INFO:_master_model_container: 5
2025-08-19 18:53:54,567:INFO:_display_container: 2
2025-08-19 18:53:54,567:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:53:54,567:INFO:create_model() successfully completed......................................
2025-08-19 18:53:54,635:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:54,635:INFO:Creating metrics dataframe
2025-08-19 18:53:54,637:INFO:Initializing Ridge Classifier
2025-08-19 18:53:54,637:INFO:Total runtime is 0.018363634745279946 minutes
2025-08-19 18:53:54,637:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:54,637:INFO:Initializing create_model()
2025-08-19 18:53:54,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:54,637:INFO:Checking exceptions
2025-08-19 18:53:54,637:INFO:Importing libraries
2025-08-19 18:53:54,637:INFO:Copying training dataset
2025-08-19 18:53:54,638:INFO:Defining folds
2025-08-19 18:53:54,638:INFO:Declaring metric variables
2025-08-19 18:53:54,638:INFO:Importing untrained model
2025-08-19 18:53:54,638:INFO:Ridge Classifier Imported successfully
2025-08-19 18:53:54,639:INFO:Starting cross validation
2025-08-19 18:53:54,639:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:54,724:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:53:54,734:INFO:Calculating mean and std
2025-08-19 18:53:54,734:INFO:Creating metrics dataframe
2025-08-19 18:53:54,735:INFO:Uploading results into container
2025-08-19 18:53:54,735:INFO:Uploading model into container now
2025-08-19 18:53:54,735:INFO:_master_model_container: 6
2025-08-19 18:53:54,735:INFO:_display_container: 2
2025-08-19 18:53:54,735:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:53:54,735:INFO:create_model() successfully completed......................................
2025-08-19 18:53:54,805:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:54,805:INFO:Creating metrics dataframe
2025-08-19 18:53:54,806:INFO:Initializing Random Forest Classifier
2025-08-19 18:53:54,806:INFO:Total runtime is 0.02118723392486572 minutes
2025-08-19 18:53:54,806:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:54,806:INFO:Initializing create_model()
2025-08-19 18:53:54,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:54,806:INFO:Checking exceptions
2025-08-19 18:53:54,806:INFO:Importing libraries
2025-08-19 18:53:54,806:INFO:Copying training dataset
2025-08-19 18:53:54,808:INFO:Defining folds
2025-08-19 18:53:54,808:INFO:Declaring metric variables
2025-08-19 18:53:54,808:INFO:Importing untrained model
2025-08-19 18:53:54,809:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:53:54,809:INFO:Starting cross validation
2025-08-19 18:53:54,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:55,230:INFO:Calculating mean and std
2025-08-19 18:53:55,231:INFO:Creating metrics dataframe
2025-08-19 18:53:55,232:INFO:Uploading results into container
2025-08-19 18:53:55,232:INFO:Uploading model into container now
2025-08-19 18:53:55,232:INFO:_master_model_container: 7
2025-08-19 18:53:55,232:INFO:_display_container: 2
2025-08-19 18:53:55,232:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:53:55,232:INFO:create_model() successfully completed......................................
2025-08-19 18:53:55,303:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:55,303:INFO:Creating metrics dataframe
2025-08-19 18:53:55,304:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:53:55,304:INFO:Total runtime is 0.029489982128143306 minutes
2025-08-19 18:53:55,304:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:55,304:INFO:Initializing create_model()
2025-08-19 18:53:55,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:55,304:INFO:Checking exceptions
2025-08-19 18:53:55,304:INFO:Importing libraries
2025-08-19 18:53:55,304:INFO:Copying training dataset
2025-08-19 18:53:55,306:INFO:Defining folds
2025-08-19 18:53:55,306:INFO:Declaring metric variables
2025-08-19 18:53:55,306:INFO:Importing untrained model
2025-08-19 18:53:55,306:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:53:55,307:INFO:Starting cross validation
2025-08-19 18:53:55,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:55,334:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,343:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,345:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,352:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,355:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,359:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,410:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,408:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,428:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,430:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:53:55,456:INFO:Calculating mean and std
2025-08-19 18:53:55,456:INFO:Creating metrics dataframe
2025-08-19 18:53:55,457:INFO:Uploading results into container
2025-08-19 18:53:55,458:INFO:Uploading model into container now
2025-08-19 18:53:55,458:INFO:_master_model_container: 8
2025-08-19 18:53:55,458:INFO:_display_container: 2
2025-08-19 18:53:55,458:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:53:55,458:INFO:create_model() successfully completed......................................
2025-08-19 18:53:55,534:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:55,534:INFO:Creating metrics dataframe
2025-08-19 18:53:55,535:INFO:Initializing Ada Boost Classifier
2025-08-19 18:53:55,535:INFO:Total runtime is 0.033335367838541664 minutes
2025-08-19 18:53:55,535:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:55,535:INFO:Initializing create_model()
2025-08-19 18:53:55,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:55,535:INFO:Checking exceptions
2025-08-19 18:53:55,535:INFO:Importing libraries
2025-08-19 18:53:55,535:INFO:Copying training dataset
2025-08-19 18:53:55,536:INFO:Defining folds
2025-08-19 18:53:55,536:INFO:Declaring metric variables
2025-08-19 18:53:55,537:INFO:Importing untrained model
2025-08-19 18:53:55,537:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:53:55,537:INFO:Starting cross validation
2025-08-19 18:53:55,538:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:55,565:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,565:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,575:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,584:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,588:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,596:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,602:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,612:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,765:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,766:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:53:55,885:INFO:Calculating mean and std
2025-08-19 18:53:55,886:INFO:Creating metrics dataframe
2025-08-19 18:53:55,887:INFO:Uploading results into container
2025-08-19 18:53:55,888:INFO:Uploading model into container now
2025-08-19 18:53:55,888:INFO:_master_model_container: 9
2025-08-19 18:53:55,888:INFO:_display_container: 2
2025-08-19 18:53:55,888:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:53:55,888:INFO:create_model() successfully completed......................................
2025-08-19 18:53:55,960:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:55,960:INFO:Creating metrics dataframe
2025-08-19 18:53:55,961:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:53:55,961:INFO:Total runtime is 0.040435032049814856 minutes
2025-08-19 18:53:55,961:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:55,961:INFO:Initializing create_model()
2025-08-19 18:53:55,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:55,961:INFO:Checking exceptions
2025-08-19 18:53:55,961:INFO:Importing libraries
2025-08-19 18:53:55,961:INFO:Copying training dataset
2025-08-19 18:53:55,962:INFO:Defining folds
2025-08-19 18:53:55,962:INFO:Declaring metric variables
2025-08-19 18:53:55,962:INFO:Importing untrained model
2025-08-19 18:53:55,963:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:53:55,963:INFO:Starting cross validation
2025-08-19 18:53:55,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:57,495:INFO:Calculating mean and std
2025-08-19 18:53:57,495:INFO:Creating metrics dataframe
2025-08-19 18:53:57,497:INFO:Uploading results into container
2025-08-19 18:53:57,497:INFO:Uploading model into container now
2025-08-19 18:53:57,497:INFO:_master_model_container: 10
2025-08-19 18:53:57,497:INFO:_display_container: 2
2025-08-19 18:53:57,497:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:53:57,497:INFO:create_model() successfully completed......................................
2025-08-19 18:53:57,598:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:57,598:INFO:Creating metrics dataframe
2025-08-19 18:53:57,600:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:53:57,600:INFO:Total runtime is 0.06775029897689819 minutes
2025-08-19 18:53:57,600:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:57,600:INFO:Initializing create_model()
2025-08-19 18:53:57,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:57,600:INFO:Checking exceptions
2025-08-19 18:53:57,600:INFO:Importing libraries
2025-08-19 18:53:57,600:INFO:Copying training dataset
2025-08-19 18:53:57,602:INFO:Defining folds
2025-08-19 18:53:57,602:INFO:Declaring metric variables
2025-08-19 18:53:57,602:INFO:Importing untrained model
2025-08-19 18:53:57,602:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:53:57,603:INFO:Starting cross validation
2025-08-19 18:53:57,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:57,711:INFO:Calculating mean and std
2025-08-19 18:53:57,712:INFO:Creating metrics dataframe
2025-08-19 18:53:57,713:INFO:Uploading results into container
2025-08-19 18:53:57,713:INFO:Uploading model into container now
2025-08-19 18:53:57,713:INFO:_master_model_container: 11
2025-08-19 18:53:57,713:INFO:_display_container: 2
2025-08-19 18:53:57,713:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:53:57,713:INFO:create_model() successfully completed......................................
2025-08-19 18:53:57,788:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:57,788:INFO:Creating metrics dataframe
2025-08-19 18:53:57,790:INFO:Initializing Extra Trees Classifier
2025-08-19 18:53:57,790:INFO:Total runtime is 0.07091398239135742 minutes
2025-08-19 18:53:57,790:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:57,790:INFO:Initializing create_model()
2025-08-19 18:53:57,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:57,790:INFO:Checking exceptions
2025-08-19 18:53:57,790:INFO:Importing libraries
2025-08-19 18:53:57,790:INFO:Copying training dataset
2025-08-19 18:53:57,792:INFO:Defining folds
2025-08-19 18:53:57,792:INFO:Declaring metric variables
2025-08-19 18:53:57,792:INFO:Importing untrained model
2025-08-19 18:53:57,792:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:53:57,792:INFO:Starting cross validation
2025-08-19 18:53:57,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:58,273:INFO:Calculating mean and std
2025-08-19 18:53:58,273:INFO:Creating metrics dataframe
2025-08-19 18:53:58,275:INFO:Uploading results into container
2025-08-19 18:53:58,275:INFO:Uploading model into container now
2025-08-19 18:53:58,275:INFO:_master_model_container: 12
2025-08-19 18:53:58,275:INFO:_display_container: 2
2025-08-19 18:53:58,276:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:53:58,276:INFO:create_model() successfully completed......................................
2025-08-19 18:53:58,351:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:58,351:INFO:Creating metrics dataframe
2025-08-19 18:53:58,352:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:53:58,353:INFO:Total runtime is 0.08029574950536092 minutes
2025-08-19 18:53:58,353:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:58,353:INFO:Initializing create_model()
2025-08-19 18:53:58,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:58,353:INFO:Checking exceptions
2025-08-19 18:53:58,353:INFO:Importing libraries
2025-08-19 18:53:58,353:INFO:Copying training dataset
2025-08-19 18:53:58,354:INFO:Defining folds
2025-08-19 18:53:58,354:INFO:Declaring metric variables
2025-08-19 18:53:58,354:INFO:Importing untrained model
2025-08-19 18:53:58,355:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:53:58,355:INFO:Starting cross validation
2025-08-19 18:53:58,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:53:58,580:INFO:Calculating mean and std
2025-08-19 18:53:58,580:INFO:Creating metrics dataframe
2025-08-19 18:53:58,581:INFO:Uploading results into container
2025-08-19 18:53:58,581:INFO:Uploading model into container now
2025-08-19 18:53:58,581:INFO:_master_model_container: 13
2025-08-19 18:53:58,581:INFO:_display_container: 2
2025-08-19 18:53:58,582:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:53:58,582:INFO:create_model() successfully completed......................................
2025-08-19 18:53:58,655:INFO:SubProcess create_model() end ==================================
2025-08-19 18:53:58,655:INFO:Creating metrics dataframe
2025-08-19 18:53:58,656:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:53:58,656:INFO:Total runtime is 0.08536191383997599 minutes
2025-08-19 18:53:58,657:INFO:SubProcess create_model() called ==================================
2025-08-19 18:53:58,657:INFO:Initializing create_model()
2025-08-19 18:53:58,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:53:58,657:INFO:Checking exceptions
2025-08-19 18:53:58,657:INFO:Importing libraries
2025-08-19 18:53:58,657:INFO:Copying training dataset
2025-08-19 18:53:58,658:INFO:Defining folds
2025-08-19 18:53:58,658:INFO:Declaring metric variables
2025-08-19 18:53:58,658:INFO:Importing untrained model
2025-08-19 18:53:58,658:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:53:58,659:INFO:Starting cross validation
2025-08-19 18:53:58,659:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:03,070:INFO:Calculating mean and std
2025-08-19 18:54:03,073:INFO:Creating metrics dataframe
2025-08-19 18:54:03,082:INFO:Uploading results into container
2025-08-19 18:54:03,083:INFO:Uploading model into container now
2025-08-19 18:54:03,083:INFO:_master_model_container: 14
2025-08-19 18:54:03,083:INFO:_display_container: 2
2025-08-19 18:54:03,084:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:54:03,084:INFO:create_model() successfully completed......................................
2025-08-19 18:54:03,254:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:03,254:INFO:Creating metrics dataframe
2025-08-19 18:54:03,256:INFO:Initializing CatBoost Classifier
2025-08-19 18:54:03,256:INFO:Total runtime is 0.1620237628618876 minutes
2025-08-19 18:54:03,256:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:03,256:INFO:Initializing create_model()
2025-08-19 18:54:03,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:03,256:INFO:Checking exceptions
2025-08-19 18:54:03,257:INFO:Importing libraries
2025-08-19 18:54:03,257:INFO:Copying training dataset
2025-08-19 18:54:03,259:INFO:Defining folds
2025-08-19 18:54:03,259:INFO:Declaring metric variables
2025-08-19 18:54:03,259:INFO:Importing untrained model
2025-08-19 18:54:03,259:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:54:03,259:INFO:Starting cross validation
2025-08-19 18:54:03,260:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:11,554:INFO:Calculating mean and std
2025-08-19 18:54:11,555:INFO:Creating metrics dataframe
2025-08-19 18:54:11,559:INFO:Uploading results into container
2025-08-19 18:54:11,559:INFO:Uploading model into container now
2025-08-19 18:54:11,560:INFO:_master_model_container: 15
2025-08-19 18:54:11,560:INFO:_display_container: 2
2025-08-19 18:54:11,560:INFO:<catboost.core.CatBoostClassifier object at 0x307a460e0>
2025-08-19 18:54:11,560:INFO:create_model() successfully completed......................................
2025-08-19 18:54:11,668:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:11,668:INFO:Creating metrics dataframe
2025-08-19 18:54:11,669:INFO:Initializing Dummy Classifier
2025-08-19 18:54:11,669:INFO:Total runtime is 0.3022408008575439 minutes
2025-08-19 18:54:11,669:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:11,669:INFO:Initializing create_model()
2025-08-19 18:54:11,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099b05b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:11,670:INFO:Checking exceptions
2025-08-19 18:54:11,670:INFO:Importing libraries
2025-08-19 18:54:11,670:INFO:Copying training dataset
2025-08-19 18:54:11,671:INFO:Defining folds
2025-08-19 18:54:11,671:INFO:Declaring metric variables
2025-08-19 18:54:11,671:INFO:Importing untrained model
2025-08-19 18:54:11,671:INFO:Dummy Classifier Imported successfully
2025-08-19 18:54:11,671:INFO:Starting cross validation
2025-08-19 18:54:11,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:11,713:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,719:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,723:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,724:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,726:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,736:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,753:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,755:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,756:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,757:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:11,761:INFO:Calculating mean and std
2025-08-19 18:54:11,761:INFO:Creating metrics dataframe
2025-08-19 18:54:11,762:INFO:Uploading results into container
2025-08-19 18:54:11,762:INFO:Uploading model into container now
2025-08-19 18:54:11,762:INFO:_master_model_container: 16
2025-08-19 18:54:11,762:INFO:_display_container: 2
2025-08-19 18:54:11,762:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:54:11,762:INFO:create_model() successfully completed......................................
2025-08-19 18:54:11,830:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:11,830:INFO:Creating metrics dataframe
2025-08-19 18:54:11,831:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:54:11,832:INFO:Initializing create_model()
2025-08-19 18:54:11,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:11,833:INFO:Checking exceptions
2025-08-19 18:54:11,834:INFO:Importing libraries
2025-08-19 18:54:11,834:INFO:Copying training dataset
2025-08-19 18:54:11,836:INFO:Defining folds
2025-08-19 18:54:11,836:INFO:Declaring metric variables
2025-08-19 18:54:11,836:INFO:Importing untrained model
2025-08-19 18:54:11,836:INFO:Declaring custom model
2025-08-19 18:54:11,837:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:54:11,837:INFO:Cross validation set to False
2025-08-19 18:54:11,837:INFO:Fitting Model
2025-08-19 18:54:11,857:INFO:[LightGBM] [Info] Number of positive: 468, number of negative: 300
2025-08-19 18:54:11,858:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000312 seconds.
2025-08-19 18:54:11,858:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:54:11,858:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 18:54:11,858:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:54:11,858:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.609375 -> initscore=0.444686
2025-08-19 18:54:11,858:INFO:[LightGBM] [Info] Start training from score 0.444686
2025-08-19 18:54:11,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:11,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:12,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:12,257:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:54:12,257:INFO:create_model() successfully completed......................................
2025-08-19 18:54:12,325:INFO:_master_model_container: 16
2025-08-19 18:54:12,325:INFO:_display_container: 2
2025-08-19 18:54:12,325:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:54:12,325:INFO:compare_models() successfully completed......................................
2025-08-19 18:54:12,326:INFO:Initializing create_model()
2025-08-19 18:54:12,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:12,326:INFO:Checking exceptions
2025-08-19 18:54:12,327:INFO:Importing libraries
2025-08-19 18:54:12,327:INFO:Copying training dataset
2025-08-19 18:54:12,329:INFO:Defining folds
2025-08-19 18:54:12,329:INFO:Declaring metric variables
2025-08-19 18:54:12,329:INFO:Importing untrained model
2025-08-19 18:54:12,329:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:54:12,329:INFO:Starting cross validation
2025-08-19 18:54:12,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:15,147:INFO:Calculating mean and std
2025-08-19 18:54:15,148:INFO:Creating metrics dataframe
2025-08-19 18:54:15,149:INFO:Finalizing model
2025-08-19 18:54:15,171:INFO:[LightGBM] [Info] Number of positive: 468, number of negative: 300
2025-08-19 18:54:15,171:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000292 seconds.
2025-08-19 18:54:15,171:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:54:15,171:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 18:54:15,171:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:54:15,171:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.609375 -> initscore=0.444686
2025-08-19 18:54:15,171:INFO:[LightGBM] [Info] Start training from score 0.444686
2025-08-19 18:54:15,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,562:INFO:Uploading results into container
2025-08-19 18:54:15,563:INFO:Uploading model into container now
2025-08-19 18:54:15,563:INFO:_master_model_container: 17
2025-08-19 18:54:15,563:INFO:_display_container: 3
2025-08-19 18:54:15,563:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:54:15,563:INFO:create_model() successfully completed......................................
2025-08-19 18:54:15,636:INFO:Initializing finalize_model()
2025-08-19 18:54:15,636:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:15,637:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:54:15,638:INFO:Initializing create_model()
2025-08-19 18:54:15,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:15,638:INFO:Checking exceptions
2025-08-19 18:54:15,639:INFO:Importing libraries
2025-08-19 18:54:15,639:INFO:Copying training dataset
2025-08-19 18:54:15,639:INFO:Defining folds
2025-08-19 18:54:15,639:INFO:Declaring metric variables
2025-08-19 18:54:15,639:INFO:Importing untrained model
2025-08-19 18:54:15,639:INFO:Declaring custom model
2025-08-19 18:54:15,640:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:54:15,640:INFO:Cross validation set to False
2025-08-19 18:54:15,640:INFO:Fitting Model
2025-08-19 18:54:15,660:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:54:15,660:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000315 seconds.
2025-08-19 18:54:15,660:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:54:15,660:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:54:15,661:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:54:15,661:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:54:15,661:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:54:15,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,668:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:15,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:54:16,083:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:54:16,083:INFO:create_model() successfully completed......................................
2025-08-19 18:54:16,148:INFO:_master_model_container: 17
2025-08-19 18:54:16,148:INFO:_display_container: 3
2025-08-19 18:54:16,152:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:54:16,153:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:16,222:INFO:Initializing predict_model()
2025-08-19 18:54:16,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:16,222:INFO:Checking exceptions
2025-08-19 18:54:16,222:INFO:Preloading libraries
2025-08-19 18:54:16,223:INFO:Set up data.
2025-08-19 18:54:16,226:INFO:Set up index.
2025-08-19 18:54:16,308:INFO:Initializing create_model()
2025-08-19 18:54:16,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:16,309:INFO:Checking exceptions
2025-08-19 18:54:16,309:INFO:Importing libraries
2025-08-19 18:54:16,309:INFO:Copying training dataset
2025-08-19 18:54:16,311:INFO:Defining folds
2025-08-19 18:54:16,311:INFO:Declaring metric variables
2025-08-19 18:54:16,311:INFO:Importing untrained model
2025-08-19 18:54:16,311:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:54:16,311:INFO:Starting cross validation
2025-08-19 18:54:16,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:23,603:INFO:Calculating mean and std
2025-08-19 18:54:23,604:INFO:Creating metrics dataframe
2025-08-19 18:54:23,605:INFO:Finalizing model
2025-08-19 18:54:24,810:INFO:Uploading results into container
2025-08-19 18:54:24,811:INFO:Uploading model into container now
2025-08-19 18:54:24,811:INFO:_master_model_container: 18
2025-08-19 18:54:24,811:INFO:_display_container: 5
2025-08-19 18:54:24,811:INFO:<catboost.core.CatBoostClassifier object at 0x306641780>
2025-08-19 18:54:24,811:INFO:create_model() successfully completed......................................
2025-08-19 18:54:24,887:INFO:Initializing finalize_model()
2025-08-19 18:54:24,888:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=<catboost.core.CatBoostClassifier object at 0x306641780>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:24,888:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x306641780>
2025-08-19 18:54:24,889:INFO:Initializing create_model()
2025-08-19 18:54:24,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=<catboost.core.CatBoostClassifier object at 0x306641780>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:24,889:INFO:Checking exceptions
2025-08-19 18:54:24,889:INFO:Importing libraries
2025-08-19 18:54:24,889:INFO:Copying training dataset
2025-08-19 18:54:24,890:INFO:Defining folds
2025-08-19 18:54:24,890:INFO:Declaring metric variables
2025-08-19 18:54:24,890:INFO:Importing untrained model
2025-08-19 18:54:24,890:INFO:Declaring custom model
2025-08-19 18:54:24,890:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:54:24,890:INFO:Cross validation set to False
2025-08-19 18:54:24,890:INFO:Fitting Model
2025-08-19 18:54:26,101:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307f3cbb0>)],
         verbose=False)
2025-08-19 18:54:26,101:INFO:create_model() successfully completed......................................
2025-08-19 18:54:26,167:INFO:_master_model_container: 18
2025-08-19 18:54:26,167:INFO:_display_container: 5
2025-08-19 18:54:26,171:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307f3cbb0>)],
         verbose=False)
2025-08-19 18:54:26,171:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:26,239:INFO:Initializing predict_model()
2025-08-19 18:54:26,239:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307f3cbb0>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:26,239:INFO:Checking exceptions
2025-08-19 18:54:26,239:INFO:Preloading libraries
2025-08-19 18:54:26,239:INFO:Set up data.
2025-08-19 18:54:26,242:INFO:Set up index.
2025-08-19 18:54:26,322:INFO:Initializing create_model()
2025-08-19 18:54:26,322:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:26,322:INFO:Checking exceptions
2025-08-19 18:54:26,323:INFO:Importing libraries
2025-08-19 18:54:26,323:INFO:Copying training dataset
2025-08-19 18:54:26,324:INFO:Defining folds
2025-08-19 18:54:26,324:INFO:Declaring metric variables
2025-08-19 18:54:26,325:INFO:Importing untrained model
2025-08-19 18:54:26,325:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:54:26,325:INFO:Starting cross validation
2025-08-19 18:54:26,325:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:27,320:INFO:Calculating mean and std
2025-08-19 18:54:27,320:INFO:Creating metrics dataframe
2025-08-19 18:54:27,321:INFO:Finalizing model
2025-08-19 18:54:27,770:INFO:Uploading results into container
2025-08-19 18:54:27,770:INFO:Uploading model into container now
2025-08-19 18:54:27,770:INFO:_master_model_container: 19
2025-08-19 18:54:27,770:INFO:_display_container: 7
2025-08-19 18:54:27,770:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:54:27,770:INFO:create_model() successfully completed......................................
2025-08-19 18:54:27,837:INFO:Initializing finalize_model()
2025-08-19 18:54:27,837:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:27,837:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:54:27,838:INFO:Initializing create_model()
2025-08-19 18:54:27,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:27,838:INFO:Checking exceptions
2025-08-19 18:54:27,839:INFO:Importing libraries
2025-08-19 18:54:27,839:INFO:Copying training dataset
2025-08-19 18:54:27,839:INFO:Defining folds
2025-08-19 18:54:27,839:INFO:Declaring metric variables
2025-08-19 18:54:27,839:INFO:Importing untrained model
2025-08-19 18:54:27,839:INFO:Declaring custom model
2025-08-19 18:54:27,839:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:54:27,840:INFO:Cross validation set to False
2025-08-19 18:54:27,840:INFO:Fitting Model
2025-08-19 18:54:28,443:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:54:28,443:INFO:create_model() successfully completed......................................
2025-08-19 18:54:28,512:INFO:_master_model_container: 19
2025-08-19 18:54:28,512:INFO:_display_container: 7
2025-08-19 18:54:28,516:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:54:28,516:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:28,589:INFO:Initializing predict_model()
2025-08-19 18:54:28,589:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:28,589:INFO:Checking exceptions
2025-08-19 18:54:28,589:INFO:Preloading libraries
2025-08-19 18:54:28,589:INFO:Set up data.
2025-08-19 18:54:28,592:INFO:Set up index.
2025-08-19 18:54:28,679:INFO:Initializing create_model()
2025-08-19 18:54:28,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:28,679:INFO:Checking exceptions
2025-08-19 18:54:28,680:INFO:Importing libraries
2025-08-19 18:54:28,680:INFO:Copying training dataset
2025-08-19 18:54:28,682:INFO:Defining folds
2025-08-19 18:54:28,682:INFO:Declaring metric variables
2025-08-19 18:54:28,682:INFO:Importing untrained model
2025-08-19 18:54:28,682:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:54:28,682:INFO:Starting cross validation
2025-08-19 18:54:28,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:29,128:INFO:Calculating mean and std
2025-08-19 18:54:29,128:INFO:Creating metrics dataframe
2025-08-19 18:54:29,129:INFO:Finalizing model
2025-08-19 18:54:29,235:INFO:Uploading results into container
2025-08-19 18:54:29,236:INFO:Uploading model into container now
2025-08-19 18:54:29,236:INFO:_master_model_container: 20
2025-08-19 18:54:29,236:INFO:_display_container: 9
2025-08-19 18:54:29,236:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:54:29,236:INFO:create_model() successfully completed......................................
2025-08-19 18:54:29,313:INFO:Initializing finalize_model()
2025-08-19 18:54:29,314:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:29,314:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:54:29,315:INFO:Initializing create_model()
2025-08-19 18:54:29,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:29,315:INFO:Checking exceptions
2025-08-19 18:54:29,316:INFO:Importing libraries
2025-08-19 18:54:29,316:INFO:Copying training dataset
2025-08-19 18:54:29,316:INFO:Defining folds
2025-08-19 18:54:29,316:INFO:Declaring metric variables
2025-08-19 18:54:29,316:INFO:Importing untrained model
2025-08-19 18:54:29,316:INFO:Declaring custom model
2025-08-19 18:54:29,317:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:54:29,317:INFO:Cross validation set to False
2025-08-19 18:54:29,317:INFO:Fitting Model
2025-08-19 18:54:29,431:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:54:29,431:INFO:create_model() successfully completed......................................
2025-08-19 18:54:29,502:INFO:_master_model_container: 20
2025-08-19 18:54:29,502:INFO:_display_container: 9
2025-08-19 18:54:29,506:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:54:29,506:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:29,579:INFO:Initializing predict_model()
2025-08-19 18:54:29,579:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:29,579:INFO:Checking exceptions
2025-08-19 18:54:29,579:INFO:Preloading libraries
2025-08-19 18:54:29,580:INFO:Set up data.
2025-08-19 18:54:29,583:INFO:Set up index.
2025-08-19 18:54:29,696:INFO:Initializing create_model()
2025-08-19 18:54:29,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:29,696:INFO:Checking exceptions
2025-08-19 18:54:29,697:INFO:Importing libraries
2025-08-19 18:54:29,697:INFO:Copying training dataset
2025-08-19 18:54:29,698:INFO:Defining folds
2025-08-19 18:54:29,698:INFO:Declaring metric variables
2025-08-19 18:54:29,698:INFO:Importing untrained model
2025-08-19 18:54:29,699:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:54:29,699:INFO:Starting cross validation
2025-08-19 18:54:29,699:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:29,899:INFO:Calculating mean and std
2025-08-19 18:54:29,900:INFO:Creating metrics dataframe
2025-08-19 18:54:29,901:INFO:Finalizing model
2025-08-19 18:54:30,045:INFO:Uploading results into container
2025-08-19 18:54:30,045:INFO:Uploading model into container now
2025-08-19 18:54:30,045:INFO:_master_model_container: 21
2025-08-19 18:54:30,045:INFO:_display_container: 11
2025-08-19 18:54:30,046:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:54:30,046:INFO:create_model() successfully completed......................................
2025-08-19 18:54:30,114:INFO:Initializing finalize_model()
2025-08-19 18:54:30,114:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:30,115:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:54:30,116:INFO:Initializing create_model()
2025-08-19 18:54:30,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:30,116:INFO:Checking exceptions
2025-08-19 18:54:30,117:INFO:Importing libraries
2025-08-19 18:54:30,117:INFO:Copying training dataset
2025-08-19 18:54:30,117:INFO:Defining folds
2025-08-19 18:54:30,117:INFO:Declaring metric variables
2025-08-19 18:54:30,117:INFO:Importing untrained model
2025-08-19 18:54:30,117:INFO:Declaring custom model
2025-08-19 18:54:30,117:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:54:30,118:INFO:Cross validation set to False
2025-08-19 18:54:30,118:INFO:Fitting Model
2025-08-19 18:54:30,277:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:54:30,277:INFO:create_model() successfully completed......................................
2025-08-19 18:54:30,344:INFO:_master_model_container: 21
2025-08-19 18:54:30,344:INFO:_display_container: 11
2025-08-19 18:54:30,349:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:54:30,349:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:30,422:INFO:Initializing predict_model()
2025-08-19 18:54:30,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:30,422:INFO:Checking exceptions
2025-08-19 18:54:30,422:INFO:Preloading libraries
2025-08-19 18:54:30,423:INFO:Set up data.
2025-08-19 18:54:30,426:INFO:Set up index.
2025-08-19 18:54:30,524:INFO:Initializing create_model()
2025-08-19 18:54:30,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:30,524:INFO:Checking exceptions
2025-08-19 18:54:30,526:INFO:Importing libraries
2025-08-19 18:54:30,526:INFO:Copying training dataset
2025-08-19 18:54:30,528:INFO:Defining folds
2025-08-19 18:54:30,528:INFO:Declaring metric variables
2025-08-19 18:54:30,528:INFO:Importing untrained model
2025-08-19 18:54:30,528:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:54:30,528:INFO:Starting cross validation
2025-08-19 18:54:30,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:30,560:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,563:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,567:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,570:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,574:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,582:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,590:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,619:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,775:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,778:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:30,904:INFO:Calculating mean and std
2025-08-19 18:54:30,904:INFO:Creating metrics dataframe
2025-08-19 18:54:30,905:INFO:Finalizing model
2025-08-19 18:54:30,922:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:31,027:INFO:Uploading results into container
2025-08-19 18:54:31,027:INFO:Uploading model into container now
2025-08-19 18:54:31,027:INFO:_master_model_container: 22
2025-08-19 18:54:31,027:INFO:_display_container: 13
2025-08-19 18:54:31,028:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:54:31,028:INFO:create_model() successfully completed......................................
2025-08-19 18:54:31,099:INFO:Initializing finalize_model()
2025-08-19 18:54:31,099:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:31,099:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:54:31,100:INFO:Initializing create_model()
2025-08-19 18:54:31,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:31,100:INFO:Checking exceptions
2025-08-19 18:54:31,101:INFO:Importing libraries
2025-08-19 18:54:31,101:INFO:Copying training dataset
2025-08-19 18:54:31,101:INFO:Defining folds
2025-08-19 18:54:31,101:INFO:Declaring metric variables
2025-08-19 18:54:31,101:INFO:Importing untrained model
2025-08-19 18:54:31,101:INFO:Declaring custom model
2025-08-19 18:54:31,102:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:54:31,102:INFO:Cross validation set to False
2025-08-19 18:54:31,102:INFO:Fitting Model
2025-08-19 18:54:31,120:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:31,249:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:54:31,249:INFO:create_model() successfully completed......................................
2025-08-19 18:54:31,317:INFO:_master_model_container: 22
2025-08-19 18:54:31,317:INFO:_display_container: 13
2025-08-19 18:54:31,321:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:54:31,321:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:31,394:INFO:Initializing predict_model()
2025-08-19 18:54:31,394:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:31,394:INFO:Checking exceptions
2025-08-19 18:54:31,394:INFO:Preloading libraries
2025-08-19 18:54:31,395:INFO:Set up data.
2025-08-19 18:54:31,398:INFO:Set up index.
2025-08-19 18:54:31,490:INFO:Initializing create_model()
2025-08-19 18:54:31,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:31,490:INFO:Checking exceptions
2025-08-19 18:54:31,491:INFO:Importing libraries
2025-08-19 18:54:31,491:INFO:Copying training dataset
2025-08-19 18:54:31,493:INFO:Defining folds
2025-08-19 18:54:31,493:INFO:Declaring metric variables
2025-08-19 18:54:31,493:INFO:Importing untrained model
2025-08-19 18:54:31,493:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:54:31,493:INFO:Starting cross validation
2025-08-19 18:54:31,494:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:31,606:INFO:Calculating mean and std
2025-08-19 18:54:31,607:INFO:Creating metrics dataframe
2025-08-19 18:54:31,607:INFO:Finalizing model
2025-08-19 18:54:31,633:INFO:Uploading results into container
2025-08-19 18:54:31,633:INFO:Uploading model into container now
2025-08-19 18:54:31,633:INFO:_master_model_container: 23
2025-08-19 18:54:31,633:INFO:_display_container: 15
2025-08-19 18:54:31,633:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:54:31,633:INFO:create_model() successfully completed......................................
2025-08-19 18:54:31,701:INFO:Initializing finalize_model()
2025-08-19 18:54:31,701:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:31,701:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:54:31,703:INFO:Initializing create_model()
2025-08-19 18:54:31,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:31,703:INFO:Checking exceptions
2025-08-19 18:54:31,704:INFO:Importing libraries
2025-08-19 18:54:31,704:INFO:Copying training dataset
2025-08-19 18:54:31,704:INFO:Defining folds
2025-08-19 18:54:31,704:INFO:Declaring metric variables
2025-08-19 18:54:31,704:INFO:Importing untrained model
2025-08-19 18:54:31,704:INFO:Declaring custom model
2025-08-19 18:54:31,704:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:54:31,705:INFO:Cross validation set to False
2025-08-19 18:54:31,705:INFO:Fitting Model
2025-08-19 18:54:31,737:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:54:31,737:INFO:create_model() successfully completed......................................
2025-08-19 18:54:31,808:INFO:_master_model_container: 23
2025-08-19 18:54:31,808:INFO:_display_container: 15
2025-08-19 18:54:31,812:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:54:31,812:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:31,898:INFO:Initializing predict_model()
2025-08-19 18:54:31,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:31,898:INFO:Checking exceptions
2025-08-19 18:54:31,898:INFO:Preloading libraries
2025-08-19 18:54:31,898:INFO:Set up data.
2025-08-19 18:54:31,901:INFO:Set up index.
2025-08-19 18:54:31,995:INFO:Initializing create_model()
2025-08-19 18:54:31,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:31,995:INFO:Checking exceptions
2025-08-19 18:54:31,995:INFO:Importing libraries
2025-08-19 18:54:31,996:INFO:Copying training dataset
2025-08-19 18:54:31,997:INFO:Defining folds
2025-08-19 18:54:31,997:INFO:Declaring metric variables
2025-08-19 18:54:31,997:INFO:Importing untrained model
2025-08-19 18:54:31,997:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:54:31,997:INFO:Starting cross validation
2025-08-19 18:54:31,998:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:32,359:INFO:Calculating mean and std
2025-08-19 18:54:32,359:INFO:Creating metrics dataframe
2025-08-19 18:54:32,361:INFO:Finalizing model
2025-08-19 18:54:32,443:INFO:Uploading results into container
2025-08-19 18:54:32,443:INFO:Uploading model into container now
2025-08-19 18:54:32,443:INFO:_master_model_container: 24
2025-08-19 18:54:32,443:INFO:_display_container: 17
2025-08-19 18:54:32,444:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:54:32,444:INFO:create_model() successfully completed......................................
2025-08-19 18:54:32,512:INFO:Initializing finalize_model()
2025-08-19 18:54:32,512:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:32,512:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:54:32,513:INFO:Initializing create_model()
2025-08-19 18:54:32,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:32,514:INFO:Checking exceptions
2025-08-19 18:54:32,514:INFO:Importing libraries
2025-08-19 18:54:32,514:INFO:Copying training dataset
2025-08-19 18:54:32,514:INFO:Defining folds
2025-08-19 18:54:32,514:INFO:Declaring metric variables
2025-08-19 18:54:32,514:INFO:Importing untrained model
2025-08-19 18:54:32,514:INFO:Declaring custom model
2025-08-19 18:54:32,515:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:54:32,515:INFO:Cross validation set to False
2025-08-19 18:54:32,515:INFO:Fitting Model
2025-08-19 18:54:32,599:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:54:32,599:INFO:create_model() successfully completed......................................
2025-08-19 18:54:32,674:INFO:_master_model_container: 24
2025-08-19 18:54:32,674:INFO:_display_container: 17
2025-08-19 18:54:32,680:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:54:32,681:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:32,756:INFO:Initializing predict_model()
2025-08-19 18:54:32,756:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:32,756:INFO:Checking exceptions
2025-08-19 18:54:32,756:INFO:Preloading libraries
2025-08-19 18:54:32,756:INFO:Set up data.
2025-08-19 18:54:32,760:INFO:Set up index.
2025-08-19 18:54:32,878:INFO:Initializing create_model()
2025-08-19 18:54:32,878:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:32,878:INFO:Checking exceptions
2025-08-19 18:54:32,878:INFO:Importing libraries
2025-08-19 18:54:32,878:INFO:Copying training dataset
2025-08-19 18:54:32,880:INFO:Defining folds
2025-08-19 18:54:32,880:INFO:Declaring metric variables
2025-08-19 18:54:32,880:INFO:Importing untrained model
2025-08-19 18:54:32,880:INFO:Dummy Classifier Imported successfully
2025-08-19 18:54:32,880:INFO:Starting cross validation
2025-08-19 18:54:32,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:33,388:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,443:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,444:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,446:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,465:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,469:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,482:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,483:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,487:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,494:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,501:INFO:Calculating mean and std
2025-08-19 18:54:33,502:INFO:Creating metrics dataframe
2025-08-19 18:54:33,503:INFO:Finalizing model
2025-08-19 18:54:33,524:INFO:Uploading results into container
2025-08-19 18:54:33,524:INFO:Uploading model into container now
2025-08-19 18:54:33,524:INFO:_master_model_container: 25
2025-08-19 18:54:33,524:INFO:_display_container: 19
2025-08-19 18:54:33,524:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:54:33,524:INFO:create_model() successfully completed......................................
2025-08-19 18:54:33,602:INFO:Initializing finalize_model()
2025-08-19 18:54:33,602:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:33,602:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:54:33,604:INFO:Initializing create_model()
2025-08-19 18:54:33,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:33,604:INFO:Checking exceptions
2025-08-19 18:54:33,605:INFO:Importing libraries
2025-08-19 18:54:33,605:INFO:Copying training dataset
2025-08-19 18:54:33,605:INFO:Defining folds
2025-08-19 18:54:33,605:INFO:Declaring metric variables
2025-08-19 18:54:33,606:INFO:Importing untrained model
2025-08-19 18:54:33,606:INFO:Declaring custom model
2025-08-19 18:54:33,606:INFO:Dummy Classifier Imported successfully
2025-08-19 18:54:33,606:INFO:Cross validation set to False
2025-08-19 18:54:33,607:INFO:Fitting Model
2025-08-19 18:54:33,630:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:54:33,630:INFO:create_model() successfully completed......................................
2025-08-19 18:54:33,701:INFO:_master_model_container: 25
2025-08-19 18:54:33,701:INFO:_display_container: 19
2025-08-19 18:54:33,705:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:54:33,705:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:33,776:INFO:Initializing predict_model()
2025-08-19 18:54:33,776:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:33,776:INFO:Checking exceptions
2025-08-19 18:54:33,776:INFO:Preloading libraries
2025-08-19 18:54:33,776:INFO:Set up data.
2025-08-19 18:54:33,780:INFO:Set up index.
2025-08-19 18:54:33,793:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:33,865:INFO:Initializing create_model()
2025-08-19 18:54:33,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:33,865:INFO:Checking exceptions
2025-08-19 18:54:33,866:INFO:Importing libraries
2025-08-19 18:54:33,866:INFO:Copying training dataset
2025-08-19 18:54:33,868:INFO:Defining folds
2025-08-19 18:54:33,868:INFO:Declaring metric variables
2025-08-19 18:54:33,868:INFO:Importing untrained model
2025-08-19 18:54:33,868:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:54:33,868:INFO:Starting cross validation
2025-08-19 18:54:33,869:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:33,973:INFO:Calculating mean and std
2025-08-19 18:54:33,973:INFO:Creating metrics dataframe
2025-08-19 18:54:33,974:INFO:Finalizing model
2025-08-19 18:54:33,995:INFO:Uploading results into container
2025-08-19 18:54:33,995:INFO:Uploading model into container now
2025-08-19 18:54:33,995:INFO:_master_model_container: 26
2025-08-19 18:54:33,996:INFO:_display_container: 21
2025-08-19 18:54:33,996:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:54:33,996:INFO:create_model() successfully completed......................................
2025-08-19 18:54:34,064:INFO:Initializing finalize_model()
2025-08-19 18:54:34,064:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:34,065:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:54:34,066:INFO:Initializing create_model()
2025-08-19 18:54:34,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:34,066:INFO:Checking exceptions
2025-08-19 18:54:34,067:INFO:Importing libraries
2025-08-19 18:54:34,067:INFO:Copying training dataset
2025-08-19 18:54:34,067:INFO:Defining folds
2025-08-19 18:54:34,067:INFO:Declaring metric variables
2025-08-19 18:54:34,067:INFO:Importing untrained model
2025-08-19 18:54:34,067:INFO:Declaring custom model
2025-08-19 18:54:34,067:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:54:34,068:INFO:Cross validation set to False
2025-08-19 18:54:34,068:INFO:Fitting Model
2025-08-19 18:54:34,090:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:54:34,090:INFO:create_model() successfully completed......................................
2025-08-19 18:54:34,158:INFO:_master_model_container: 26
2025-08-19 18:54:34,158:INFO:_display_container: 21
2025-08-19 18:54:34,162:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:54:34,162:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:34,232:INFO:Initializing predict_model()
2025-08-19 18:54:34,232:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:34,232:INFO:Checking exceptions
2025-08-19 18:54:34,232:INFO:Preloading libraries
2025-08-19 18:54:34,233:INFO:Set up data.
2025-08-19 18:54:34,236:INFO:Set up index.
2025-08-19 18:54:34,333:INFO:Initializing create_model()
2025-08-19 18:54:34,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:34,333:INFO:Checking exceptions
2025-08-19 18:54:34,333:INFO:Importing libraries
2025-08-19 18:54:34,334:INFO:Copying training dataset
2025-08-19 18:54:34,335:INFO:Defining folds
2025-08-19 18:54:34,335:INFO:Declaring metric variables
2025-08-19 18:54:34,335:INFO:Importing untrained model
2025-08-19 18:54:34,335:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:54:34,335:INFO:Starting cross validation
2025-08-19 18:54:34,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:34,364:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,370:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,386:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,388:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,389:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,392:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,396:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,419:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,423:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,423:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,448:INFO:Calculating mean and std
2025-08-19 18:54:34,448:INFO:Creating metrics dataframe
2025-08-19 18:54:34,449:INFO:Finalizing model
2025-08-19 18:54:34,469:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,471:INFO:Uploading results into container
2025-08-19 18:54:34,472:INFO:Uploading model into container now
2025-08-19 18:54:34,472:INFO:_master_model_container: 27
2025-08-19 18:54:34,472:INFO:_display_container: 23
2025-08-19 18:54:34,473:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:54:34,473:INFO:create_model() successfully completed......................................
2025-08-19 18:54:34,570:INFO:Initializing finalize_model()
2025-08-19 18:54:34,570:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:34,570:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:54:34,574:INFO:Initializing create_model()
2025-08-19 18:54:34,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:34,574:INFO:Checking exceptions
2025-08-19 18:54:34,576:INFO:Importing libraries
2025-08-19 18:54:34,577:INFO:Copying training dataset
2025-08-19 18:54:34,577:INFO:Defining folds
2025-08-19 18:54:34,577:INFO:Declaring metric variables
2025-08-19 18:54:34,577:INFO:Importing untrained model
2025-08-19 18:54:34,577:INFO:Declaring custom model
2025-08-19 18:54:34,578:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:54:34,579:INFO:Cross validation set to False
2025-08-19 18:54:34,579:INFO:Fitting Model
2025-08-19 18:54:34,605:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:34,613:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:54:34,614:INFO:create_model() successfully completed......................................
2025-08-19 18:54:34,719:INFO:_master_model_container: 27
2025-08-19 18:54:34,719:INFO:_display_container: 23
2025-08-19 18:54:34,730:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:54:34,730:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:34,840:INFO:Initializing predict_model()
2025-08-19 18:54:34,840:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:34,840:INFO:Checking exceptions
2025-08-19 18:54:34,840:INFO:Preloading libraries
2025-08-19 18:54:34,840:INFO:Set up data.
2025-08-19 18:54:34,850:INFO:Set up index.
2025-08-19 18:54:34,949:INFO:Initializing create_model()
2025-08-19 18:54:34,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:34,949:INFO:Checking exceptions
2025-08-19 18:54:34,950:INFO:Importing libraries
2025-08-19 18:54:34,950:INFO:Copying training dataset
2025-08-19 18:54:34,952:INFO:Defining folds
2025-08-19 18:54:34,952:INFO:Declaring metric variables
2025-08-19 18:54:34,952:INFO:Importing untrained model
2025-08-19 18:54:34,952:INFO:Logistic Regression Imported successfully
2025-08-19 18:54:34,952:INFO:Starting cross validation
2025-08-19 18:54:34,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:35,056:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:35,059:INFO:Calculating mean and std
2025-08-19 18:54:35,059:INFO:Creating metrics dataframe
2025-08-19 18:54:35,060:INFO:Finalizing model
2025-08-19 18:54:35,094:INFO:Uploading results into container
2025-08-19 18:54:35,095:INFO:Uploading model into container now
2025-08-19 18:54:35,096:INFO:_master_model_container: 28
2025-08-19 18:54:35,096:INFO:_display_container: 25
2025-08-19 18:54:35,096:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:54:35,096:INFO:create_model() successfully completed......................................
2025-08-19 18:54:35,194:INFO:Initializing finalize_model()
2025-08-19 18:54:35,195:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:35,195:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:54:35,196:INFO:Initializing create_model()
2025-08-19 18:54:35,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:35,196:INFO:Checking exceptions
2025-08-19 18:54:35,197:INFO:Importing libraries
2025-08-19 18:54:35,197:INFO:Copying training dataset
2025-08-19 18:54:35,197:INFO:Defining folds
2025-08-19 18:54:35,197:INFO:Declaring metric variables
2025-08-19 18:54:35,197:INFO:Importing untrained model
2025-08-19 18:54:35,197:INFO:Declaring custom model
2025-08-19 18:54:35,197:INFO:Logistic Regression Imported successfully
2025-08-19 18:54:35,198:INFO:Cross validation set to False
2025-08-19 18:54:35,198:INFO:Fitting Model
2025-08-19 18:54:35,253:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:54:35,253:INFO:create_model() successfully completed......................................
2025-08-19 18:54:35,335:INFO:_master_model_container: 28
2025-08-19 18:54:35,336:INFO:_display_container: 25
2025-08-19 18:54:35,339:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:54:35,339:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:35,437:INFO:Initializing predict_model()
2025-08-19 18:54:35,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:35,437:INFO:Checking exceptions
2025-08-19 18:54:35,437:INFO:Preloading libraries
2025-08-19 18:54:35,438:INFO:Set up data.
2025-08-19 18:54:35,448:INFO:Set up index.
2025-08-19 18:54:35,477:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:35,562:INFO:Initializing create_model()
2025-08-19 18:54:35,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:35,562:INFO:Checking exceptions
2025-08-19 18:54:35,563:INFO:Importing libraries
2025-08-19 18:54:35,563:INFO:Copying training dataset
2025-08-19 18:54:35,565:INFO:Defining folds
2025-08-19 18:54:35,565:INFO:Declaring metric variables
2025-08-19 18:54:35,565:INFO:Importing untrained model
2025-08-19 18:54:35,565:INFO:Ridge Classifier Imported successfully
2025-08-19 18:54:35,565:INFO:Starting cross validation
2025-08-19 18:54:35,566:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:35,665:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:35,669:INFO:Calculating mean and std
2025-08-19 18:54:35,670:INFO:Creating metrics dataframe
2025-08-19 18:54:35,671:INFO:Finalizing model
2025-08-19 18:54:35,696:INFO:Uploading results into container
2025-08-19 18:54:35,697:INFO:Uploading model into container now
2025-08-19 18:54:35,697:INFO:_master_model_container: 29
2025-08-19 18:54:35,697:INFO:_display_container: 27
2025-08-19 18:54:35,698:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:54:35,698:INFO:create_model() successfully completed......................................
2025-08-19 18:54:35,794:INFO:Initializing finalize_model()
2025-08-19 18:54:35,794:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:35,795:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:54:35,796:INFO:Initializing create_model()
2025-08-19 18:54:35,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:35,796:INFO:Checking exceptions
2025-08-19 18:54:35,796:INFO:Importing libraries
2025-08-19 18:54:35,797:INFO:Copying training dataset
2025-08-19 18:54:35,797:INFO:Defining folds
2025-08-19 18:54:35,797:INFO:Declaring metric variables
2025-08-19 18:54:35,797:INFO:Importing untrained model
2025-08-19 18:54:35,797:INFO:Declaring custom model
2025-08-19 18:54:35,797:INFO:Ridge Classifier Imported successfully
2025-08-19 18:54:35,797:INFO:Cross validation set to False
2025-08-19 18:54:35,798:INFO:Fitting Model
2025-08-19 18:54:35,831:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:54:35,831:INFO:create_model() successfully completed......................................
2025-08-19 18:54:35,926:INFO:_master_model_container: 29
2025-08-19 18:54:35,926:INFO:_display_container: 27
2025-08-19 18:54:35,936:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:54:35,937:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:36,070:INFO:Initializing predict_model()
2025-08-19 18:54:36,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:36,070:INFO:Checking exceptions
2025-08-19 18:54:36,070:INFO:Preloading libraries
2025-08-19 18:54:36,071:INFO:Set up data.
2025-08-19 18:54:36,079:INFO:Set up index.
2025-08-19 18:54:36,098:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:36,174:INFO:Initializing create_model()
2025-08-19 18:54:36,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:36,174:INFO:Checking exceptions
2025-08-19 18:54:36,175:INFO:Importing libraries
2025-08-19 18:54:36,175:INFO:Copying training dataset
2025-08-19 18:54:36,177:INFO:Defining folds
2025-08-19 18:54:36,177:INFO:Declaring metric variables
2025-08-19 18:54:36,177:INFO:Importing untrained model
2025-08-19 18:54:36,177:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:54:36,177:INFO:Starting cross validation
2025-08-19 18:54:36,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:36,279:INFO:Calculating mean and std
2025-08-19 18:54:36,279:INFO:Creating metrics dataframe
2025-08-19 18:54:36,280:INFO:Finalizing model
2025-08-19 18:54:36,302:INFO:Uploading results into container
2025-08-19 18:54:36,302:INFO:Uploading model into container now
2025-08-19 18:54:36,303:INFO:_master_model_container: 30
2025-08-19 18:54:36,303:INFO:_display_container: 29
2025-08-19 18:54:36,304:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:54:36,304:INFO:create_model() successfully completed......................................
2025-08-19 18:54:36,385:INFO:Initializing finalize_model()
2025-08-19 18:54:36,385:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:36,386:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:54:36,387:INFO:Initializing create_model()
2025-08-19 18:54:36,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:36,387:INFO:Checking exceptions
2025-08-19 18:54:36,387:INFO:Importing libraries
2025-08-19 18:54:36,387:INFO:Copying training dataset
2025-08-19 18:54:36,388:INFO:Defining folds
2025-08-19 18:54:36,388:INFO:Declaring metric variables
2025-08-19 18:54:36,388:INFO:Importing untrained model
2025-08-19 18:54:36,388:INFO:Declaring custom model
2025-08-19 18:54:36,388:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:54:36,388:INFO:Cross validation set to False
2025-08-19 18:54:36,388:INFO:Fitting Model
2025-08-19 18:54:36,447:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:54:36,447:INFO:create_model() successfully completed......................................
2025-08-19 18:54:36,540:INFO:_master_model_container: 30
2025-08-19 18:54:36,540:INFO:_display_container: 29
2025-08-19 18:54:36,544:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:54:36,544:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:36,620:INFO:Initializing predict_model()
2025-08-19 18:54:36,620:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:36,620:INFO:Checking exceptions
2025-08-19 18:54:36,621:INFO:Preloading libraries
2025-08-19 18:54:36,621:INFO:Set up data.
2025-08-19 18:54:36,624:INFO:Set up index.
2025-08-19 18:54:36,644:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:36,728:INFO:Initializing create_model()
2025-08-19 18:54:36,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:36,728:INFO:Checking exceptions
2025-08-19 18:54:36,729:INFO:Importing libraries
2025-08-19 18:54:36,729:INFO:Copying training dataset
2025-08-19 18:54:36,731:INFO:Defining folds
2025-08-19 18:54:36,731:INFO:Declaring metric variables
2025-08-19 18:54:36,731:INFO:Importing untrained model
2025-08-19 18:54:36,731:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:54:36,731:INFO:Starting cross validation
2025-08-19 18:54:36,732:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:36,814:INFO:Calculating mean and std
2025-08-19 18:54:36,814:INFO:Creating metrics dataframe
2025-08-19 18:54:36,815:INFO:Finalizing model
2025-08-19 18:54:36,837:INFO:Uploading results into container
2025-08-19 18:54:36,838:INFO:Uploading model into container now
2025-08-19 18:54:36,838:INFO:_master_model_container: 31
2025-08-19 18:54:36,838:INFO:_display_container: 31
2025-08-19 18:54:36,838:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:54:36,838:INFO:create_model() successfully completed......................................
2025-08-19 18:54:36,906:INFO:Initializing finalize_model()
2025-08-19 18:54:36,906:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:36,906:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:54:36,907:INFO:Initializing create_model()
2025-08-19 18:54:36,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:36,907:INFO:Checking exceptions
2025-08-19 18:54:36,908:INFO:Importing libraries
2025-08-19 18:54:36,908:INFO:Copying training dataset
2025-08-19 18:54:36,908:INFO:Defining folds
2025-08-19 18:54:36,908:INFO:Declaring metric variables
2025-08-19 18:54:36,909:INFO:Importing untrained model
2025-08-19 18:54:36,909:INFO:Declaring custom model
2025-08-19 18:54:36,909:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:54:36,909:INFO:Cross validation set to False
2025-08-19 18:54:36,909:INFO:Fitting Model
2025-08-19 18:54:36,935:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:54:36,935:INFO:create_model() successfully completed......................................
2025-08-19 18:54:37,002:INFO:_master_model_container: 31
2025-08-19 18:54:37,002:INFO:_display_container: 31
2025-08-19 18:54:37,006:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:54:37,006:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:37,077:INFO:Initializing predict_model()
2025-08-19 18:54:37,078:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:37,078:INFO:Checking exceptions
2025-08-19 18:54:37,078:INFO:Preloading libraries
2025-08-19 18:54:37,078:INFO:Set up data.
2025-08-19 18:54:37,081:INFO:Set up index.
2025-08-19 18:54:37,163:INFO:Initializing create_model()
2025-08-19 18:54:37,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:37,163:INFO:Checking exceptions
2025-08-19 18:54:37,164:INFO:Importing libraries
2025-08-19 18:54:37,164:INFO:Copying training dataset
2025-08-19 18:54:37,165:INFO:Defining folds
2025-08-19 18:54:37,165:INFO:Declaring metric variables
2025-08-19 18:54:37,165:INFO:Importing untrained model
2025-08-19 18:54:37,165:INFO:Naive Bayes Imported successfully
2025-08-19 18:54:37,165:INFO:Starting cross validation
2025-08-19 18:54:37,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:37,269:INFO:Calculating mean and std
2025-08-19 18:54:37,269:INFO:Creating metrics dataframe
2025-08-19 18:54:37,270:INFO:Finalizing model
2025-08-19 18:54:37,288:INFO:Uploading results into container
2025-08-19 18:54:37,289:INFO:Uploading model into container now
2025-08-19 18:54:37,289:INFO:_master_model_container: 32
2025-08-19 18:54:37,289:INFO:_display_container: 33
2025-08-19 18:54:37,289:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:54:37,289:INFO:create_model() successfully completed......................................
2025-08-19 18:54:37,362:INFO:Initializing finalize_model()
2025-08-19 18:54:37,363:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:37,363:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:54:37,364:INFO:Initializing create_model()
2025-08-19 18:54:37,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:37,364:INFO:Checking exceptions
2025-08-19 18:54:37,365:INFO:Importing libraries
2025-08-19 18:54:37,365:INFO:Copying training dataset
2025-08-19 18:54:37,365:INFO:Defining folds
2025-08-19 18:54:37,365:INFO:Declaring metric variables
2025-08-19 18:54:37,365:INFO:Importing untrained model
2025-08-19 18:54:37,365:INFO:Declaring custom model
2025-08-19 18:54:37,365:INFO:Naive Bayes Imported successfully
2025-08-19 18:54:37,365:INFO:Cross validation set to False
2025-08-19 18:54:37,365:INFO:Fitting Model
2025-08-19 18:54:37,388:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:54:37,388:INFO:create_model() successfully completed......................................
2025-08-19 18:54:37,458:INFO:_master_model_container: 32
2025-08-19 18:54:37,459:INFO:_display_container: 33
2025-08-19 18:54:37,462:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:54:37,462:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:37,532:INFO:Initializing predict_model()
2025-08-19 18:54:37,532:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30996a1a0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 18:54:37,532:INFO:Checking exceptions
2025-08-19 18:54:37,533:INFO:Preloading libraries
2025-08-19 18:54:37,533:INFO:Set up data.
2025-08-19 18:54:37,536:INFO:Set up index.
2025-08-19 18:54:37,547:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:37,629:INFO:PyCaret ClassificationExperiment
2025-08-19 18:54:37,629:INFO:Logging name: clf-default-name
2025-08-19 18:54:37,629:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:54:37,629:INFO:version 3.3.2
2025-08-19 18:54:37,629:INFO:Initializing setup()
2025-08-19 18:54:37,629:INFO:self.USI: 5269
2025-08-19 18:54:37,629:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:54:37,629:INFO:Checking environment
2025-08-19 18:54:37,629:INFO:python_version: 3.10.18
2025-08-19 18:54:37,629:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:54:37,629:INFO:machine: arm64
2025-08-19 18:54:37,630:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:54:37,630:INFO:Memory: svmem(total=17179869184, available=3466428416, percent=79.8, used=6125502464, free=405487616, active=3144744960, inactive=3050864640, wired=2980757504)
2025-08-19 18:54:37,630:INFO:Physical Core: 8
2025-08-19 18:54:37,630:INFO:Logical Core: 8
2025-08-19 18:54:37,630:INFO:Checking libraries
2025-08-19 18:54:37,630:INFO:System:
2025-08-19 18:54:37,630:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:54:37,630:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:54:37,630:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:54:37,630:INFO:PyCaret required dependencies:
2025-08-19 18:54:37,630:INFO:                 pip: 25.2
2025-08-19 18:54:37,630:INFO:          setuptools: 80.9.0
2025-08-19 18:54:37,630:INFO:             pycaret: 3.3.2
2025-08-19 18:54:37,630:INFO:             IPython: 8.37.0
2025-08-19 18:54:37,630:INFO:          ipywidgets: 8.1.7
2025-08-19 18:54:37,630:INFO:                tqdm: 4.67.1
2025-08-19 18:54:37,630:INFO:               numpy: 1.25.2
2025-08-19 18:54:37,630:INFO:              pandas: 2.1.4
2025-08-19 18:54:37,630:INFO:              jinja2: 3.1.6
2025-08-19 18:54:37,630:INFO:               scipy: 1.9.3
2025-08-19 18:54:37,630:INFO:              joblib: 1.3.2
2025-08-19 18:54:37,630:INFO:             sklearn: 1.4.2
2025-08-19 18:54:37,630:INFO:                pyod: 2.0.5
2025-08-19 18:54:37,630:INFO:            imblearn: 0.12.4
2025-08-19 18:54:37,630:INFO:   category_encoders: 2.7.0
2025-08-19 18:54:37,630:INFO:            lightgbm: 4.6.0
2025-08-19 18:54:37,630:INFO:               numba: 0.61.2
2025-08-19 18:54:37,630:INFO:            requests: 2.32.4
2025-08-19 18:54:37,630:INFO:          matplotlib: 3.7.2
2025-08-19 18:54:37,630:INFO:          scikitplot: 0.3.7
2025-08-19 18:54:37,630:INFO:         yellowbrick: 1.5
2025-08-19 18:54:37,630:INFO:              plotly: 5.24.1
2025-08-19 18:54:37,630:INFO:    plotly-resampler: Not installed
2025-08-19 18:54:37,630:INFO:             kaleido: 1.0.0
2025-08-19 18:54:37,630:INFO:           schemdraw: 0.15
2025-08-19 18:54:37,630:INFO:         statsmodels: 0.14.5
2025-08-19 18:54:37,630:INFO:              sktime: 0.26.0
2025-08-19 18:54:37,630:INFO:               tbats: 1.1.3
2025-08-19 18:54:37,630:INFO:            pmdarima: 2.0.4
2025-08-19 18:54:37,630:INFO:              psutil: 7.0.0
2025-08-19 18:54:37,630:INFO:          markupsafe: 3.0.2
2025-08-19 18:54:37,630:INFO:             pickle5: Not installed
2025-08-19 18:54:37,630:INFO:         cloudpickle: 3.1.1
2025-08-19 18:54:37,630:INFO:         deprecation: 2.1.0
2025-08-19 18:54:37,630:INFO:              xxhash: 3.5.0
2025-08-19 18:54:37,630:INFO:           wurlitzer: 3.1.1
2025-08-19 18:54:37,630:INFO:PyCaret optional dependencies:
2025-08-19 18:54:37,630:INFO:                shap: 0.48.0
2025-08-19 18:54:37,630:INFO:           interpret: Not installed
2025-08-19 18:54:37,630:INFO:                umap: Not installed
2025-08-19 18:54:37,630:INFO:     ydata_profiling: Not installed
2025-08-19 18:54:37,630:INFO:  explainerdashboard: Not installed
2025-08-19 18:54:37,630:INFO:             autoviz: Not installed
2025-08-19 18:54:37,630:INFO:           fairlearn: Not installed
2025-08-19 18:54:37,630:INFO:          deepchecks: Not installed
2025-08-19 18:54:37,630:INFO:             xgboost: 3.0.4
2025-08-19 18:54:37,630:INFO:            catboost: 1.2.8
2025-08-19 18:54:37,630:INFO:              kmodes: Not installed
2025-08-19 18:54:37,630:INFO:             mlxtend: 0.23.4
2025-08-19 18:54:37,631:INFO:       statsforecast: Not installed
2025-08-19 18:54:37,631:INFO:        tune_sklearn: Not installed
2025-08-19 18:54:37,631:INFO:                 ray: Not installed
2025-08-19 18:54:37,631:INFO:            hyperopt: Not installed
2025-08-19 18:54:37,631:INFO:              optuna: 4.4.0
2025-08-19 18:54:37,631:INFO:               skopt: Not installed
2025-08-19 18:54:37,631:INFO:              mlflow: Not installed
2025-08-19 18:54:37,631:INFO:              gradio: Not installed
2025-08-19 18:54:37,631:INFO:             fastapi: Not installed
2025-08-19 18:54:37,631:INFO:             uvicorn: Not installed
2025-08-19 18:54:37,631:INFO:              m2cgen: Not installed
2025-08-19 18:54:37,631:INFO:           evidently: Not installed
2025-08-19 18:54:37,631:INFO:               fugue: Not installed
2025-08-19 18:54:37,631:INFO:           streamlit: Not installed
2025-08-19 18:54:37,631:INFO:             prophet: Not installed
2025-08-19 18:54:37,631:INFO:None
2025-08-19 18:54:37,631:INFO:Set up data.
2025-08-19 18:54:37,634:INFO:Set up folding strategy.
2025-08-19 18:54:37,634:INFO:Set up train/test split.
2025-08-19 18:54:37,634:INFO:Set up data.
2025-08-19 18:54:37,638:INFO:Set up index.
2025-08-19 18:54:37,638:INFO:Assigning column types.
2025-08-19 18:54:37,639:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:54:37,658:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:54:37,658:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:54:37,670:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:54:37,672:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:54:37,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:54:37,692:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:54:37,704:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:54:37,706:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:54:37,706:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:54:37,725:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:54:37,737:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:54:37,738:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:54:37,758:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:54:37,770:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:54:37,771:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:54:37,771:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:54:37,803:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:54:37,804:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:54:37,838:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:54:37,840:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:54:37,841:INFO:Preparing preprocessing pipeline...
2025-08-19 18:54:37,841:INFO:Set up label encoding.
2025-08-19 18:54:37,841:INFO:Set up simple imputation.
2025-08-19 18:54:37,842:INFO:Set up encoding of categorical features.
2025-08-19 18:54:37,884:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:54:37,888:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:54:37,888:INFO:Creating final display dataframe.
2025-08-19 18:54:38,005:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              5269
2025-08-19 18:54:38,038:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:54:38,039:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:54:38,072:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:54:38,074:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:54:38,075:INFO:setup() successfully completed in 0.45s...............
2025-08-19 18:54:38,076:INFO:Initializing compare_models()
2025-08-19 18:54:38,076:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:54:38,076:INFO:Checking exceptions
2025-08-19 18:54:38,078:INFO:Preparing display monitor
2025-08-19 18:54:38,079:INFO:Initializing Logistic Regression
2025-08-19 18:54:38,079:INFO:Total runtime is 8.821487426757813e-07 minutes
2025-08-19 18:54:38,079:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:38,079:INFO:Initializing create_model()
2025-08-19 18:54:38,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:38,079:INFO:Checking exceptions
2025-08-19 18:54:38,079:INFO:Importing libraries
2025-08-19 18:54:38,079:INFO:Copying training dataset
2025-08-19 18:54:38,081:INFO:Defining folds
2025-08-19 18:54:38,081:INFO:Declaring metric variables
2025-08-19 18:54:38,081:INFO:Importing untrained model
2025-08-19 18:54:38,081:INFO:Logistic Regression Imported successfully
2025-08-19 18:54:38,081:INFO:Starting cross validation
2025-08-19 18:54:38,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:38,218:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:38,225:INFO:Calculating mean and std
2025-08-19 18:54:38,225:INFO:Creating metrics dataframe
2025-08-19 18:54:38,226:INFO:Uploading results into container
2025-08-19 18:54:38,227:INFO:Uploading model into container now
2025-08-19 18:54:38,227:INFO:_master_model_container: 1
2025-08-19 18:54:38,227:INFO:_display_container: 2
2025-08-19 18:54:38,227:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:54:38,227:INFO:create_model() successfully completed......................................
2025-08-19 18:54:38,303:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:38,303:INFO:Creating metrics dataframe
2025-08-19 18:54:38,305:INFO:Initializing K Neighbors Classifier
2025-08-19 18:54:38,305:INFO:Total runtime is 0.0037589152654012047 minutes
2025-08-19 18:54:38,305:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:38,305:INFO:Initializing create_model()
2025-08-19 18:54:38,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:38,305:INFO:Checking exceptions
2025-08-19 18:54:38,305:INFO:Importing libraries
2025-08-19 18:54:38,305:INFO:Copying training dataset
2025-08-19 18:54:38,306:INFO:Defining folds
2025-08-19 18:54:38,306:INFO:Declaring metric variables
2025-08-19 18:54:38,306:INFO:Importing untrained model
2025-08-19 18:54:38,306:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:54:38,307:INFO:Starting cross validation
2025-08-19 18:54:38,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:38,401:INFO:Calculating mean and std
2025-08-19 18:54:38,401:INFO:Creating metrics dataframe
2025-08-19 18:54:38,402:INFO:Uploading results into container
2025-08-19 18:54:38,402:INFO:Uploading model into container now
2025-08-19 18:54:38,403:INFO:_master_model_container: 2
2025-08-19 18:54:38,403:INFO:_display_container: 2
2025-08-19 18:54:38,403:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:54:38,403:INFO:create_model() successfully completed......................................
2025-08-19 18:54:38,488:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:38,489:INFO:Creating metrics dataframe
2025-08-19 18:54:38,490:INFO:Initializing Naive Bayes
2025-08-19 18:54:38,490:INFO:Total runtime is 0.006846431891123455 minutes
2025-08-19 18:54:38,490:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:38,490:INFO:Initializing create_model()
2025-08-19 18:54:38,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:38,490:INFO:Checking exceptions
2025-08-19 18:54:38,490:INFO:Importing libraries
2025-08-19 18:54:38,490:INFO:Copying training dataset
2025-08-19 18:54:38,492:INFO:Defining folds
2025-08-19 18:54:38,492:INFO:Declaring metric variables
2025-08-19 18:54:38,492:INFO:Importing untrained model
2025-08-19 18:54:38,492:INFO:Naive Bayes Imported successfully
2025-08-19 18:54:38,492:INFO:Starting cross validation
2025-08-19 18:54:38,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:38,622:INFO:Calculating mean and std
2025-08-19 18:54:38,622:INFO:Creating metrics dataframe
2025-08-19 18:54:38,623:INFO:Uploading results into container
2025-08-19 18:54:38,623:INFO:Uploading model into container now
2025-08-19 18:54:38,623:INFO:_master_model_container: 3
2025-08-19 18:54:38,623:INFO:_display_container: 2
2025-08-19 18:54:38,623:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:54:38,623:INFO:create_model() successfully completed......................................
2025-08-19 18:54:38,701:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:38,701:INFO:Creating metrics dataframe
2025-08-19 18:54:38,702:INFO:Initializing Decision Tree Classifier
2025-08-19 18:54:38,702:INFO:Total runtime is 0.010386947790781658 minutes
2025-08-19 18:54:38,702:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:38,702:INFO:Initializing create_model()
2025-08-19 18:54:38,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:38,702:INFO:Checking exceptions
2025-08-19 18:54:38,702:INFO:Importing libraries
2025-08-19 18:54:38,703:INFO:Copying training dataset
2025-08-19 18:54:38,704:INFO:Defining folds
2025-08-19 18:54:38,704:INFO:Declaring metric variables
2025-08-19 18:54:38,704:INFO:Importing untrained model
2025-08-19 18:54:38,704:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:54:38,704:INFO:Starting cross validation
2025-08-19 18:54:38,705:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:38,808:INFO:Calculating mean and std
2025-08-19 18:54:38,808:INFO:Creating metrics dataframe
2025-08-19 18:54:38,809:INFO:Uploading results into container
2025-08-19 18:54:38,809:INFO:Uploading model into container now
2025-08-19 18:54:38,810:INFO:_master_model_container: 4
2025-08-19 18:54:38,810:INFO:_display_container: 2
2025-08-19 18:54:38,810:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:54:38,810:INFO:create_model() successfully completed......................................
2025-08-19 18:54:38,884:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:38,889:INFO:Creating metrics dataframe
2025-08-19 18:54:38,890:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:54:38,890:INFO:Total runtime is 0.013524349530537924 minutes
2025-08-19 18:54:38,891:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:38,891:INFO:Initializing create_model()
2025-08-19 18:54:38,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:38,891:INFO:Checking exceptions
2025-08-19 18:54:38,891:INFO:Importing libraries
2025-08-19 18:54:38,891:INFO:Copying training dataset
2025-08-19 18:54:38,892:INFO:Defining folds
2025-08-19 18:54:38,892:INFO:Declaring metric variables
2025-08-19 18:54:38,892:INFO:Importing untrained model
2025-08-19 18:54:38,892:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:54:38,892:INFO:Starting cross validation
2025-08-19 18:54:38,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:39,014:INFO:Calculating mean and std
2025-08-19 18:54:39,014:INFO:Creating metrics dataframe
2025-08-19 18:54:39,016:INFO:Uploading results into container
2025-08-19 18:54:39,016:INFO:Uploading model into container now
2025-08-19 18:54:39,017:INFO:_master_model_container: 5
2025-08-19 18:54:39,017:INFO:_display_container: 2
2025-08-19 18:54:39,017:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:54:39,017:INFO:create_model() successfully completed......................................
2025-08-19 18:54:39,089:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:39,089:INFO:Creating metrics dataframe
2025-08-19 18:54:39,090:INFO:Initializing Ridge Classifier
2025-08-19 18:54:39,090:INFO:Total runtime is 0.016847399870554607 minutes
2025-08-19 18:54:39,090:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:39,090:INFO:Initializing create_model()
2025-08-19 18:54:39,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:39,090:INFO:Checking exceptions
2025-08-19 18:54:39,090:INFO:Importing libraries
2025-08-19 18:54:39,090:INFO:Copying training dataset
2025-08-19 18:54:39,092:INFO:Defining folds
2025-08-19 18:54:39,092:INFO:Declaring metric variables
2025-08-19 18:54:39,092:INFO:Importing untrained model
2025-08-19 18:54:39,092:INFO:Ridge Classifier Imported successfully
2025-08-19 18:54:39,092:INFO:Starting cross validation
2025-08-19 18:54:39,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:39,185:INFO:Calculating mean and std
2025-08-19 18:54:39,186:INFO:Creating metrics dataframe
2025-08-19 18:54:39,186:INFO:Uploading results into container
2025-08-19 18:54:39,187:INFO:Uploading model into container now
2025-08-19 18:54:39,187:INFO:_master_model_container: 6
2025-08-19 18:54:39,187:INFO:_display_container: 2
2025-08-19 18:54:39,187:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:54:39,187:INFO:create_model() successfully completed......................................
2025-08-19 18:54:39,255:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:39,255:INFO:Creating metrics dataframe
2025-08-19 18:54:39,257:INFO:Initializing Random Forest Classifier
2025-08-19 18:54:39,257:INFO:Total runtime is 0.019625866413116456 minutes
2025-08-19 18:54:39,257:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:39,257:INFO:Initializing create_model()
2025-08-19 18:54:39,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:39,257:INFO:Checking exceptions
2025-08-19 18:54:39,257:INFO:Importing libraries
2025-08-19 18:54:39,257:INFO:Copying training dataset
2025-08-19 18:54:39,258:INFO:Defining folds
2025-08-19 18:54:39,258:INFO:Declaring metric variables
2025-08-19 18:54:39,259:INFO:Importing untrained model
2025-08-19 18:54:39,259:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:54:39,259:INFO:Starting cross validation
2025-08-19 18:54:39,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:39,716:INFO:Calculating mean and std
2025-08-19 18:54:39,716:INFO:Creating metrics dataframe
2025-08-19 18:54:39,717:INFO:Uploading results into container
2025-08-19 18:54:39,717:INFO:Uploading model into container now
2025-08-19 18:54:39,718:INFO:_master_model_container: 7
2025-08-19 18:54:39,718:INFO:_display_container: 2
2025-08-19 18:54:39,718:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:54:39,718:INFO:create_model() successfully completed......................................
2025-08-19 18:54:39,801:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:39,801:INFO:Creating metrics dataframe
2025-08-19 18:54:39,802:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:54:39,802:INFO:Total runtime is 0.02871591647466024 minutes
2025-08-19 18:54:39,802:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:39,802:INFO:Initializing create_model()
2025-08-19 18:54:39,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:39,802:INFO:Checking exceptions
2025-08-19 18:54:39,802:INFO:Importing libraries
2025-08-19 18:54:39,802:INFO:Copying training dataset
2025-08-19 18:54:39,804:INFO:Defining folds
2025-08-19 18:54:39,804:INFO:Declaring metric variables
2025-08-19 18:54:39,804:INFO:Importing untrained model
2025-08-19 18:54:39,804:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:54:39,804:INFO:Starting cross validation
2025-08-19 18:54:39,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:39,832:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,835:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,835:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,839:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,857:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,860:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,871:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,877:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,879:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,883:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:54:39,909:INFO:Calculating mean and std
2025-08-19 18:54:39,909:INFO:Creating metrics dataframe
2025-08-19 18:54:39,910:INFO:Uploading results into container
2025-08-19 18:54:39,910:INFO:Uploading model into container now
2025-08-19 18:54:39,910:INFO:_master_model_container: 8
2025-08-19 18:54:39,910:INFO:_display_container: 2
2025-08-19 18:54:39,911:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:54:39,911:INFO:create_model() successfully completed......................................
2025-08-19 18:54:39,987:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:39,987:INFO:Creating metrics dataframe
2025-08-19 18:54:39,988:INFO:Initializing Ada Boost Classifier
2025-08-19 18:54:39,988:INFO:Total runtime is 0.03182082970937093 minutes
2025-08-19 18:54:39,988:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:39,988:INFO:Initializing create_model()
2025-08-19 18:54:39,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:39,989:INFO:Checking exceptions
2025-08-19 18:54:39,989:INFO:Importing libraries
2025-08-19 18:54:39,989:INFO:Copying training dataset
2025-08-19 18:54:39,990:INFO:Defining folds
2025-08-19 18:54:39,990:INFO:Declaring metric variables
2025-08-19 18:54:39,990:INFO:Importing untrained model
2025-08-19 18:54:39,990:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:54:39,990:INFO:Starting cross validation
2025-08-19 18:54:39,991:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:40,016:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,017:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,021:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,023:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,024:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,041:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,065:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,078:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,252:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,257:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:54:40,390:INFO:Calculating mean and std
2025-08-19 18:54:40,391:INFO:Creating metrics dataframe
2025-08-19 18:54:40,392:INFO:Uploading results into container
2025-08-19 18:54:40,392:INFO:Uploading model into container now
2025-08-19 18:54:40,392:INFO:_master_model_container: 9
2025-08-19 18:54:40,392:INFO:_display_container: 2
2025-08-19 18:54:40,392:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:54:40,392:INFO:create_model() successfully completed......................................
2025-08-19 18:54:40,466:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:40,467:INFO:Creating metrics dataframe
2025-08-19 18:54:40,468:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:54:40,468:INFO:Total runtime is 0.03981552918752035 minutes
2025-08-19 18:54:40,468:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:40,468:INFO:Initializing create_model()
2025-08-19 18:54:40,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:40,468:INFO:Checking exceptions
2025-08-19 18:54:40,468:INFO:Importing libraries
2025-08-19 18:54:40,468:INFO:Copying training dataset
2025-08-19 18:54:40,470:INFO:Defining folds
2025-08-19 18:54:40,470:INFO:Declaring metric variables
2025-08-19 18:54:40,470:INFO:Importing untrained model
2025-08-19 18:54:40,470:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:54:40,470:INFO:Starting cross validation
2025-08-19 18:54:40,471:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:41,722:INFO:Calculating mean and std
2025-08-19 18:54:41,722:INFO:Creating metrics dataframe
2025-08-19 18:54:41,723:INFO:Uploading results into container
2025-08-19 18:54:41,724:INFO:Uploading model into container now
2025-08-19 18:54:41,724:INFO:_master_model_container: 10
2025-08-19 18:54:41,724:INFO:_display_container: 2
2025-08-19 18:54:41,725:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:54:41,725:INFO:create_model() successfully completed......................................
2025-08-19 18:54:41,798:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:41,798:INFO:Creating metrics dataframe
2025-08-19 18:54:41,799:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:54:41,799:INFO:Total runtime is 0.06200486421585083 minutes
2025-08-19 18:54:41,799:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:41,800:INFO:Initializing create_model()
2025-08-19 18:54:41,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:41,800:INFO:Checking exceptions
2025-08-19 18:54:41,800:INFO:Importing libraries
2025-08-19 18:54:41,800:INFO:Copying training dataset
2025-08-19 18:54:41,802:INFO:Defining folds
2025-08-19 18:54:41,802:INFO:Declaring metric variables
2025-08-19 18:54:41,802:INFO:Importing untrained model
2025-08-19 18:54:41,802:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:54:41,802:INFO:Starting cross validation
2025-08-19 18:54:41,803:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:42,226:INFO:Calculating mean and std
2025-08-19 18:54:42,226:INFO:Creating metrics dataframe
2025-08-19 18:54:42,227:INFO:Uploading results into container
2025-08-19 18:54:42,227:INFO:Uploading model into container now
2025-08-19 18:54:42,228:INFO:_master_model_container: 11
2025-08-19 18:54:42,228:INFO:_display_container: 2
2025-08-19 18:54:42,228:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:54:42,228:INFO:create_model() successfully completed......................................
2025-08-19 18:54:42,296:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:42,296:INFO:Creating metrics dataframe
2025-08-19 18:54:42,297:INFO:Initializing Extra Trees Classifier
2025-08-19 18:54:42,297:INFO:Total runtime is 0.0702996293703715 minutes
2025-08-19 18:54:42,297:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:42,297:INFO:Initializing create_model()
2025-08-19 18:54:42,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:42,297:INFO:Checking exceptions
2025-08-19 18:54:42,297:INFO:Importing libraries
2025-08-19 18:54:42,297:INFO:Copying training dataset
2025-08-19 18:54:42,299:INFO:Defining folds
2025-08-19 18:54:42,299:INFO:Declaring metric variables
2025-08-19 18:54:42,299:INFO:Importing untrained model
2025-08-19 18:54:42,299:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:54:42,299:INFO:Starting cross validation
2025-08-19 18:54:42,299:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:42,755:INFO:Calculating mean and std
2025-08-19 18:54:42,755:INFO:Creating metrics dataframe
2025-08-19 18:54:42,757:INFO:Uploading results into container
2025-08-19 18:54:42,757:INFO:Uploading model into container now
2025-08-19 18:54:42,758:INFO:_master_model_container: 12
2025-08-19 18:54:42,758:INFO:_display_container: 2
2025-08-19 18:54:42,758:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:54:42,758:INFO:create_model() successfully completed......................................
2025-08-19 18:54:42,841:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:42,842:INFO:Creating metrics dataframe
2025-08-19 18:54:42,843:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:54:42,843:INFO:Total runtime is 0.07939844528834025 minutes
2025-08-19 18:54:42,843:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:42,843:INFO:Initializing create_model()
2025-08-19 18:54:42,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:42,843:INFO:Checking exceptions
2025-08-19 18:54:42,843:INFO:Importing libraries
2025-08-19 18:54:42,843:INFO:Copying training dataset
2025-08-19 18:54:42,845:INFO:Defining folds
2025-08-19 18:54:42,845:INFO:Declaring metric variables
2025-08-19 18:54:42,845:INFO:Importing untrained model
2025-08-19 18:54:42,846:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:54:42,846:INFO:Starting cross validation
2025-08-19 18:54:42,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:43,030:INFO:Calculating mean and std
2025-08-19 18:54:43,031:INFO:Creating metrics dataframe
2025-08-19 18:54:43,032:INFO:Uploading results into container
2025-08-19 18:54:43,032:INFO:Uploading model into container now
2025-08-19 18:54:43,033:INFO:_master_model_container: 13
2025-08-19 18:54:43,033:INFO:_display_container: 2
2025-08-19 18:54:43,033:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:54:43,033:INFO:create_model() successfully completed......................................
2025-08-19 18:54:43,109:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:43,109:INFO:Creating metrics dataframe
2025-08-19 18:54:43,113:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:54:43,113:INFO:Total runtime is 0.08389626344045004 minutes
2025-08-19 18:54:43,113:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:43,113:INFO:Initializing create_model()
2025-08-19 18:54:43,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:43,113:INFO:Checking exceptions
2025-08-19 18:54:43,113:INFO:Importing libraries
2025-08-19 18:54:43,113:INFO:Copying training dataset
2025-08-19 18:54:43,115:INFO:Defining folds
2025-08-19 18:54:43,115:INFO:Declaring metric variables
2025-08-19 18:54:43,116:INFO:Importing untrained model
2025-08-19 18:54:43,116:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:54:43,116:INFO:Starting cross validation
2025-08-19 18:54:43,117:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:46,700:INFO:Calculating mean and std
2025-08-19 18:54:46,700:INFO:Creating metrics dataframe
2025-08-19 18:54:46,701:INFO:Uploading results into container
2025-08-19 18:54:46,702:INFO:Uploading model into container now
2025-08-19 18:54:46,702:INFO:_master_model_container: 14
2025-08-19 18:54:46,702:INFO:_display_container: 2
2025-08-19 18:54:46,702:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:54:46,702:INFO:create_model() successfully completed......................................
2025-08-19 18:54:46,771:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:46,771:INFO:Creating metrics dataframe
2025-08-19 18:54:46,773:INFO:Initializing CatBoost Classifier
2025-08-19 18:54:46,773:INFO:Total runtime is 0.1448954979578654 minutes
2025-08-19 18:54:46,773:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:46,773:INFO:Initializing create_model()
2025-08-19 18:54:46,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:46,773:INFO:Checking exceptions
2025-08-19 18:54:46,773:INFO:Importing libraries
2025-08-19 18:54:46,773:INFO:Copying training dataset
2025-08-19 18:54:46,775:INFO:Defining folds
2025-08-19 18:54:46,775:INFO:Declaring metric variables
2025-08-19 18:54:46,775:INFO:Importing untrained model
2025-08-19 18:54:46,775:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:54:46,775:INFO:Starting cross validation
2025-08-19 18:54:46,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:55,641:INFO:Calculating mean and std
2025-08-19 18:54:55,642:INFO:Creating metrics dataframe
2025-08-19 18:54:55,645:INFO:Uploading results into container
2025-08-19 18:54:55,646:INFO:Uploading model into container now
2025-08-19 18:54:55,646:INFO:_master_model_container: 15
2025-08-19 18:54:55,646:INFO:_display_container: 2
2025-08-19 18:54:55,646:INFO:<catboost.core.CatBoostClassifier object at 0x3203ef280>
2025-08-19 18:54:55,646:INFO:create_model() successfully completed......................................
2025-08-19 18:54:55,763:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:55,763:INFO:Creating metrics dataframe
2025-08-19 18:54:55,765:INFO:Initializing Dummy Classifier
2025-08-19 18:54:55,765:INFO:Total runtime is 0.2947590827941895 minutes
2025-08-19 18:54:55,765:INFO:SubProcess create_model() called ==================================
2025-08-19 18:54:55,765:INFO:Initializing create_model()
2025-08-19 18:54:55,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x307a61d20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:55,765:INFO:Checking exceptions
2025-08-19 18:54:55,765:INFO:Importing libraries
2025-08-19 18:54:55,765:INFO:Copying training dataset
2025-08-19 18:54:55,766:INFO:Defining folds
2025-08-19 18:54:55,766:INFO:Declaring metric variables
2025-08-19 18:54:55,766:INFO:Importing untrained model
2025-08-19 18:54:55,766:INFO:Dummy Classifier Imported successfully
2025-08-19 18:54:55,767:INFO:Starting cross validation
2025-08-19 18:54:55,767:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:55,808:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,818:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,824:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,828:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,829:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,830:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,840:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,842:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,851:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,855:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:54:55,866:INFO:Calculating mean and std
2025-08-19 18:54:55,866:INFO:Creating metrics dataframe
2025-08-19 18:54:55,867:INFO:Uploading results into container
2025-08-19 18:54:55,867:INFO:Uploading model into container now
2025-08-19 18:54:55,868:INFO:_master_model_container: 16
2025-08-19 18:54:55,868:INFO:_display_container: 2
2025-08-19 18:54:55,868:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:54:55,868:INFO:create_model() successfully completed......................................
2025-08-19 18:54:55,939:INFO:SubProcess create_model() end ==================================
2025-08-19 18:54:55,939:INFO:Creating metrics dataframe
2025-08-19 18:54:55,941:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:54:55,942:INFO:Initializing create_model()
2025-08-19 18:54:55,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:55,942:INFO:Checking exceptions
2025-08-19 18:54:55,943:INFO:Importing libraries
2025-08-19 18:54:55,943:INFO:Copying training dataset
2025-08-19 18:54:55,944:INFO:Defining folds
2025-08-19 18:54:55,944:INFO:Declaring metric variables
2025-08-19 18:54:55,944:INFO:Importing untrained model
2025-08-19 18:54:55,944:INFO:Declaring custom model
2025-08-19 18:54:55,945:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:54:55,945:INFO:Cross validation set to False
2025-08-19 18:54:55,945:INFO:Fitting Model
2025-08-19 18:54:56,408:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:54:56,408:INFO:create_model() successfully completed......................................
2025-08-19 18:54:56,480:INFO:_master_model_container: 16
2025-08-19 18:54:56,480:INFO:_display_container: 2
2025-08-19 18:54:56,480:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:54:56,480:INFO:compare_models() successfully completed......................................
2025-08-19 18:54:56,481:INFO:Initializing create_model()
2025-08-19 18:54:56,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:56,481:INFO:Checking exceptions
2025-08-19 18:54:56,482:INFO:Importing libraries
2025-08-19 18:54:56,482:INFO:Copying training dataset
2025-08-19 18:54:56,484:INFO:Defining folds
2025-08-19 18:54:56,484:INFO:Declaring metric variables
2025-08-19 18:54:56,484:INFO:Importing untrained model
2025-08-19 18:54:56,484:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:54:56,484:INFO:Starting cross validation
2025-08-19 18:54:56,485:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:57,480:INFO:Calculating mean and std
2025-08-19 18:54:57,480:INFO:Creating metrics dataframe
2025-08-19 18:54:57,481:INFO:Finalizing model
2025-08-19 18:54:57,927:INFO:Uploading results into container
2025-08-19 18:54:57,927:INFO:Uploading model into container now
2025-08-19 18:54:57,927:INFO:_master_model_container: 17
2025-08-19 18:54:57,927:INFO:_display_container: 3
2025-08-19 18:54:57,928:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:54:57,928:INFO:create_model() successfully completed......................................
2025-08-19 18:54:57,996:INFO:Initializing finalize_model()
2025-08-19 18:54:57,996:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:57,996:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:54:57,998:INFO:Initializing create_model()
2025-08-19 18:54:57,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:57,998:INFO:Checking exceptions
2025-08-19 18:54:57,999:INFO:Importing libraries
2025-08-19 18:54:57,999:INFO:Copying training dataset
2025-08-19 18:54:57,999:INFO:Defining folds
2025-08-19 18:54:57,999:INFO:Declaring metric variables
2025-08-19 18:54:57,999:INFO:Importing untrained model
2025-08-19 18:54:57,999:INFO:Declaring custom model
2025-08-19 18:54:57,999:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:54:58,000:INFO:Cross validation set to False
2025-08-19 18:54:58,000:INFO:Fitting Model
2025-08-19 18:54:58,955:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:54:58,955:INFO:create_model() successfully completed......................................
2025-08-19 18:54:59,023:INFO:_master_model_container: 17
2025-08-19 18:54:59,023:INFO:_display_container: 3
2025-08-19 18:54:59,028:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:54:59,028:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:59,100:INFO:Initializing predict_model()
2025-08-19 18:54:59,100:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:54:59,100:INFO:Checking exceptions
2025-08-19 18:54:59,100:INFO:Preloading libraries
2025-08-19 18:54:59,100:INFO:Set up data.
2025-08-19 18:54:59,104:INFO:Set up index.
2025-08-19 18:54:59,190:INFO:Initializing create_model()
2025-08-19 18:54:59,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:59,190:INFO:Checking exceptions
2025-08-19 18:54:59,191:INFO:Importing libraries
2025-08-19 18:54:59,191:INFO:Copying training dataset
2025-08-19 18:54:59,192:INFO:Defining folds
2025-08-19 18:54:59,192:INFO:Declaring metric variables
2025-08-19 18:54:59,192:INFO:Importing untrained model
2025-08-19 18:54:59,193:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:54:59,193:INFO:Starting cross validation
2025-08-19 18:54:59,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:54:59,360:INFO:Calculating mean and std
2025-08-19 18:54:59,361:INFO:Creating metrics dataframe
2025-08-19 18:54:59,362:INFO:Finalizing model
2025-08-19 18:54:59,511:INFO:Uploading results into container
2025-08-19 18:54:59,512:INFO:Uploading model into container now
2025-08-19 18:54:59,512:INFO:_master_model_container: 18
2025-08-19 18:54:59,512:INFO:_display_container: 5
2025-08-19 18:54:59,512:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:54:59,512:INFO:create_model() successfully completed......................................
2025-08-19 18:54:59,583:INFO:Initializing finalize_model()
2025-08-19 18:54:59,583:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:54:59,583:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:54:59,584:INFO:Initializing create_model()
2025-08-19 18:54:59,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:59,584:INFO:Checking exceptions
2025-08-19 18:54:59,585:INFO:Importing libraries
2025-08-19 18:54:59,585:INFO:Copying training dataset
2025-08-19 18:54:59,585:INFO:Defining folds
2025-08-19 18:54:59,585:INFO:Declaring metric variables
2025-08-19 18:54:59,585:INFO:Importing untrained model
2025-08-19 18:54:59,586:INFO:Declaring custom model
2025-08-19 18:54:59,587:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:54:59,587:INFO:Cross validation set to False
2025-08-19 18:54:59,587:INFO:Fitting Model
2025-08-19 18:54:59,730:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:54:59,730:INFO:create_model() successfully completed......................................
2025-08-19 18:54:59,802:INFO:_master_model_container: 18
2025-08-19 18:54:59,802:INFO:_display_container: 5
2025-08-19 18:54:59,807:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:54:59,807:INFO:finalize_model() successfully completed......................................
2025-08-19 18:54:59,883:INFO:Initializing predict_model()
2025-08-19 18:54:59,883:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:54:59,883:INFO:Checking exceptions
2025-08-19 18:54:59,884:INFO:Preloading libraries
2025-08-19 18:54:59,884:INFO:Set up data.
2025-08-19 18:54:59,887:INFO:Set up index.
2025-08-19 18:54:59,981:INFO:Initializing create_model()
2025-08-19 18:54:59,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:54:59,981:INFO:Checking exceptions
2025-08-19 18:54:59,981:INFO:Importing libraries
2025-08-19 18:54:59,982:INFO:Copying training dataset
2025-08-19 18:54:59,983:INFO:Defining folds
2025-08-19 18:54:59,983:INFO:Declaring metric variables
2025-08-19 18:54:59,983:INFO:Importing untrained model
2025-08-19 18:54:59,984:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:54:59,984:INFO:Starting cross validation
2025-08-19 18:54:59,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:09,250:INFO:Calculating mean and std
2025-08-19 18:55:09,251:INFO:Creating metrics dataframe
2025-08-19 18:55:09,253:INFO:Finalizing model
2025-08-19 18:55:10,525:INFO:Uploading results into container
2025-08-19 18:55:10,526:INFO:Uploading model into container now
2025-08-19 18:55:10,527:INFO:_master_model_container: 19
2025-08-19 18:55:10,527:INFO:_display_container: 7
2025-08-19 18:55:10,527:INFO:<catboost.core.CatBoostClassifier object at 0x307f6e590>
2025-08-19 18:55:10,527:INFO:create_model() successfully completed......................................
2025-08-19 18:55:10,696:INFO:Initializing finalize_model()
2025-08-19 18:55:10,696:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=<catboost.core.CatBoostClassifier object at 0x307f6e590>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:10,696:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x307f6e590>
2025-08-19 18:55:10,697:INFO:Initializing create_model()
2025-08-19 18:55:10,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=<catboost.core.CatBoostClassifier object at 0x307f6e590>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:10,697:INFO:Checking exceptions
2025-08-19 18:55:10,698:INFO:Importing libraries
2025-08-19 18:55:10,698:INFO:Copying training dataset
2025-08-19 18:55:10,698:INFO:Defining folds
2025-08-19 18:55:10,698:INFO:Declaring metric variables
2025-08-19 18:55:10,699:INFO:Importing untrained model
2025-08-19 18:55:10,699:INFO:Declaring custom model
2025-08-19 18:55:10,699:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:55:10,699:INFO:Cross validation set to False
2025-08-19 18:55:10,699:INFO:Fitting Model
2025-08-19 18:55:12,030:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x320591930>)],
         verbose=False)
2025-08-19 18:55:12,030:INFO:create_model() successfully completed......................................
2025-08-19 18:55:12,101:INFO:_master_model_container: 19
2025-08-19 18:55:12,101:INFO:_display_container: 7
2025-08-19 18:55:12,104:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x320591930>)],
         verbose=False)
2025-08-19 18:55:12,104:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:12,175:INFO:Initializing predict_model()
2025-08-19 18:55:12,175:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x320591930>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:12,175:INFO:Checking exceptions
2025-08-19 18:55:12,175:INFO:Preloading libraries
2025-08-19 18:55:12,175:INFO:Set up data.
2025-08-19 18:55:12,178:INFO:Set up index.
2025-08-19 18:55:12,264:INFO:Initializing create_model()
2025-08-19 18:55:12,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:12,264:INFO:Checking exceptions
2025-08-19 18:55:12,265:INFO:Importing libraries
2025-08-19 18:55:12,265:INFO:Copying training dataset
2025-08-19 18:55:12,266:INFO:Defining folds
2025-08-19 18:55:12,266:INFO:Declaring metric variables
2025-08-19 18:55:12,266:INFO:Importing untrained model
2025-08-19 18:55:12,267:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:55:12,267:INFO:Starting cross validation
2025-08-19 18:55:12,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:15,608:INFO:Calculating mean and std
2025-08-19 18:55:15,608:INFO:Creating metrics dataframe
2025-08-19 18:55:15,611:INFO:Finalizing model
2025-08-19 18:55:15,635:INFO:[LightGBM] [Info] Number of positive: 462, number of negative: 306
2025-08-19 18:55:15,635:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000325 seconds.
2025-08-19 18:55:15,635:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:55:15,635:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 18:55:15,636:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:55:15,636:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.601562 -> initscore=0.411980
2025-08-19 18:55:15,636:INFO:[LightGBM] [Info] Start training from score 0.411980
2025-08-19 18:55:15,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:15,640:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:15,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:15,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:15,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:15,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:15,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:15,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:16,054:INFO:Uploading results into container
2025-08-19 18:55:16,055:INFO:Uploading model into container now
2025-08-19 18:55:16,055:INFO:_master_model_container: 20
2025-08-19 18:55:16,055:INFO:_display_container: 9
2025-08-19 18:55:16,056:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:55:16,056:INFO:create_model() successfully completed......................................
2025-08-19 18:55:16,152:INFO:Initializing finalize_model()
2025-08-19 18:55:16,152:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:16,153:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:55:16,154:INFO:Initializing create_model()
2025-08-19 18:55:16,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:16,154:INFO:Checking exceptions
2025-08-19 18:55:16,155:INFO:Importing libraries
2025-08-19 18:55:16,155:INFO:Copying training dataset
2025-08-19 18:55:16,155:INFO:Defining folds
2025-08-19 18:55:16,155:INFO:Declaring metric variables
2025-08-19 18:55:16,155:INFO:Importing untrained model
2025-08-19 18:55:16,155:INFO:Declaring custom model
2025-08-19 18:55:16,156:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:55:16,156:INFO:Cross validation set to False
2025-08-19 18:55:16,156:INFO:Fitting Model
2025-08-19 18:55:16,175:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:55:16,175:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000366 seconds.
2025-08-19 18:55:16,175:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:55:16,175:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:55:16,175:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:55:16,176:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:55:16,176:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:55:16,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:16,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:16,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:16,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:16,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:16,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:55:16,636:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:55:16,636:INFO:create_model() successfully completed......................................
2025-08-19 18:55:16,704:INFO:_master_model_container: 20
2025-08-19 18:55:16,704:INFO:_display_container: 9
2025-08-19 18:55:16,709:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:55:16,709:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:16,784:INFO:Initializing predict_model()
2025-08-19 18:55:16,784:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:16,784:INFO:Checking exceptions
2025-08-19 18:55:16,784:INFO:Preloading libraries
2025-08-19 18:55:16,784:INFO:Set up data.
2025-08-19 18:55:16,787:INFO:Set up index.
2025-08-19 18:55:16,874:INFO:Initializing create_model()
2025-08-19 18:55:16,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:16,874:INFO:Checking exceptions
2025-08-19 18:55:16,875:INFO:Importing libraries
2025-08-19 18:55:16,875:INFO:Copying training dataset
2025-08-19 18:55:16,876:INFO:Defining folds
2025-08-19 18:55:16,876:INFO:Declaring metric variables
2025-08-19 18:55:16,876:INFO:Importing untrained model
2025-08-19 18:55:16,877:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:55:16,877:INFO:Starting cross validation
2025-08-19 18:55:16,877:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:16,981:INFO:Calculating mean and std
2025-08-19 18:55:16,981:INFO:Creating metrics dataframe
2025-08-19 18:55:16,982:INFO:Finalizing model
2025-08-19 18:55:17,006:INFO:Uploading results into container
2025-08-19 18:55:17,007:INFO:Uploading model into container now
2025-08-19 18:55:17,007:INFO:_master_model_container: 21
2025-08-19 18:55:17,007:INFO:_display_container: 11
2025-08-19 18:55:17,007:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:55:17,007:INFO:create_model() successfully completed......................................
2025-08-19 18:55:17,075:INFO:Initializing finalize_model()
2025-08-19 18:55:17,075:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:17,075:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:55:17,077:INFO:Initializing create_model()
2025-08-19 18:55:17,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:17,077:INFO:Checking exceptions
2025-08-19 18:55:17,078:INFO:Importing libraries
2025-08-19 18:55:17,078:INFO:Copying training dataset
2025-08-19 18:55:17,078:INFO:Defining folds
2025-08-19 18:55:17,078:INFO:Declaring metric variables
2025-08-19 18:55:17,078:INFO:Importing untrained model
2025-08-19 18:55:17,078:INFO:Declaring custom model
2025-08-19 18:55:17,078:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:55:17,079:INFO:Cross validation set to False
2025-08-19 18:55:17,079:INFO:Fitting Model
2025-08-19 18:55:17,110:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:55:17,110:INFO:create_model() successfully completed......................................
2025-08-19 18:55:17,179:INFO:_master_model_container: 21
2025-08-19 18:55:17,179:INFO:_display_container: 11
2025-08-19 18:55:17,183:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:55:17,183:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:17,256:INFO:Initializing predict_model()
2025-08-19 18:55:17,256:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:17,256:INFO:Checking exceptions
2025-08-19 18:55:17,256:INFO:Preloading libraries
2025-08-19 18:55:17,256:INFO:Set up data.
2025-08-19 18:55:17,259:INFO:Set up index.
2025-08-19 18:55:17,345:INFO:Initializing create_model()
2025-08-19 18:55:17,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:17,345:INFO:Checking exceptions
2025-08-19 18:55:17,346:INFO:Importing libraries
2025-08-19 18:55:17,346:INFO:Copying training dataset
2025-08-19 18:55:17,347:INFO:Defining folds
2025-08-19 18:55:17,347:INFO:Declaring metric variables
2025-08-19 18:55:17,347:INFO:Importing untrained model
2025-08-19 18:55:17,347:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:55:17,347:INFO:Starting cross validation
2025-08-19 18:55:17,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:17,826:INFO:Calculating mean and std
2025-08-19 18:55:17,827:INFO:Creating metrics dataframe
2025-08-19 18:55:17,828:INFO:Finalizing model
2025-08-19 18:55:18,000:INFO:Uploading results into container
2025-08-19 18:55:18,001:INFO:Uploading model into container now
2025-08-19 18:55:18,001:INFO:_master_model_container: 22
2025-08-19 18:55:18,001:INFO:_display_container: 13
2025-08-19 18:55:18,001:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:55:18,001:INFO:create_model() successfully completed......................................
2025-08-19 18:55:18,346:INFO:Initializing finalize_model()
2025-08-19 18:55:18,346:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:18,346:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:55:18,351:INFO:Initializing create_model()
2025-08-19 18:55:18,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:18,351:INFO:Checking exceptions
2025-08-19 18:55:18,356:INFO:Importing libraries
2025-08-19 18:55:18,356:INFO:Copying training dataset
2025-08-19 18:55:18,356:INFO:Defining folds
2025-08-19 18:55:18,356:INFO:Declaring metric variables
2025-08-19 18:55:18,356:INFO:Importing untrained model
2025-08-19 18:55:18,356:INFO:Declaring custom model
2025-08-19 18:55:18,357:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:55:18,359:INFO:Cross validation set to False
2025-08-19 18:55:18,360:INFO:Fitting Model
2025-08-19 18:55:18,500:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:55:18,500:INFO:create_model() successfully completed......................................
2025-08-19 18:55:18,569:INFO:_master_model_container: 22
2025-08-19 18:55:18,570:INFO:_display_container: 13
2025-08-19 18:55:18,573:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:55:18,574:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:18,646:INFO:Initializing predict_model()
2025-08-19 18:55:18,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:18,646:INFO:Checking exceptions
2025-08-19 18:55:18,646:INFO:Preloading libraries
2025-08-19 18:55:18,646:INFO:Set up data.
2025-08-19 18:55:18,650:INFO:Set up index.
2025-08-19 18:55:18,767:INFO:Initializing create_model()
2025-08-19 18:55:18,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:18,767:INFO:Checking exceptions
2025-08-19 18:55:18,768:INFO:Importing libraries
2025-08-19 18:55:18,768:INFO:Copying training dataset
2025-08-19 18:55:18,770:INFO:Defining folds
2025-08-19 18:55:18,770:INFO:Declaring metric variables
2025-08-19 18:55:18,770:INFO:Importing untrained model
2025-08-19 18:55:18,770:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:55:18,770:INFO:Starting cross validation
2025-08-19 18:55:18,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:18,804:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:18,806:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:18,807:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:18,815:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:18,815:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:18,831:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:18,838:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:18,838:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:19,064:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:19,067:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:19,199:INFO:Calculating mean and std
2025-08-19 18:55:19,200:INFO:Creating metrics dataframe
2025-08-19 18:55:19,201:INFO:Finalizing model
2025-08-19 18:55:19,219:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:19,321:INFO:Uploading results into container
2025-08-19 18:55:19,322:INFO:Uploading model into container now
2025-08-19 18:55:19,322:INFO:_master_model_container: 23
2025-08-19 18:55:19,322:INFO:_display_container: 15
2025-08-19 18:55:19,322:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:55:19,322:INFO:create_model() successfully completed......................................
2025-08-19 18:55:19,392:INFO:Initializing finalize_model()
2025-08-19 18:55:19,392:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:19,392:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:55:19,393:INFO:Initializing create_model()
2025-08-19 18:55:19,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:19,393:INFO:Checking exceptions
2025-08-19 18:55:19,394:INFO:Importing libraries
2025-08-19 18:55:19,394:INFO:Copying training dataset
2025-08-19 18:55:19,394:INFO:Defining folds
2025-08-19 18:55:19,394:INFO:Declaring metric variables
2025-08-19 18:55:19,394:INFO:Importing untrained model
2025-08-19 18:55:19,394:INFO:Declaring custom model
2025-08-19 18:55:19,394:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:55:19,395:INFO:Cross validation set to False
2025-08-19 18:55:19,395:INFO:Fitting Model
2025-08-19 18:55:19,413:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:19,539:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:55:19,539:INFO:create_model() successfully completed......................................
2025-08-19 18:55:19,607:INFO:_master_model_container: 23
2025-08-19 18:55:19,607:INFO:_display_container: 15
2025-08-19 18:55:19,611:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:55:19,611:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:19,680:INFO:Initializing predict_model()
2025-08-19 18:55:19,680:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:19,680:INFO:Checking exceptions
2025-08-19 18:55:19,680:INFO:Preloading libraries
2025-08-19 18:55:19,680:INFO:Set up data.
2025-08-19 18:55:19,683:INFO:Set up index.
2025-08-19 18:55:19,768:INFO:Initializing create_model()
2025-08-19 18:55:19,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:19,768:INFO:Checking exceptions
2025-08-19 18:55:19,768:INFO:Importing libraries
2025-08-19 18:55:19,769:INFO:Copying training dataset
2025-08-19 18:55:19,770:INFO:Defining folds
2025-08-19 18:55:19,770:INFO:Declaring metric variables
2025-08-19 18:55:19,770:INFO:Importing untrained model
2025-08-19 18:55:19,770:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:55:19,770:INFO:Starting cross validation
2025-08-19 18:55:19,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:20,104:INFO:Calculating mean and std
2025-08-19 18:55:20,104:INFO:Creating metrics dataframe
2025-08-19 18:55:20,105:INFO:Finalizing model
2025-08-19 18:55:20,191:INFO:Uploading results into container
2025-08-19 18:55:20,191:INFO:Uploading model into container now
2025-08-19 18:55:20,191:INFO:_master_model_container: 24
2025-08-19 18:55:20,191:INFO:_display_container: 17
2025-08-19 18:55:20,192:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:55:20,192:INFO:create_model() successfully completed......................................
2025-08-19 18:55:20,262:INFO:Initializing finalize_model()
2025-08-19 18:55:20,263:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:20,263:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:55:20,264:INFO:Initializing create_model()
2025-08-19 18:55:20,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:20,264:INFO:Checking exceptions
2025-08-19 18:55:20,265:INFO:Importing libraries
2025-08-19 18:55:20,265:INFO:Copying training dataset
2025-08-19 18:55:20,265:INFO:Defining folds
2025-08-19 18:55:20,265:INFO:Declaring metric variables
2025-08-19 18:55:20,265:INFO:Importing untrained model
2025-08-19 18:55:20,265:INFO:Declaring custom model
2025-08-19 18:55:20,266:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:55:20,266:INFO:Cross validation set to False
2025-08-19 18:55:20,266:INFO:Fitting Model
2025-08-19 18:55:20,375:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:55:20,375:INFO:create_model() successfully completed......................................
2025-08-19 18:55:20,449:INFO:_master_model_container: 24
2025-08-19 18:55:20,449:INFO:_display_container: 17
2025-08-19 18:55:20,453:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:55:20,453:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:20,536:INFO:Initializing predict_model()
2025-08-19 18:55:20,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:20,536:INFO:Checking exceptions
2025-08-19 18:55:20,536:INFO:Preloading libraries
2025-08-19 18:55:20,537:INFO:Set up data.
2025-08-19 18:55:20,540:INFO:Set up index.
2025-08-19 18:55:20,648:INFO:Initializing create_model()
2025-08-19 18:55:20,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:20,648:INFO:Checking exceptions
2025-08-19 18:55:20,649:INFO:Importing libraries
2025-08-19 18:55:20,649:INFO:Copying training dataset
2025-08-19 18:55:20,650:INFO:Defining folds
2025-08-19 18:55:20,650:INFO:Declaring metric variables
2025-08-19 18:55:20,651:INFO:Importing untrained model
2025-08-19 18:55:20,651:INFO:Dummy Classifier Imported successfully
2025-08-19 18:55:20,651:INFO:Starting cross validation
2025-08-19 18:55:20,651:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:20,686:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,689:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,692:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,705:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,709:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,710:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,717:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,719:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,729:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,729:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:20,744:INFO:Calculating mean and std
2025-08-19 18:55:20,744:INFO:Creating metrics dataframe
2025-08-19 18:55:20,745:INFO:Finalizing model
2025-08-19 18:55:20,763:INFO:Uploading results into container
2025-08-19 18:55:20,763:INFO:Uploading model into container now
2025-08-19 18:55:20,763:INFO:_master_model_container: 25
2025-08-19 18:55:20,764:INFO:_display_container: 19
2025-08-19 18:55:20,764:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:55:20,764:INFO:create_model() successfully completed......................................
2025-08-19 18:55:20,831:INFO:Initializing finalize_model()
2025-08-19 18:55:20,831:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:20,831:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:55:20,832:INFO:Initializing create_model()
2025-08-19 18:55:20,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:20,832:INFO:Checking exceptions
2025-08-19 18:55:20,833:INFO:Importing libraries
2025-08-19 18:55:20,833:INFO:Copying training dataset
2025-08-19 18:55:20,834:INFO:Defining folds
2025-08-19 18:55:20,834:INFO:Declaring metric variables
2025-08-19 18:55:20,834:INFO:Importing untrained model
2025-08-19 18:55:20,834:INFO:Declaring custom model
2025-08-19 18:55:20,834:INFO:Dummy Classifier Imported successfully
2025-08-19 18:55:20,835:INFO:Cross validation set to False
2025-08-19 18:55:20,835:INFO:Fitting Model
2025-08-19 18:55:20,856:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:55:20,856:INFO:create_model() successfully completed......................................
2025-08-19 18:55:20,924:INFO:_master_model_container: 25
2025-08-19 18:55:20,924:INFO:_display_container: 19
2025-08-19 18:55:20,927:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:55:20,927:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:20,998:INFO:Initializing predict_model()
2025-08-19 18:55:20,998:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:20,998:INFO:Checking exceptions
2025-08-19 18:55:20,998:INFO:Preloading libraries
2025-08-19 18:55:20,998:INFO:Set up data.
2025-08-19 18:55:21,002:INFO:Set up index.
2025-08-19 18:55:21,013:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:21,084:INFO:Initializing create_model()
2025-08-19 18:55:21,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:21,084:INFO:Checking exceptions
2025-08-19 18:55:21,085:INFO:Importing libraries
2025-08-19 18:55:21,085:INFO:Copying training dataset
2025-08-19 18:55:21,086:INFO:Defining folds
2025-08-19 18:55:21,086:INFO:Declaring metric variables
2025-08-19 18:55:21,086:INFO:Importing untrained model
2025-08-19 18:55:21,086:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:55:21,087:INFO:Starting cross validation
2025-08-19 18:55:21,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:21,114:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,115:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,121:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,123:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,135:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,135:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,136:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,138:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,155:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,157:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,181:INFO:Calculating mean and std
2025-08-19 18:55:21,181:INFO:Creating metrics dataframe
2025-08-19 18:55:21,182:INFO:Finalizing model
2025-08-19 18:55:21,199:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,202:INFO:Uploading results into container
2025-08-19 18:55:21,203:INFO:Uploading model into container now
2025-08-19 18:55:21,203:INFO:_master_model_container: 26
2025-08-19 18:55:21,203:INFO:_display_container: 21
2025-08-19 18:55:21,204:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:55:21,204:INFO:create_model() successfully completed......................................
2025-08-19 18:55:21,279:INFO:Initializing finalize_model()
2025-08-19 18:55:21,279:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:21,279:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:55:21,280:INFO:Initializing create_model()
2025-08-19 18:55:21,280:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:21,280:INFO:Checking exceptions
2025-08-19 18:55:21,281:INFO:Importing libraries
2025-08-19 18:55:21,281:INFO:Copying training dataset
2025-08-19 18:55:21,281:INFO:Defining folds
2025-08-19 18:55:21,281:INFO:Declaring metric variables
2025-08-19 18:55:21,281:INFO:Importing untrained model
2025-08-19 18:55:21,281:INFO:Declaring custom model
2025-08-19 18:55:21,282:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:55:21,282:INFO:Cross validation set to False
2025-08-19 18:55:21,282:INFO:Fitting Model
2025-08-19 18:55:21,307:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:21,320:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:55:21,320:INFO:create_model() successfully completed......................................
2025-08-19 18:55:21,402:INFO:_master_model_container: 26
2025-08-19 18:55:21,402:INFO:_display_container: 21
2025-08-19 18:55:21,405:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:55:21,405:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:21,492:INFO:Initializing predict_model()
2025-08-19 18:55:21,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:21,492:INFO:Checking exceptions
2025-08-19 18:55:21,492:INFO:Preloading libraries
2025-08-19 18:55:21,492:INFO:Set up data.
2025-08-19 18:55:21,495:INFO:Set up index.
2025-08-19 18:55:21,630:INFO:Initializing create_model()
2025-08-19 18:55:21,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:21,630:INFO:Checking exceptions
2025-08-19 18:55:21,631:INFO:Importing libraries
2025-08-19 18:55:21,631:INFO:Copying training dataset
2025-08-19 18:55:21,633:INFO:Defining folds
2025-08-19 18:55:21,633:INFO:Declaring metric variables
2025-08-19 18:55:21,633:INFO:Importing untrained model
2025-08-19 18:55:21,633:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:55:21,633:INFO:Starting cross validation
2025-08-19 18:55:21,634:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:21,747:INFO:Calculating mean and std
2025-08-19 18:55:21,747:INFO:Creating metrics dataframe
2025-08-19 18:55:21,748:INFO:Finalizing model
2025-08-19 18:55:21,767:INFO:Uploading results into container
2025-08-19 18:55:21,767:INFO:Uploading model into container now
2025-08-19 18:55:21,767:INFO:_master_model_container: 27
2025-08-19 18:55:21,767:INFO:_display_container: 23
2025-08-19 18:55:21,767:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:55:21,767:INFO:create_model() successfully completed......................................
2025-08-19 18:55:21,837:INFO:Initializing finalize_model()
2025-08-19 18:55:21,837:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:21,837:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:55:21,838:INFO:Initializing create_model()
2025-08-19 18:55:21,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:21,838:INFO:Checking exceptions
2025-08-19 18:55:21,839:INFO:Importing libraries
2025-08-19 18:55:21,839:INFO:Copying training dataset
2025-08-19 18:55:21,839:INFO:Defining folds
2025-08-19 18:55:21,839:INFO:Declaring metric variables
2025-08-19 18:55:21,839:INFO:Importing untrained model
2025-08-19 18:55:21,839:INFO:Declaring custom model
2025-08-19 18:55:21,840:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:55:21,840:INFO:Cross validation set to False
2025-08-19 18:55:21,840:INFO:Fitting Model
2025-08-19 18:55:21,861:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:55:21,861:INFO:create_model() successfully completed......................................
2025-08-19 18:55:21,932:INFO:_master_model_container: 27
2025-08-19 18:55:21,932:INFO:_display_container: 23
2025-08-19 18:55:21,935:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:55:21,935:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:22,008:INFO:Initializing predict_model()
2025-08-19 18:55:22,008:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:22,008:INFO:Checking exceptions
2025-08-19 18:55:22,008:INFO:Preloading libraries
2025-08-19 18:55:22,008:INFO:Set up data.
2025-08-19 18:55:22,011:INFO:Set up index.
2025-08-19 18:55:22,098:INFO:Initializing create_model()
2025-08-19 18:55:22,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:22,098:INFO:Checking exceptions
2025-08-19 18:55:22,099:INFO:Importing libraries
2025-08-19 18:55:22,099:INFO:Copying training dataset
2025-08-19 18:55:22,100:INFO:Defining folds
2025-08-19 18:55:22,101:INFO:Declaring metric variables
2025-08-19 18:55:22,101:INFO:Importing untrained model
2025-08-19 18:55:22,101:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:55:22,101:INFO:Starting cross validation
2025-08-19 18:55:22,101:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:22,196:INFO:Calculating mean and std
2025-08-19 18:55:22,197:INFO:Creating metrics dataframe
2025-08-19 18:55:22,198:INFO:Finalizing model
2025-08-19 18:55:22,218:INFO:Uploading results into container
2025-08-19 18:55:22,218:INFO:Uploading model into container now
2025-08-19 18:55:22,218:INFO:_master_model_container: 28
2025-08-19 18:55:22,218:INFO:_display_container: 25
2025-08-19 18:55:22,218:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:55:22,218:INFO:create_model() successfully completed......................................
2025-08-19 18:55:22,286:INFO:Initializing finalize_model()
2025-08-19 18:55:22,286:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:22,287:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:55:22,288:INFO:Initializing create_model()
2025-08-19 18:55:22,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:22,288:INFO:Checking exceptions
2025-08-19 18:55:22,289:INFO:Importing libraries
2025-08-19 18:55:22,289:INFO:Copying training dataset
2025-08-19 18:55:22,289:INFO:Defining folds
2025-08-19 18:55:22,289:INFO:Declaring metric variables
2025-08-19 18:55:22,289:INFO:Importing untrained model
2025-08-19 18:55:22,289:INFO:Declaring custom model
2025-08-19 18:55:22,290:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:55:22,290:INFO:Cross validation set to False
2025-08-19 18:55:22,290:INFO:Fitting Model
2025-08-19 18:55:22,315:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:55:22,315:INFO:create_model() successfully completed......................................
2025-08-19 18:55:22,383:INFO:_master_model_container: 28
2025-08-19 18:55:22,383:INFO:_display_container: 25
2025-08-19 18:55:22,387:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:55:22,387:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:22,458:INFO:Initializing predict_model()
2025-08-19 18:55:22,458:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:22,458:INFO:Checking exceptions
2025-08-19 18:55:22,458:INFO:Preloading libraries
2025-08-19 18:55:22,458:INFO:Set up data.
2025-08-19 18:55:22,461:INFO:Set up index.
2025-08-19 18:55:22,542:INFO:Initializing create_model()
2025-08-19 18:55:22,542:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:22,542:INFO:Checking exceptions
2025-08-19 18:55:22,543:INFO:Importing libraries
2025-08-19 18:55:22,543:INFO:Copying training dataset
2025-08-19 18:55:22,544:INFO:Defining folds
2025-08-19 18:55:22,544:INFO:Declaring metric variables
2025-08-19 18:55:22,544:INFO:Importing untrained model
2025-08-19 18:55:22,544:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:55:22,545:INFO:Starting cross validation
2025-08-19 18:55:22,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:22,635:INFO:Calculating mean and std
2025-08-19 18:55:22,636:INFO:Creating metrics dataframe
2025-08-19 18:55:22,637:INFO:Finalizing model
2025-08-19 18:55:22,655:INFO:Uploading results into container
2025-08-19 18:55:22,656:INFO:Uploading model into container now
2025-08-19 18:55:22,657:INFO:_master_model_container: 29
2025-08-19 18:55:22,657:INFO:_display_container: 27
2025-08-19 18:55:22,657:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:55:22,657:INFO:create_model() successfully completed......................................
2025-08-19 18:55:22,735:INFO:Initializing finalize_model()
2025-08-19 18:55:22,735:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:22,735:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:55:22,737:INFO:Initializing create_model()
2025-08-19 18:55:22,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:22,737:INFO:Checking exceptions
2025-08-19 18:55:22,737:INFO:Importing libraries
2025-08-19 18:55:22,737:INFO:Copying training dataset
2025-08-19 18:55:22,737:INFO:Defining folds
2025-08-19 18:55:22,737:INFO:Declaring metric variables
2025-08-19 18:55:22,738:INFO:Importing untrained model
2025-08-19 18:55:22,738:INFO:Declaring custom model
2025-08-19 18:55:22,738:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:55:22,738:INFO:Cross validation set to False
2025-08-19 18:55:22,738:INFO:Fitting Model
2025-08-19 18:55:22,776:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:55:22,776:INFO:create_model() successfully completed......................................
2025-08-19 18:55:22,921:INFO:_master_model_container: 29
2025-08-19 18:55:22,922:INFO:_display_container: 27
2025-08-19 18:55:22,925:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:55:22,925:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:23,039:INFO:Initializing predict_model()
2025-08-19 18:55:23,039:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:23,039:INFO:Checking exceptions
2025-08-19 18:55:23,039:INFO:Preloading libraries
2025-08-19 18:55:23,039:INFO:Set up data.
2025-08-19 18:55:23,043:INFO:Set up index.
2025-08-19 18:55:23,132:INFO:Initializing create_model()
2025-08-19 18:55:23,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:23,132:INFO:Checking exceptions
2025-08-19 18:55:23,133:INFO:Importing libraries
2025-08-19 18:55:23,133:INFO:Copying training dataset
2025-08-19 18:55:23,134:INFO:Defining folds
2025-08-19 18:55:23,134:INFO:Declaring metric variables
2025-08-19 18:55:23,135:INFO:Importing untrained model
2025-08-19 18:55:23,135:INFO:Ridge Classifier Imported successfully
2025-08-19 18:55:23,135:INFO:Starting cross validation
2025-08-19 18:55:23,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:23,227:INFO:Calculating mean and std
2025-08-19 18:55:23,227:INFO:Creating metrics dataframe
2025-08-19 18:55:23,228:INFO:Finalizing model
2025-08-19 18:55:23,251:INFO:Uploading results into container
2025-08-19 18:55:23,252:INFO:Uploading model into container now
2025-08-19 18:55:23,253:INFO:_master_model_container: 30
2025-08-19 18:55:23,253:INFO:_display_container: 29
2025-08-19 18:55:23,253:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:55:23,253:INFO:create_model() successfully completed......................................
2025-08-19 18:55:23,340:INFO:Initializing finalize_model()
2025-08-19 18:55:23,340:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:23,341:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:55:23,342:INFO:Initializing create_model()
2025-08-19 18:55:23,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:23,342:INFO:Checking exceptions
2025-08-19 18:55:23,343:INFO:Importing libraries
2025-08-19 18:55:23,343:INFO:Copying training dataset
2025-08-19 18:55:23,343:INFO:Defining folds
2025-08-19 18:55:23,343:INFO:Declaring metric variables
2025-08-19 18:55:23,343:INFO:Importing untrained model
2025-08-19 18:55:23,343:INFO:Declaring custom model
2025-08-19 18:55:23,343:INFO:Ridge Classifier Imported successfully
2025-08-19 18:55:23,344:INFO:Cross validation set to False
2025-08-19 18:55:23,344:INFO:Fitting Model
2025-08-19 18:55:23,373:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:55:23,373:INFO:create_model() successfully completed......................................
2025-08-19 18:55:23,466:INFO:_master_model_container: 30
2025-08-19 18:55:23,466:INFO:_display_container: 29
2025-08-19 18:55:23,470:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:55:23,470:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:23,590:INFO:Initializing predict_model()
2025-08-19 18:55:23,590:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:23,590:INFO:Checking exceptions
2025-08-19 18:55:23,590:INFO:Preloading libraries
2025-08-19 18:55:23,590:INFO:Set up data.
2025-08-19 18:55:23,596:INFO:Set up index.
2025-08-19 18:55:23,692:INFO:Initializing create_model()
2025-08-19 18:55:23,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:23,692:INFO:Checking exceptions
2025-08-19 18:55:23,693:INFO:Importing libraries
2025-08-19 18:55:23,693:INFO:Copying training dataset
2025-08-19 18:55:23,695:INFO:Defining folds
2025-08-19 18:55:23,695:INFO:Declaring metric variables
2025-08-19 18:55:23,695:INFO:Importing untrained model
2025-08-19 18:55:23,695:INFO:Logistic Regression Imported successfully
2025-08-19 18:55:23,695:INFO:Starting cross validation
2025-08-19 18:55:23,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:23,779:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:23,790:INFO:Calculating mean and std
2025-08-19 18:55:23,790:INFO:Creating metrics dataframe
2025-08-19 18:55:23,791:INFO:Finalizing model
2025-08-19 18:55:23,822:INFO:Uploading results into container
2025-08-19 18:55:23,823:INFO:Uploading model into container now
2025-08-19 18:55:23,823:INFO:_master_model_container: 31
2025-08-19 18:55:23,823:INFO:_display_container: 31
2025-08-19 18:55:23,824:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:55:23,824:INFO:create_model() successfully completed......................................
2025-08-19 18:55:23,903:INFO:Initializing finalize_model()
2025-08-19 18:55:23,903:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:23,904:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:55:23,905:INFO:Initializing create_model()
2025-08-19 18:55:23,905:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:23,905:INFO:Checking exceptions
2025-08-19 18:55:23,906:INFO:Importing libraries
2025-08-19 18:55:23,906:INFO:Copying training dataset
2025-08-19 18:55:23,906:INFO:Defining folds
2025-08-19 18:55:23,906:INFO:Declaring metric variables
2025-08-19 18:55:23,906:INFO:Importing untrained model
2025-08-19 18:55:23,906:INFO:Declaring custom model
2025-08-19 18:55:23,906:INFO:Logistic Regression Imported successfully
2025-08-19 18:55:23,907:INFO:Cross validation set to False
2025-08-19 18:55:23,907:INFO:Fitting Model
2025-08-19 18:55:23,947:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:55:23,947:INFO:create_model() successfully completed......................................
2025-08-19 18:55:24,033:INFO:_master_model_container: 31
2025-08-19 18:55:24,033:INFO:_display_container: 31
2025-08-19 18:55:24,038:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:55:24,038:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:24,166:INFO:Initializing predict_model()
2025-08-19 18:55:24,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:24,166:INFO:Checking exceptions
2025-08-19 18:55:24,166:INFO:Preloading libraries
2025-08-19 18:55:24,167:INFO:Set up data.
2025-08-19 18:55:24,171:INFO:Set up index.
2025-08-19 18:55:24,288:INFO:Initializing create_model()
2025-08-19 18:55:24,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:24,288:INFO:Checking exceptions
2025-08-19 18:55:24,289:INFO:Importing libraries
2025-08-19 18:55:24,289:INFO:Copying training dataset
2025-08-19 18:55:24,291:INFO:Defining folds
2025-08-19 18:55:24,291:INFO:Declaring metric variables
2025-08-19 18:55:24,291:INFO:Importing untrained model
2025-08-19 18:55:24,291:INFO:Naive Bayes Imported successfully
2025-08-19 18:55:24,291:INFO:Starting cross validation
2025-08-19 18:55:24,291:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:24,406:INFO:Calculating mean and std
2025-08-19 18:55:24,407:INFO:Creating metrics dataframe
2025-08-19 18:55:24,408:INFO:Finalizing model
2025-08-19 18:55:24,425:INFO:Uploading results into container
2025-08-19 18:55:24,426:INFO:Uploading model into container now
2025-08-19 18:55:24,426:INFO:_master_model_container: 32
2025-08-19 18:55:24,426:INFO:_display_container: 33
2025-08-19 18:55:24,426:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:55:24,426:INFO:create_model() successfully completed......................................
2025-08-19 18:55:24,491:INFO:Initializing finalize_model()
2025-08-19 18:55:24,491:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:24,491:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:55:24,492:INFO:Initializing create_model()
2025-08-19 18:55:24,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:24,492:INFO:Checking exceptions
2025-08-19 18:55:24,493:INFO:Importing libraries
2025-08-19 18:55:24,493:INFO:Copying training dataset
2025-08-19 18:55:24,493:INFO:Defining folds
2025-08-19 18:55:24,493:INFO:Declaring metric variables
2025-08-19 18:55:24,493:INFO:Importing untrained model
2025-08-19 18:55:24,493:INFO:Declaring custom model
2025-08-19 18:55:24,493:INFO:Naive Bayes Imported successfully
2025-08-19 18:55:24,494:INFO:Cross validation set to False
2025-08-19 18:55:24,494:INFO:Fitting Model
2025-08-19 18:55:24,514:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:55:24,514:INFO:create_model() successfully completed......................................
2025-08-19 18:55:24,582:INFO:_master_model_container: 32
2025-08-19 18:55:24,582:INFO:_display_container: 33
2025-08-19 18:55:24,585:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:55:24,585:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:24,655:INFO:Initializing predict_model()
2025-08-19 18:55:24,655:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc8130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x119eae560>)
2025-08-19 18:55:24,655:INFO:Checking exceptions
2025-08-19 18:55:24,655:INFO:Preloading libraries
2025-08-19 18:55:24,655:INFO:Set up data.
2025-08-19 18:55:24,659:INFO:Set up index.
2025-08-19 18:55:24,755:INFO:PyCaret ClassificationExperiment
2025-08-19 18:55:24,756:INFO:Logging name: clf-default-name
2025-08-19 18:55:24,756:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:55:24,756:INFO:version 3.3.2
2025-08-19 18:55:24,756:INFO:Initializing setup()
2025-08-19 18:55:24,756:INFO:self.USI: 91b3
2025-08-19 18:55:24,756:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:55:24,756:INFO:Checking environment
2025-08-19 18:55:24,756:INFO:python_version: 3.10.18
2025-08-19 18:55:24,756:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:55:24,756:INFO:machine: arm64
2025-08-19 18:55:24,756:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:55:24,756:INFO:Memory: svmem(total=17179869184, available=3118006272, percent=81.9, used=5865029632, free=257785856, active=2874474496, inactive=2847342592, wired=2990555136)
2025-08-19 18:55:24,756:INFO:Physical Core: 8
2025-08-19 18:55:24,756:INFO:Logical Core: 8
2025-08-19 18:55:24,756:INFO:Checking libraries
2025-08-19 18:55:24,756:INFO:System:
2025-08-19 18:55:24,756:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:55:24,756:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:55:24,756:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:55:24,756:INFO:PyCaret required dependencies:
2025-08-19 18:55:24,756:INFO:                 pip: 25.2
2025-08-19 18:55:24,756:INFO:          setuptools: 80.9.0
2025-08-19 18:55:24,756:INFO:             pycaret: 3.3.2
2025-08-19 18:55:24,756:INFO:             IPython: 8.37.0
2025-08-19 18:55:24,756:INFO:          ipywidgets: 8.1.7
2025-08-19 18:55:24,756:INFO:                tqdm: 4.67.1
2025-08-19 18:55:24,756:INFO:               numpy: 1.25.2
2025-08-19 18:55:24,756:INFO:              pandas: 2.1.4
2025-08-19 18:55:24,756:INFO:              jinja2: 3.1.6
2025-08-19 18:55:24,756:INFO:               scipy: 1.9.3
2025-08-19 18:55:24,756:INFO:              joblib: 1.3.2
2025-08-19 18:55:24,756:INFO:             sklearn: 1.4.2
2025-08-19 18:55:24,756:INFO:                pyod: 2.0.5
2025-08-19 18:55:24,756:INFO:            imblearn: 0.12.4
2025-08-19 18:55:24,756:INFO:   category_encoders: 2.7.0
2025-08-19 18:55:24,756:INFO:            lightgbm: 4.6.0
2025-08-19 18:55:24,756:INFO:               numba: 0.61.2
2025-08-19 18:55:24,756:INFO:            requests: 2.32.4
2025-08-19 18:55:24,756:INFO:          matplotlib: 3.7.2
2025-08-19 18:55:24,756:INFO:          scikitplot: 0.3.7
2025-08-19 18:55:24,756:INFO:         yellowbrick: 1.5
2025-08-19 18:55:24,756:INFO:              plotly: 5.24.1
2025-08-19 18:55:24,756:INFO:    plotly-resampler: Not installed
2025-08-19 18:55:24,756:INFO:             kaleido: 1.0.0
2025-08-19 18:55:24,756:INFO:           schemdraw: 0.15
2025-08-19 18:55:24,756:INFO:         statsmodels: 0.14.5
2025-08-19 18:55:24,756:INFO:              sktime: 0.26.0
2025-08-19 18:55:24,756:INFO:               tbats: 1.1.3
2025-08-19 18:55:24,756:INFO:            pmdarima: 2.0.4
2025-08-19 18:55:24,756:INFO:              psutil: 7.0.0
2025-08-19 18:55:24,756:INFO:          markupsafe: 3.0.2
2025-08-19 18:55:24,756:INFO:             pickle5: Not installed
2025-08-19 18:55:24,756:INFO:         cloudpickle: 3.1.1
2025-08-19 18:55:24,756:INFO:         deprecation: 2.1.0
2025-08-19 18:55:24,756:INFO:              xxhash: 3.5.0
2025-08-19 18:55:24,756:INFO:           wurlitzer: 3.1.1
2025-08-19 18:55:24,757:INFO:PyCaret optional dependencies:
2025-08-19 18:55:24,757:INFO:                shap: 0.48.0
2025-08-19 18:55:24,757:INFO:           interpret: Not installed
2025-08-19 18:55:24,757:INFO:                umap: Not installed
2025-08-19 18:55:24,757:INFO:     ydata_profiling: Not installed
2025-08-19 18:55:24,757:INFO:  explainerdashboard: Not installed
2025-08-19 18:55:24,757:INFO:             autoviz: Not installed
2025-08-19 18:55:24,757:INFO:           fairlearn: Not installed
2025-08-19 18:55:24,757:INFO:          deepchecks: Not installed
2025-08-19 18:55:24,757:INFO:             xgboost: 3.0.4
2025-08-19 18:55:24,757:INFO:            catboost: 1.2.8
2025-08-19 18:55:24,757:INFO:              kmodes: Not installed
2025-08-19 18:55:24,757:INFO:             mlxtend: 0.23.4
2025-08-19 18:55:24,757:INFO:       statsforecast: Not installed
2025-08-19 18:55:24,757:INFO:        tune_sklearn: Not installed
2025-08-19 18:55:24,757:INFO:                 ray: Not installed
2025-08-19 18:55:24,757:INFO:            hyperopt: Not installed
2025-08-19 18:55:24,757:INFO:              optuna: 4.4.0
2025-08-19 18:55:24,757:INFO:               skopt: Not installed
2025-08-19 18:55:24,757:INFO:              mlflow: Not installed
2025-08-19 18:55:24,757:INFO:              gradio: Not installed
2025-08-19 18:55:24,757:INFO:             fastapi: Not installed
2025-08-19 18:55:24,757:INFO:             uvicorn: Not installed
2025-08-19 18:55:24,757:INFO:              m2cgen: Not installed
2025-08-19 18:55:24,757:INFO:           evidently: Not installed
2025-08-19 18:55:24,757:INFO:               fugue: Not installed
2025-08-19 18:55:24,757:INFO:           streamlit: Not installed
2025-08-19 18:55:24,757:INFO:             prophet: Not installed
2025-08-19 18:55:24,757:INFO:None
2025-08-19 18:55:24,757:INFO:Set up data.
2025-08-19 18:55:24,761:INFO:Set up folding strategy.
2025-08-19 18:55:24,761:INFO:Set up train/test split.
2025-08-19 18:55:24,761:INFO:Set up data.
2025-08-19 18:55:24,764:INFO:Set up index.
2025-08-19 18:55:24,764:INFO:Assigning column types.
2025-08-19 18:55:24,766:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:55:24,785:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:55:24,786:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:55:24,797:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:55:24,798:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:55:24,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:55:24,819:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:55:24,831:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:55:24,832:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:55:24,832:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:55:24,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:55:24,864:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:55:24,865:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:55:24,885:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:55:24,896:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:55:24,897:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:55:24,898:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:55:24,929:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:55:24,930:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:55:24,963:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:55:24,964:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:55:24,965:INFO:Preparing preprocessing pipeline...
2025-08-19 18:55:24,965:INFO:Set up label encoding.
2025-08-19 18:55:24,965:INFO:Set up simple imputation.
2025-08-19 18:55:24,966:INFO:Set up encoding of categorical features.
2025-08-19 18:55:25,007:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:55:25,011:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:55:25,011:INFO:Creating final display dataframe.
2025-08-19 18:55:25,116:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              91b3
2025-08-19 18:55:25,147:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:55:25,148:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:55:25,179:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:55:25,180:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:55:25,181:INFO:setup() successfully completed in 0.43s...............
2025-08-19 18:55:25,182:INFO:Initializing compare_models()
2025-08-19 18:55:25,182:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:55:25,182:INFO:Checking exceptions
2025-08-19 18:55:25,184:INFO:Preparing display monitor
2025-08-19 18:55:25,185:INFO:Initializing Logistic Regression
2025-08-19 18:55:25,186:INFO:Total runtime is 1.0383129119873046e-05 minutes
2025-08-19 18:55:25,186:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:25,186:INFO:Initializing create_model()
2025-08-19 18:55:25,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:25,186:INFO:Checking exceptions
2025-08-19 18:55:25,186:INFO:Importing libraries
2025-08-19 18:55:25,186:INFO:Copying training dataset
2025-08-19 18:55:25,187:INFO:Defining folds
2025-08-19 18:55:25,187:INFO:Declaring metric variables
2025-08-19 18:55:25,187:INFO:Importing untrained model
2025-08-19 18:55:25,187:INFO:Logistic Regression Imported successfully
2025-08-19 18:55:25,188:INFO:Starting cross validation
2025-08-19 18:55:25,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:25,268:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:25,286:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:25,293:INFO:Calculating mean and std
2025-08-19 18:55:25,293:INFO:Creating metrics dataframe
2025-08-19 18:55:25,294:INFO:Uploading results into container
2025-08-19 18:55:25,294:INFO:Uploading model into container now
2025-08-19 18:55:25,294:INFO:_master_model_container: 1
2025-08-19 18:55:25,295:INFO:_display_container: 2
2025-08-19 18:55:25,295:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:55:25,295:INFO:create_model() successfully completed......................................
2025-08-19 18:55:25,361:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:25,361:INFO:Creating metrics dataframe
2025-08-19 18:55:25,362:INFO:Initializing K Neighbors Classifier
2025-08-19 18:55:25,363:INFO:Total runtime is 0.0029572963714599608 minutes
2025-08-19 18:55:25,363:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:25,363:INFO:Initializing create_model()
2025-08-19 18:55:25,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:25,363:INFO:Checking exceptions
2025-08-19 18:55:25,363:INFO:Importing libraries
2025-08-19 18:55:25,363:INFO:Copying training dataset
2025-08-19 18:55:25,364:INFO:Defining folds
2025-08-19 18:55:25,364:INFO:Declaring metric variables
2025-08-19 18:55:25,364:INFO:Importing untrained model
2025-08-19 18:55:25,364:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:55:25,364:INFO:Starting cross validation
2025-08-19 18:55:25,365:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:25,499:INFO:Calculating mean and std
2025-08-19 18:55:25,500:INFO:Creating metrics dataframe
2025-08-19 18:55:25,500:INFO:Uploading results into container
2025-08-19 18:55:25,501:INFO:Uploading model into container now
2025-08-19 18:55:25,501:INFO:_master_model_container: 2
2025-08-19 18:55:25,501:INFO:_display_container: 2
2025-08-19 18:55:25,501:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:55:25,501:INFO:create_model() successfully completed......................................
2025-08-19 18:55:25,583:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:25,583:INFO:Creating metrics dataframe
2025-08-19 18:55:25,584:INFO:Initializing Naive Bayes
2025-08-19 18:55:25,584:INFO:Total runtime is 0.006652967135111491 minutes
2025-08-19 18:55:25,584:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:25,584:INFO:Initializing create_model()
2025-08-19 18:55:25,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:25,585:INFO:Checking exceptions
2025-08-19 18:55:25,585:INFO:Importing libraries
2025-08-19 18:55:25,585:INFO:Copying training dataset
2025-08-19 18:55:25,586:INFO:Defining folds
2025-08-19 18:55:25,586:INFO:Declaring metric variables
2025-08-19 18:55:25,586:INFO:Importing untrained model
2025-08-19 18:55:25,587:INFO:Naive Bayes Imported successfully
2025-08-19 18:55:25,587:INFO:Starting cross validation
2025-08-19 18:55:25,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:25,708:INFO:Calculating mean and std
2025-08-19 18:55:25,708:INFO:Creating metrics dataframe
2025-08-19 18:55:25,709:INFO:Uploading results into container
2025-08-19 18:55:25,710:INFO:Uploading model into container now
2025-08-19 18:55:25,710:INFO:_master_model_container: 3
2025-08-19 18:55:25,710:INFO:_display_container: 2
2025-08-19 18:55:25,710:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:55:25,710:INFO:create_model() successfully completed......................................
2025-08-19 18:55:25,779:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:25,779:INFO:Creating metrics dataframe
2025-08-19 18:55:25,780:INFO:Initializing Decision Tree Classifier
2025-08-19 18:55:25,780:INFO:Total runtime is 0.009917267163594564 minutes
2025-08-19 18:55:25,780:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:25,780:INFO:Initializing create_model()
2025-08-19 18:55:25,780:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:25,780:INFO:Checking exceptions
2025-08-19 18:55:25,780:INFO:Importing libraries
2025-08-19 18:55:25,780:INFO:Copying training dataset
2025-08-19 18:55:25,782:INFO:Defining folds
2025-08-19 18:55:25,782:INFO:Declaring metric variables
2025-08-19 18:55:25,782:INFO:Importing untrained model
2025-08-19 18:55:25,782:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:55:25,782:INFO:Starting cross validation
2025-08-19 18:55:25,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:25,885:INFO:Calculating mean and std
2025-08-19 18:55:25,885:INFO:Creating metrics dataframe
2025-08-19 18:55:25,886:INFO:Uploading results into container
2025-08-19 18:55:25,886:INFO:Uploading model into container now
2025-08-19 18:55:25,886:INFO:_master_model_container: 4
2025-08-19 18:55:25,886:INFO:_display_container: 2
2025-08-19 18:55:25,887:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:55:25,887:INFO:create_model() successfully completed......................................
2025-08-19 18:55:25,958:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:25,958:INFO:Creating metrics dataframe
2025-08-19 18:55:25,959:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:55:25,959:INFO:Total runtime is 0.012906916936238607 minutes
2025-08-19 18:55:25,960:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:25,960:INFO:Initializing create_model()
2025-08-19 18:55:25,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:25,960:INFO:Checking exceptions
2025-08-19 18:55:25,960:INFO:Importing libraries
2025-08-19 18:55:25,960:INFO:Copying training dataset
2025-08-19 18:55:25,961:INFO:Defining folds
2025-08-19 18:55:25,961:INFO:Declaring metric variables
2025-08-19 18:55:25,961:INFO:Importing untrained model
2025-08-19 18:55:25,961:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:55:25,961:INFO:Starting cross validation
2025-08-19 18:55:25,962:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:26,084:INFO:Calculating mean and std
2025-08-19 18:55:26,085:INFO:Creating metrics dataframe
2025-08-19 18:55:26,086:INFO:Uploading results into container
2025-08-19 18:55:26,087:INFO:Uploading model into container now
2025-08-19 18:55:26,087:INFO:_master_model_container: 5
2025-08-19 18:55:26,087:INFO:_display_container: 2
2025-08-19 18:55:26,087:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:55:26,087:INFO:create_model() successfully completed......................................
2025-08-19 18:55:26,157:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:26,157:INFO:Creating metrics dataframe
2025-08-19 18:55:26,159:INFO:Initializing Ridge Classifier
2025-08-19 18:55:26,159:INFO:Total runtime is 0.016232633590698244 minutes
2025-08-19 18:55:26,159:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:26,159:INFO:Initializing create_model()
2025-08-19 18:55:26,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:26,159:INFO:Checking exceptions
2025-08-19 18:55:26,159:INFO:Importing libraries
2025-08-19 18:55:26,159:INFO:Copying training dataset
2025-08-19 18:55:26,161:INFO:Defining folds
2025-08-19 18:55:26,161:INFO:Declaring metric variables
2025-08-19 18:55:26,161:INFO:Importing untrained model
2025-08-19 18:55:26,161:INFO:Ridge Classifier Imported successfully
2025-08-19 18:55:26,161:INFO:Starting cross validation
2025-08-19 18:55:26,162:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:26,246:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:26,261:INFO:Calculating mean and std
2025-08-19 18:55:26,261:INFO:Creating metrics dataframe
2025-08-19 18:55:26,262:INFO:Uploading results into container
2025-08-19 18:55:26,262:INFO:Uploading model into container now
2025-08-19 18:55:26,262:INFO:_master_model_container: 6
2025-08-19 18:55:26,262:INFO:_display_container: 2
2025-08-19 18:55:26,262:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:55:26,262:INFO:create_model() successfully completed......................................
2025-08-19 18:55:26,334:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:26,334:INFO:Creating metrics dataframe
2025-08-19 18:55:26,336:INFO:Initializing Random Forest Classifier
2025-08-19 18:55:26,336:INFO:Total runtime is 0.01917763153711955 minutes
2025-08-19 18:55:26,336:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:26,336:INFO:Initializing create_model()
2025-08-19 18:55:26,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:26,336:INFO:Checking exceptions
2025-08-19 18:55:26,336:INFO:Importing libraries
2025-08-19 18:55:26,336:INFO:Copying training dataset
2025-08-19 18:55:26,338:INFO:Defining folds
2025-08-19 18:55:26,338:INFO:Declaring metric variables
2025-08-19 18:55:26,338:INFO:Importing untrained model
2025-08-19 18:55:26,338:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:55:26,338:INFO:Starting cross validation
2025-08-19 18:55:26,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:26,828:INFO:Calculating mean and std
2025-08-19 18:55:26,828:INFO:Creating metrics dataframe
2025-08-19 18:55:26,829:INFO:Uploading results into container
2025-08-19 18:55:26,829:INFO:Uploading model into container now
2025-08-19 18:55:26,829:INFO:_master_model_container: 7
2025-08-19 18:55:26,830:INFO:_display_container: 2
2025-08-19 18:55:26,831:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:55:26,831:INFO:create_model() successfully completed......................................
2025-08-19 18:55:26,910:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:26,910:INFO:Creating metrics dataframe
2025-08-19 18:55:26,911:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:55:26,911:INFO:Total runtime is 0.02876694997151693 minutes
2025-08-19 18:55:26,911:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:26,911:INFO:Initializing create_model()
2025-08-19 18:55:26,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:26,911:INFO:Checking exceptions
2025-08-19 18:55:26,911:INFO:Importing libraries
2025-08-19 18:55:26,911:INFO:Copying training dataset
2025-08-19 18:55:26,913:INFO:Defining folds
2025-08-19 18:55:26,913:INFO:Declaring metric variables
2025-08-19 18:55:26,914:INFO:Importing untrained model
2025-08-19 18:55:26,914:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:55:26,914:INFO:Starting cross validation
2025-08-19 18:55:26,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:26,942:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,946:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,959:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,963:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,963:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,963:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,989:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,992:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,992:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:26,996:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:55:27,016:INFO:Calculating mean and std
2025-08-19 18:55:27,016:INFO:Creating metrics dataframe
2025-08-19 18:55:27,017:INFO:Uploading results into container
2025-08-19 18:55:27,017:INFO:Uploading model into container now
2025-08-19 18:55:27,017:INFO:_master_model_container: 8
2025-08-19 18:55:27,017:INFO:_display_container: 2
2025-08-19 18:55:27,017:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:55:27,017:INFO:create_model() successfully completed......................................
2025-08-19 18:55:27,086:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:27,086:INFO:Creating metrics dataframe
2025-08-19 18:55:27,087:INFO:Initializing Ada Boost Classifier
2025-08-19 18:55:27,087:INFO:Total runtime is 0.03170334895451864 minutes
2025-08-19 18:55:27,087:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:27,087:INFO:Initializing create_model()
2025-08-19 18:55:27,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:27,087:INFO:Checking exceptions
2025-08-19 18:55:27,088:INFO:Importing libraries
2025-08-19 18:55:27,088:INFO:Copying training dataset
2025-08-19 18:55:27,089:INFO:Defining folds
2025-08-19 18:55:27,089:INFO:Declaring metric variables
2025-08-19 18:55:27,089:INFO:Importing untrained model
2025-08-19 18:55:27,089:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:55:27,089:INFO:Starting cross validation
2025-08-19 18:55:27,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:27,114:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,116:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,120:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,120:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,121:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,135:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,144:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,153:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,266:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,274:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:27,404:INFO:Calculating mean and std
2025-08-19 18:55:27,404:INFO:Creating metrics dataframe
2025-08-19 18:55:27,405:INFO:Uploading results into container
2025-08-19 18:55:27,405:INFO:Uploading model into container now
2025-08-19 18:55:27,405:INFO:_master_model_container: 9
2025-08-19 18:55:27,405:INFO:_display_container: 2
2025-08-19 18:55:27,405:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:55:27,405:INFO:create_model() successfully completed......................................
2025-08-19 18:55:27,473:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:27,473:INFO:Creating metrics dataframe
2025-08-19 18:55:27,474:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:55:27,474:INFO:Total runtime is 0.03815711736679077 minutes
2025-08-19 18:55:27,475:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:27,475:INFO:Initializing create_model()
2025-08-19 18:55:27,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:27,475:INFO:Checking exceptions
2025-08-19 18:55:27,475:INFO:Importing libraries
2025-08-19 18:55:27,475:INFO:Copying training dataset
2025-08-19 18:55:27,476:INFO:Defining folds
2025-08-19 18:55:27,476:INFO:Declaring metric variables
2025-08-19 18:55:27,476:INFO:Importing untrained model
2025-08-19 18:55:27,476:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:55:27,476:INFO:Starting cross validation
2025-08-19 18:55:27,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:28,450:INFO:Calculating mean and std
2025-08-19 18:55:28,451:INFO:Creating metrics dataframe
2025-08-19 18:55:28,452:INFO:Uploading results into container
2025-08-19 18:55:28,452:INFO:Uploading model into container now
2025-08-19 18:55:28,453:INFO:_master_model_container: 10
2025-08-19 18:55:28,453:INFO:_display_container: 2
2025-08-19 18:55:28,453:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:55:28,453:INFO:create_model() successfully completed......................................
2025-08-19 18:55:28,528:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:28,528:INFO:Creating metrics dataframe
2025-08-19 18:55:28,529:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:55:28,529:INFO:Total runtime is 0.055739951133728025 minutes
2025-08-19 18:55:28,530:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:28,530:INFO:Initializing create_model()
2025-08-19 18:55:28,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:28,530:INFO:Checking exceptions
2025-08-19 18:55:28,530:INFO:Importing libraries
2025-08-19 18:55:28,530:INFO:Copying training dataset
2025-08-19 18:55:28,531:INFO:Defining folds
2025-08-19 18:55:28,531:INFO:Declaring metric variables
2025-08-19 18:55:28,531:INFO:Importing untrained model
2025-08-19 18:55:28,532:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:55:28,532:INFO:Starting cross validation
2025-08-19 18:55:28,532:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:28,623:INFO:Calculating mean and std
2025-08-19 18:55:28,623:INFO:Creating metrics dataframe
2025-08-19 18:55:28,624:INFO:Uploading results into container
2025-08-19 18:55:28,624:INFO:Uploading model into container now
2025-08-19 18:55:28,624:INFO:_master_model_container: 11
2025-08-19 18:55:28,624:INFO:_display_container: 2
2025-08-19 18:55:28,625:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:55:28,625:INFO:create_model() successfully completed......................................
2025-08-19 18:55:28,690:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:28,690:INFO:Creating metrics dataframe
2025-08-19 18:55:28,691:INFO:Initializing Extra Trees Classifier
2025-08-19 18:55:28,691:INFO:Total runtime is 0.05843686660130818 minutes
2025-08-19 18:55:28,691:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:28,691:INFO:Initializing create_model()
2025-08-19 18:55:28,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:28,692:INFO:Checking exceptions
2025-08-19 18:55:28,692:INFO:Importing libraries
2025-08-19 18:55:28,692:INFO:Copying training dataset
2025-08-19 18:55:28,693:INFO:Defining folds
2025-08-19 18:55:28,693:INFO:Declaring metric variables
2025-08-19 18:55:28,693:INFO:Importing untrained model
2025-08-19 18:55:28,693:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:55:28,693:INFO:Starting cross validation
2025-08-19 18:55:28,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:28,999:INFO:Calculating mean and std
2025-08-19 18:55:28,999:INFO:Creating metrics dataframe
2025-08-19 18:55:29,000:INFO:Uploading results into container
2025-08-19 18:55:29,001:INFO:Uploading model into container now
2025-08-19 18:55:29,001:INFO:_master_model_container: 12
2025-08-19 18:55:29,001:INFO:_display_container: 2
2025-08-19 18:55:29,001:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:55:29,001:INFO:create_model() successfully completed......................................
2025-08-19 18:55:29,069:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:29,069:INFO:Creating metrics dataframe
2025-08-19 18:55:29,070:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:55:29,070:INFO:Total runtime is 0.0647570013999939 minutes
2025-08-19 18:55:29,071:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:29,071:INFO:Initializing create_model()
2025-08-19 18:55:29,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:29,071:INFO:Checking exceptions
2025-08-19 18:55:29,071:INFO:Importing libraries
2025-08-19 18:55:29,071:INFO:Copying training dataset
2025-08-19 18:55:29,072:INFO:Defining folds
2025-08-19 18:55:29,072:INFO:Declaring metric variables
2025-08-19 18:55:29,072:INFO:Importing untrained model
2025-08-19 18:55:29,072:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:55:29,073:INFO:Starting cross validation
2025-08-19 18:55:29,073:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:29,243:INFO:Calculating mean and std
2025-08-19 18:55:29,243:INFO:Creating metrics dataframe
2025-08-19 18:55:29,244:INFO:Uploading results into container
2025-08-19 18:55:29,244:INFO:Uploading model into container now
2025-08-19 18:55:29,245:INFO:_master_model_container: 13
2025-08-19 18:55:29,245:INFO:_display_container: 2
2025-08-19 18:55:29,245:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:55:29,245:INFO:create_model() successfully completed......................................
2025-08-19 18:55:29,324:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:29,324:INFO:Creating metrics dataframe
2025-08-19 18:55:29,325:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:55:29,325:INFO:Total runtime is 0.06899996598561604 minutes
2025-08-19 18:55:29,325:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:29,325:INFO:Initializing create_model()
2025-08-19 18:55:29,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:29,325:INFO:Checking exceptions
2025-08-19 18:55:29,325:INFO:Importing libraries
2025-08-19 18:55:29,325:INFO:Copying training dataset
2025-08-19 18:55:29,327:INFO:Defining folds
2025-08-19 18:55:29,327:INFO:Declaring metric variables
2025-08-19 18:55:29,328:INFO:Importing untrained model
2025-08-19 18:55:29,328:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:55:29,328:INFO:Starting cross validation
2025-08-19 18:55:29,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:32,509:INFO:Calculating mean and std
2025-08-19 18:55:32,510:INFO:Creating metrics dataframe
2025-08-19 18:55:32,511:INFO:Uploading results into container
2025-08-19 18:55:32,511:INFO:Uploading model into container now
2025-08-19 18:55:32,511:INFO:_master_model_container: 14
2025-08-19 18:55:32,511:INFO:_display_container: 2
2025-08-19 18:55:32,511:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:55:32,511:INFO:create_model() successfully completed......................................
2025-08-19 18:55:32,580:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:32,580:INFO:Creating metrics dataframe
2025-08-19 18:55:32,582:INFO:Initializing CatBoost Classifier
2025-08-19 18:55:32,582:INFO:Total runtime is 0.12327640056610106 minutes
2025-08-19 18:55:32,582:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:32,582:INFO:Initializing create_model()
2025-08-19 18:55:32,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:32,582:INFO:Checking exceptions
2025-08-19 18:55:32,582:INFO:Importing libraries
2025-08-19 18:55:32,582:INFO:Copying training dataset
2025-08-19 18:55:32,584:INFO:Defining folds
2025-08-19 18:55:32,584:INFO:Declaring metric variables
2025-08-19 18:55:32,584:INFO:Importing untrained model
2025-08-19 18:55:32,584:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:55:32,584:INFO:Starting cross validation
2025-08-19 18:55:32,584:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:40,656:INFO:Calculating mean and std
2025-08-19 18:55:40,657:INFO:Creating metrics dataframe
2025-08-19 18:55:40,659:INFO:Uploading results into container
2025-08-19 18:55:40,659:INFO:Uploading model into container now
2025-08-19 18:55:40,660:INFO:_master_model_container: 15
2025-08-19 18:55:40,660:INFO:_display_container: 2
2025-08-19 18:55:40,660:INFO:<catboost.core.CatBoostClassifier object at 0x307a88430>
2025-08-19 18:55:40,660:INFO:create_model() successfully completed......................................
2025-08-19 18:55:40,763:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:40,763:INFO:Creating metrics dataframe
2025-08-19 18:55:40,764:INFO:Initializing Dummy Classifier
2025-08-19 18:55:40,764:INFO:Total runtime is 0.25965334971745807 minutes
2025-08-19 18:55:40,764:INFO:SubProcess create_model() called ==================================
2025-08-19 18:55:40,765:INFO:Initializing create_model()
2025-08-19 18:55:40,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3202c76d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:40,765:INFO:Checking exceptions
2025-08-19 18:55:40,765:INFO:Importing libraries
2025-08-19 18:55:40,765:INFO:Copying training dataset
2025-08-19 18:55:40,767:INFO:Defining folds
2025-08-19 18:55:40,767:INFO:Declaring metric variables
2025-08-19 18:55:40,767:INFO:Importing untrained model
2025-08-19 18:55:40,767:INFO:Dummy Classifier Imported successfully
2025-08-19 18:55:40,767:INFO:Starting cross validation
2025-08-19 18:55:40,768:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:40,812:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,814:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,820:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,838:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,841:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,842:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,854:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,858:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,858:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,858:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:55:40,873:INFO:Calculating mean and std
2025-08-19 18:55:40,873:INFO:Creating metrics dataframe
2025-08-19 18:55:40,874:INFO:Uploading results into container
2025-08-19 18:55:40,874:INFO:Uploading model into container now
2025-08-19 18:55:40,874:INFO:_master_model_container: 16
2025-08-19 18:55:40,874:INFO:_display_container: 2
2025-08-19 18:55:40,875:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:55:40,875:INFO:create_model() successfully completed......................................
2025-08-19 18:55:40,945:INFO:SubProcess create_model() end ==================================
2025-08-19 18:55:40,945:INFO:Creating metrics dataframe
2025-08-19 18:55:40,947:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:55:40,947:INFO:Initializing create_model()
2025-08-19 18:55:40,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:40,947:INFO:Checking exceptions
2025-08-19 18:55:40,948:INFO:Importing libraries
2025-08-19 18:55:40,948:INFO:Copying training dataset
2025-08-19 18:55:40,950:INFO:Defining folds
2025-08-19 18:55:40,950:INFO:Declaring metric variables
2025-08-19 18:55:40,950:INFO:Importing untrained model
2025-08-19 18:55:40,950:INFO:Declaring custom model
2025-08-19 18:55:40,950:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:55:40,950:INFO:Cross validation set to False
2025-08-19 18:55:40,950:INFO:Fitting Model
2025-08-19 18:55:40,975:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:55:40,975:INFO:create_model() successfully completed......................................
2025-08-19 18:55:41,048:INFO:_master_model_container: 16
2025-08-19 18:55:41,048:INFO:_display_container: 2
2025-08-19 18:55:41,048:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:55:41,048:INFO:compare_models() successfully completed......................................
2025-08-19 18:55:41,049:INFO:Initializing create_model()
2025-08-19 18:55:41,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:41,049:INFO:Checking exceptions
2025-08-19 18:55:41,050:INFO:Importing libraries
2025-08-19 18:55:41,050:INFO:Copying training dataset
2025-08-19 18:55:41,051:INFO:Defining folds
2025-08-19 18:55:41,051:INFO:Declaring metric variables
2025-08-19 18:55:41,052:INFO:Importing untrained model
2025-08-19 18:55:41,052:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:55:41,052:INFO:Starting cross validation
2025-08-19 18:55:41,053:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:41,169:INFO:Calculating mean and std
2025-08-19 18:55:41,169:INFO:Creating metrics dataframe
2025-08-19 18:55:41,170:INFO:Finalizing model
2025-08-19 18:55:41,196:INFO:Uploading results into container
2025-08-19 18:55:41,197:INFO:Uploading model into container now
2025-08-19 18:55:41,197:INFO:_master_model_container: 17
2025-08-19 18:55:41,197:INFO:_display_container: 3
2025-08-19 18:55:41,197:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:55:41,197:INFO:create_model() successfully completed......................................
2025-08-19 18:55:41,267:INFO:Initializing finalize_model()
2025-08-19 18:55:41,267:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:41,267:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:55:41,269:INFO:Initializing create_model()
2025-08-19 18:55:41,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:41,269:INFO:Checking exceptions
2025-08-19 18:55:41,270:INFO:Importing libraries
2025-08-19 18:55:41,270:INFO:Copying training dataset
2025-08-19 18:55:41,270:INFO:Defining folds
2025-08-19 18:55:41,270:INFO:Declaring metric variables
2025-08-19 18:55:41,270:INFO:Importing untrained model
2025-08-19 18:55:41,270:INFO:Declaring custom model
2025-08-19 18:55:41,270:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:55:41,271:INFO:Cross validation set to False
2025-08-19 18:55:41,271:INFO:Fitting Model
2025-08-19 18:55:41,307:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:55:41,307:INFO:create_model() successfully completed......................................
2025-08-19 18:55:41,393:INFO:_master_model_container: 17
2025-08-19 18:55:41,393:INFO:_display_container: 3
2025-08-19 18:55:41,398:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:55:41,398:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:41,481:INFO:Initializing predict_model()
2025-08-19 18:55:41,481:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:55:41,481:INFO:Checking exceptions
2025-08-19 18:55:41,481:INFO:Preloading libraries
2025-08-19 18:55:41,482:INFO:Set up data.
2025-08-19 18:55:41,485:INFO:Set up index.
2025-08-19 18:55:41,579:INFO:Initializing create_model()
2025-08-19 18:55:41,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:41,579:INFO:Checking exceptions
2025-08-19 18:55:41,580:INFO:Importing libraries
2025-08-19 18:55:41,580:INFO:Copying training dataset
2025-08-19 18:55:41,582:INFO:Defining folds
2025-08-19 18:55:41,582:INFO:Declaring metric variables
2025-08-19 18:55:41,582:INFO:Importing untrained model
2025-08-19 18:55:41,582:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:55:41,583:INFO:Starting cross validation
2025-08-19 18:55:41,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:51,597:INFO:Calculating mean and std
2025-08-19 18:55:51,598:INFO:Creating metrics dataframe
2025-08-19 18:55:51,600:INFO:Finalizing model
2025-08-19 18:55:52,900:INFO:Uploading results into container
2025-08-19 18:55:52,900:INFO:Uploading model into container now
2025-08-19 18:55:52,901:INFO:_master_model_container: 18
2025-08-19 18:55:52,901:INFO:_display_container: 5
2025-08-19 18:55:52,901:INFO:<catboost.core.CatBoostClassifier object at 0x307e10820>
2025-08-19 18:55:52,901:INFO:create_model() successfully completed......................................
2025-08-19 18:55:53,002:INFO:Initializing finalize_model()
2025-08-19 18:55:53,002:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=<catboost.core.CatBoostClassifier object at 0x307e10820>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:53,002:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x307e10820>
2025-08-19 18:55:53,003:INFO:Initializing create_model()
2025-08-19 18:55:53,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=<catboost.core.CatBoostClassifier object at 0x307e10820>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:53,004:INFO:Checking exceptions
2025-08-19 18:55:53,004:INFO:Importing libraries
2025-08-19 18:55:53,004:INFO:Copying training dataset
2025-08-19 18:55:53,004:INFO:Defining folds
2025-08-19 18:55:53,005:INFO:Declaring metric variables
2025-08-19 18:55:53,005:INFO:Importing untrained model
2025-08-19 18:55:53,005:INFO:Declaring custom model
2025-08-19 18:55:53,005:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:55:53,005:INFO:Cross validation set to False
2025-08-19 18:55:53,005:INFO:Fitting Model
2025-08-19 18:55:54,343:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307f6c730>)],
         verbose=False)
2025-08-19 18:55:54,343:INFO:create_model() successfully completed......................................
2025-08-19 18:55:54,418:INFO:_master_model_container: 18
2025-08-19 18:55:54,419:INFO:_display_container: 5
2025-08-19 18:55:54,422:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307f6c730>)],
         verbose=False)
2025-08-19 18:55:54,422:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:54,492:INFO:Initializing predict_model()
2025-08-19 18:55:54,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307f6c730>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:55:54,493:INFO:Checking exceptions
2025-08-19 18:55:54,493:INFO:Preloading libraries
2025-08-19 18:55:54,493:INFO:Set up data.
2025-08-19 18:55:54,496:INFO:Set up index.
2025-08-19 18:55:54,584:INFO:Initializing create_model()
2025-08-19 18:55:54,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:54,584:INFO:Checking exceptions
2025-08-19 18:55:54,585:INFO:Importing libraries
2025-08-19 18:55:54,585:INFO:Copying training dataset
2025-08-19 18:55:54,587:INFO:Defining folds
2025-08-19 18:55:54,587:INFO:Declaring metric variables
2025-08-19 18:55:54,587:INFO:Importing untrained model
2025-08-19 18:55:54,587:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:55:54,587:INFO:Starting cross validation
2025-08-19 18:55:54,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:55,150:INFO:Calculating mean and std
2025-08-19 18:55:55,150:INFO:Creating metrics dataframe
2025-08-19 18:55:55,152:INFO:Finalizing model
2025-08-19 18:55:55,259:INFO:Uploading results into container
2025-08-19 18:55:55,259:INFO:Uploading model into container now
2025-08-19 18:55:55,260:INFO:_master_model_container: 19
2025-08-19 18:55:55,260:INFO:_display_container: 7
2025-08-19 18:55:55,260:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:55:55,260:INFO:create_model() successfully completed......................................
2025-08-19 18:55:55,333:INFO:Initializing finalize_model()
2025-08-19 18:55:55,333:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:55,333:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:55:55,335:INFO:Initializing create_model()
2025-08-19 18:55:55,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:55,335:INFO:Checking exceptions
2025-08-19 18:55:55,335:INFO:Importing libraries
2025-08-19 18:55:55,336:INFO:Copying training dataset
2025-08-19 18:55:55,336:INFO:Defining folds
2025-08-19 18:55:55,336:INFO:Declaring metric variables
2025-08-19 18:55:55,336:INFO:Importing untrained model
2025-08-19 18:55:55,336:INFO:Declaring custom model
2025-08-19 18:55:55,336:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:55:55,337:INFO:Cross validation set to False
2025-08-19 18:55:55,337:INFO:Fitting Model
2025-08-19 18:55:55,451:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:55:55,451:INFO:create_model() successfully completed......................................
2025-08-19 18:55:55,523:INFO:_master_model_container: 19
2025-08-19 18:55:55,523:INFO:_display_container: 7
2025-08-19 18:55:55,527:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:55:55,527:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:55,600:INFO:Initializing predict_model()
2025-08-19 18:55:55,601:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:55:55,601:INFO:Checking exceptions
2025-08-19 18:55:55,601:INFO:Preloading libraries
2025-08-19 18:55:55,601:INFO:Set up data.
2025-08-19 18:55:55,604:INFO:Set up index.
2025-08-19 18:55:55,717:INFO:Initializing create_model()
2025-08-19 18:55:55,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:55,717:INFO:Checking exceptions
2025-08-19 18:55:55,718:INFO:Importing libraries
2025-08-19 18:55:55,720:INFO:Copying training dataset
2025-08-19 18:55:55,721:INFO:Defining folds
2025-08-19 18:55:55,721:INFO:Declaring metric variables
2025-08-19 18:55:55,721:INFO:Importing untrained model
2025-08-19 18:55:55,722:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:55:55,722:INFO:Starting cross validation
2025-08-19 18:55:55,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:55:55,749:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,749:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,751:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,764:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,765:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,770:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,786:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,820:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,934:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:55,943:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:56,069:INFO:Calculating mean and std
2025-08-19 18:55:56,069:INFO:Creating metrics dataframe
2025-08-19 18:55:56,070:INFO:Finalizing model
2025-08-19 18:55:56,089:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:56,203:INFO:Uploading results into container
2025-08-19 18:55:56,204:INFO:Uploading model into container now
2025-08-19 18:55:56,204:INFO:_master_model_container: 20
2025-08-19 18:55:56,204:INFO:_display_container: 9
2025-08-19 18:55:56,204:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:55:56,204:INFO:create_model() successfully completed......................................
2025-08-19 18:55:56,273:INFO:Initializing finalize_model()
2025-08-19 18:55:56,273:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:55:56,273:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:55:56,274:INFO:Initializing create_model()
2025-08-19 18:55:56,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:56,274:INFO:Checking exceptions
2025-08-19 18:55:56,275:INFO:Importing libraries
2025-08-19 18:55:56,275:INFO:Copying training dataset
2025-08-19 18:55:56,275:INFO:Defining folds
2025-08-19 18:55:56,275:INFO:Declaring metric variables
2025-08-19 18:55:56,275:INFO:Importing untrained model
2025-08-19 18:55:56,275:INFO:Declaring custom model
2025-08-19 18:55:56,276:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:55:56,276:INFO:Cross validation set to False
2025-08-19 18:55:56,276:INFO:Fitting Model
2025-08-19 18:55:56,296:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:55:56,480:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:55:56,480:INFO:create_model() successfully completed......................................
2025-08-19 18:55:56,718:INFO:_master_model_container: 20
2025-08-19 18:55:56,718:INFO:_display_container: 9
2025-08-19 18:55:56,722:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:55:56,722:INFO:finalize_model() successfully completed......................................
2025-08-19 18:55:56,812:INFO:Initializing predict_model()
2025-08-19 18:55:56,812:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:55:56,812:INFO:Checking exceptions
2025-08-19 18:55:56,812:INFO:Preloading libraries
2025-08-19 18:55:56,812:INFO:Set up data.
2025-08-19 18:55:56,816:INFO:Set up index.
2025-08-19 18:55:56,906:INFO:Initializing create_model()
2025-08-19 18:55:56,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:55:56,906:INFO:Checking exceptions
2025-08-19 18:55:56,907:INFO:Importing libraries
2025-08-19 18:55:56,907:INFO:Copying training dataset
2025-08-19 18:55:56,909:INFO:Defining folds
2025-08-19 18:55:56,909:INFO:Declaring metric variables
2025-08-19 18:55:56,909:INFO:Importing untrained model
2025-08-19 18:55:56,909:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:55:56,910:INFO:Starting cross validation
2025-08-19 18:55:56,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:00,149:INFO:Calculating mean and std
2025-08-19 18:56:00,150:INFO:Creating metrics dataframe
2025-08-19 18:56:00,151:INFO:Finalizing model
2025-08-19 18:56:00,170:INFO:[LightGBM] [Info] Number of positive: 480, number of negative: 288
2025-08-19 18:56:00,170:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000319 seconds.
2025-08-19 18:56:00,170:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:56:00,170:INFO:[LightGBM] [Info] Total Bins 6375
2025-08-19 18:56:00,171:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:56:00,171:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.625000 -> initscore=0.510826
2025-08-19 18:56:00,171:INFO:[LightGBM] [Info] Start training from score 0.510826
2025-08-19 18:56:00,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,628:INFO:Uploading results into container
2025-08-19 18:56:00,628:INFO:Uploading model into container now
2025-08-19 18:56:00,628:INFO:_master_model_container: 21
2025-08-19 18:56:00,628:INFO:_display_container: 11
2025-08-19 18:56:00,629:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:56:00,629:INFO:create_model() successfully completed......................................
2025-08-19 18:56:00,710:INFO:Initializing finalize_model()
2025-08-19 18:56:00,710:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:00,710:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:56:00,711:INFO:Initializing create_model()
2025-08-19 18:56:00,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:00,711:INFO:Checking exceptions
2025-08-19 18:56:00,712:INFO:Importing libraries
2025-08-19 18:56:00,712:INFO:Copying training dataset
2025-08-19 18:56:00,712:INFO:Defining folds
2025-08-19 18:56:00,712:INFO:Declaring metric variables
2025-08-19 18:56:00,712:INFO:Importing untrained model
2025-08-19 18:56:00,712:INFO:Declaring custom model
2025-08-19 18:56:00,713:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:56:00,714:INFO:Cross validation set to False
2025-08-19 18:56:00,714:INFO:Fitting Model
2025-08-19 18:56:00,733:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:56:00,734:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000340 seconds.
2025-08-19 18:56:00,734:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:56:00,734:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:56:00,734:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:56:00,734:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:56:00,734:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:56:00,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:00,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:01,223:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:56:01,223:INFO:create_model() successfully completed......................................
2025-08-19 18:56:01,289:INFO:_master_model_container: 21
2025-08-19 18:56:01,289:INFO:_display_container: 11
2025-08-19 18:56:01,294:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:56:01,294:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:01,363:INFO:Initializing predict_model()
2025-08-19 18:56:01,364:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:01,364:INFO:Checking exceptions
2025-08-19 18:56:01,364:INFO:Preloading libraries
2025-08-19 18:56:01,364:INFO:Set up data.
2025-08-19 18:56:01,367:INFO:Set up index.
2025-08-19 18:56:01,454:INFO:Initializing create_model()
2025-08-19 18:56:01,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:01,454:INFO:Checking exceptions
2025-08-19 18:56:01,455:INFO:Importing libraries
2025-08-19 18:56:01,455:INFO:Copying training dataset
2025-08-19 18:56:01,457:INFO:Defining folds
2025-08-19 18:56:01,457:INFO:Declaring metric variables
2025-08-19 18:56:01,457:INFO:Importing untrained model
2025-08-19 18:56:01,457:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:56:01,457:INFO:Starting cross validation
2025-08-19 18:56:01,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:02,410:INFO:Calculating mean and std
2025-08-19 18:56:02,411:INFO:Creating metrics dataframe
2025-08-19 18:56:02,412:INFO:Finalizing model
2025-08-19 18:56:02,855:INFO:Uploading results into container
2025-08-19 18:56:02,855:INFO:Uploading model into container now
2025-08-19 18:56:02,856:INFO:_master_model_container: 22
2025-08-19 18:56:02,856:INFO:_display_container: 13
2025-08-19 18:56:02,856:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:56:02,856:INFO:create_model() successfully completed......................................
2025-08-19 18:56:02,925:INFO:Initializing finalize_model()
2025-08-19 18:56:02,925:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:02,926:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:56:02,927:INFO:Initializing create_model()
2025-08-19 18:56:02,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:02,927:INFO:Checking exceptions
2025-08-19 18:56:02,928:INFO:Importing libraries
2025-08-19 18:56:02,928:INFO:Copying training dataset
2025-08-19 18:56:02,928:INFO:Defining folds
2025-08-19 18:56:02,928:INFO:Declaring metric variables
2025-08-19 18:56:02,928:INFO:Importing untrained model
2025-08-19 18:56:02,928:INFO:Declaring custom model
2025-08-19 18:56:02,928:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:56:02,929:INFO:Cross validation set to False
2025-08-19 18:56:02,929:INFO:Fitting Model
2025-08-19 18:56:03,487:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:56:03,487:INFO:create_model() successfully completed......................................
2025-08-19 18:56:03,564:INFO:_master_model_container: 22
2025-08-19 18:56:03,564:INFO:_display_container: 13
2025-08-19 18:56:03,568:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:56:03,568:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:03,648:INFO:Initializing predict_model()
2025-08-19 18:56:03,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:03,648:INFO:Checking exceptions
2025-08-19 18:56:03,648:INFO:Preloading libraries
2025-08-19 18:56:03,648:INFO:Set up data.
2025-08-19 18:56:03,652:INFO:Set up index.
2025-08-19 18:56:03,744:INFO:Initializing create_model()
2025-08-19 18:56:03,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:03,745:INFO:Checking exceptions
2025-08-19 18:56:03,745:INFO:Importing libraries
2025-08-19 18:56:03,745:INFO:Copying training dataset
2025-08-19 18:56:03,747:INFO:Defining folds
2025-08-19 18:56:03,747:INFO:Declaring metric variables
2025-08-19 18:56:03,747:INFO:Importing untrained model
2025-08-19 18:56:03,748:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:56:03,748:INFO:Starting cross validation
2025-08-19 18:56:03,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:03,917:INFO:Calculating mean and std
2025-08-19 18:56:03,917:INFO:Creating metrics dataframe
2025-08-19 18:56:03,918:INFO:Finalizing model
2025-08-19 18:56:04,045:INFO:Uploading results into container
2025-08-19 18:56:04,045:INFO:Uploading model into container now
2025-08-19 18:56:04,045:INFO:_master_model_container: 23
2025-08-19 18:56:04,045:INFO:_display_container: 15
2025-08-19 18:56:04,046:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:56:04,046:INFO:create_model() successfully completed......................................
2025-08-19 18:56:04,115:INFO:Initializing finalize_model()
2025-08-19 18:56:04,115:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:04,116:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:56:04,117:INFO:Initializing create_model()
2025-08-19 18:56:04,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:04,117:INFO:Checking exceptions
2025-08-19 18:56:04,118:INFO:Importing libraries
2025-08-19 18:56:04,118:INFO:Copying training dataset
2025-08-19 18:56:04,118:INFO:Defining folds
2025-08-19 18:56:04,118:INFO:Declaring metric variables
2025-08-19 18:56:04,118:INFO:Importing untrained model
2025-08-19 18:56:04,118:INFO:Declaring custom model
2025-08-19 18:56:04,118:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:56:04,119:INFO:Cross validation set to False
2025-08-19 18:56:04,119:INFO:Fitting Model
2025-08-19 18:56:04,261:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:56:04,261:INFO:create_model() successfully completed......................................
2025-08-19 18:56:04,333:INFO:_master_model_container: 23
2025-08-19 18:56:04,333:INFO:_display_container: 15
2025-08-19 18:56:04,337:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:56:04,337:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:04,410:INFO:Initializing predict_model()
2025-08-19 18:56:04,410:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:04,410:INFO:Checking exceptions
2025-08-19 18:56:04,410:INFO:Preloading libraries
2025-08-19 18:56:04,410:INFO:Set up data.
2025-08-19 18:56:04,413:INFO:Set up index.
2025-08-19 18:56:04,498:INFO:Initializing create_model()
2025-08-19 18:56:04,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:04,498:INFO:Checking exceptions
2025-08-19 18:56:04,499:INFO:Importing libraries
2025-08-19 18:56:04,499:INFO:Copying training dataset
2025-08-19 18:56:04,501:INFO:Defining folds
2025-08-19 18:56:04,501:INFO:Declaring metric variables
2025-08-19 18:56:04,501:INFO:Importing untrained model
2025-08-19 18:56:04,501:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:56:04,501:INFO:Starting cross validation
2025-08-19 18:56:04,502:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:04,874:INFO:Calculating mean and std
2025-08-19 18:56:04,874:INFO:Creating metrics dataframe
2025-08-19 18:56:04,875:INFO:Finalizing model
2025-08-19 18:56:04,957:INFO:Uploading results into container
2025-08-19 18:56:04,958:INFO:Uploading model into container now
2025-08-19 18:56:04,958:INFO:_master_model_container: 24
2025-08-19 18:56:04,958:INFO:_display_container: 17
2025-08-19 18:56:04,958:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:56:04,958:INFO:create_model() successfully completed......................................
2025-08-19 18:56:05,028:INFO:Initializing finalize_model()
2025-08-19 18:56:05,029:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:05,029:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:56:05,030:INFO:Initializing create_model()
2025-08-19 18:56:05,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:05,030:INFO:Checking exceptions
2025-08-19 18:56:05,031:INFO:Importing libraries
2025-08-19 18:56:05,031:INFO:Copying training dataset
2025-08-19 18:56:05,031:INFO:Defining folds
2025-08-19 18:56:05,031:INFO:Declaring metric variables
2025-08-19 18:56:05,031:INFO:Importing untrained model
2025-08-19 18:56:05,031:INFO:Declaring custom model
2025-08-19 18:56:05,031:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:56:05,032:INFO:Cross validation set to False
2025-08-19 18:56:05,032:INFO:Fitting Model
2025-08-19 18:56:05,122:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:56:05,122:INFO:create_model() successfully completed......................................
2025-08-19 18:56:05,192:INFO:_master_model_container: 24
2025-08-19 18:56:05,192:INFO:_display_container: 17
2025-08-19 18:56:05,196:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:56:05,196:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:05,269:INFO:Initializing predict_model()
2025-08-19 18:56:05,269:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:05,269:INFO:Checking exceptions
2025-08-19 18:56:05,269:INFO:Preloading libraries
2025-08-19 18:56:05,269:INFO:Set up data.
2025-08-19 18:56:05,272:INFO:Set up index.
2025-08-19 18:56:05,416:INFO:Initializing create_model()
2025-08-19 18:56:05,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:05,416:INFO:Checking exceptions
2025-08-19 18:56:05,417:INFO:Importing libraries
2025-08-19 18:56:05,417:INFO:Copying training dataset
2025-08-19 18:56:05,418:INFO:Defining folds
2025-08-19 18:56:05,418:INFO:Declaring metric variables
2025-08-19 18:56:05,418:INFO:Importing untrained model
2025-08-19 18:56:05,418:INFO:Dummy Classifier Imported successfully
2025-08-19 18:56:05,418:INFO:Starting cross validation
2025-08-19 18:56:05,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:05,476:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,488:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,495:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,497:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,499:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,506:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,512:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,516:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,523:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,530:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:05,544:INFO:Calculating mean and std
2025-08-19 18:56:05,544:INFO:Creating metrics dataframe
2025-08-19 18:56:05,545:INFO:Finalizing model
2025-08-19 18:56:05,563:INFO:Uploading results into container
2025-08-19 18:56:05,563:INFO:Uploading model into container now
2025-08-19 18:56:05,564:INFO:_master_model_container: 25
2025-08-19 18:56:05,564:INFO:_display_container: 19
2025-08-19 18:56:05,564:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:56:05,564:INFO:create_model() successfully completed......................................
2025-08-19 18:56:05,637:INFO:Initializing finalize_model()
2025-08-19 18:56:05,637:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:05,637:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:56:05,638:INFO:Initializing create_model()
2025-08-19 18:56:05,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:05,638:INFO:Checking exceptions
2025-08-19 18:56:05,639:INFO:Importing libraries
2025-08-19 18:56:05,639:INFO:Copying training dataset
2025-08-19 18:56:05,639:INFO:Defining folds
2025-08-19 18:56:05,639:INFO:Declaring metric variables
2025-08-19 18:56:05,639:INFO:Importing untrained model
2025-08-19 18:56:05,639:INFO:Declaring custom model
2025-08-19 18:56:05,639:INFO:Dummy Classifier Imported successfully
2025-08-19 18:56:05,640:INFO:Cross validation set to False
2025-08-19 18:56:05,640:INFO:Fitting Model
2025-08-19 18:56:05,663:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:56:05,663:INFO:create_model() successfully completed......................................
2025-08-19 18:56:05,733:INFO:_master_model_container: 25
2025-08-19 18:56:05,733:INFO:_display_container: 19
2025-08-19 18:56:05,736:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:56:05,736:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:05,811:INFO:Initializing predict_model()
2025-08-19 18:56:05,811:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:05,811:INFO:Checking exceptions
2025-08-19 18:56:05,811:INFO:Preloading libraries
2025-08-19 18:56:05,811:INFO:Set up data.
2025-08-19 18:56:05,815:INFO:Set up index.
2025-08-19 18:56:05,828:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:06,075:INFO:Initializing create_model()
2025-08-19 18:56:06,075:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:06,075:INFO:Checking exceptions
2025-08-19 18:56:06,078:INFO:Importing libraries
2025-08-19 18:56:06,078:INFO:Copying training dataset
2025-08-19 18:56:06,086:INFO:Defining folds
2025-08-19 18:56:06,086:INFO:Declaring metric variables
2025-08-19 18:56:06,087:INFO:Importing untrained model
2025-08-19 18:56:06,088:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:56:06,088:INFO:Starting cross validation
2025-08-19 18:56:06,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:06,276:INFO:Calculating mean and std
2025-08-19 18:56:06,276:INFO:Creating metrics dataframe
2025-08-19 18:56:06,277:INFO:Finalizing model
2025-08-19 18:56:06,298:INFO:Uploading results into container
2025-08-19 18:56:06,298:INFO:Uploading model into container now
2025-08-19 18:56:06,298:INFO:_master_model_container: 26
2025-08-19 18:56:06,298:INFO:_display_container: 21
2025-08-19 18:56:06,299:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:56:06,299:INFO:create_model() successfully completed......................................
2025-08-19 18:56:06,377:INFO:Initializing finalize_model()
2025-08-19 18:56:06,377:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:06,377:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:56:06,381:INFO:Initializing create_model()
2025-08-19 18:56:06,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:06,381:INFO:Checking exceptions
2025-08-19 18:56:06,383:INFO:Importing libraries
2025-08-19 18:56:06,384:INFO:Copying training dataset
2025-08-19 18:56:06,384:INFO:Defining folds
2025-08-19 18:56:06,384:INFO:Declaring metric variables
2025-08-19 18:56:06,384:INFO:Importing untrained model
2025-08-19 18:56:06,384:INFO:Declaring custom model
2025-08-19 18:56:06,385:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:56:06,385:INFO:Cross validation set to False
2025-08-19 18:56:06,385:INFO:Fitting Model
2025-08-19 18:56:06,410:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:56:06,410:INFO:create_model() successfully completed......................................
2025-08-19 18:56:06,482:INFO:_master_model_container: 26
2025-08-19 18:56:06,482:INFO:_display_container: 21
2025-08-19 18:56:06,486:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:56:06,486:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:06,558:INFO:Initializing predict_model()
2025-08-19 18:56:06,558:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:06,558:INFO:Checking exceptions
2025-08-19 18:56:06,558:INFO:Preloading libraries
2025-08-19 18:56:06,558:INFO:Set up data.
2025-08-19 18:56:06,562:INFO:Set up index.
2025-08-19 18:56:06,654:INFO:Initializing create_model()
2025-08-19 18:56:06,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:06,654:INFO:Checking exceptions
2025-08-19 18:56:06,655:INFO:Importing libraries
2025-08-19 18:56:06,655:INFO:Copying training dataset
2025-08-19 18:56:06,656:INFO:Defining folds
2025-08-19 18:56:06,656:INFO:Declaring metric variables
2025-08-19 18:56:06,656:INFO:Importing untrained model
2025-08-19 18:56:06,657:INFO:Logistic Regression Imported successfully
2025-08-19 18:56:06,657:INFO:Starting cross validation
2025-08-19 18:56:06,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:06,740:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:06,760:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:06,769:INFO:Calculating mean and std
2025-08-19 18:56:06,770:INFO:Creating metrics dataframe
2025-08-19 18:56:06,771:INFO:Finalizing model
2025-08-19 18:56:06,826:INFO:Uploading results into container
2025-08-19 18:56:06,827:INFO:Uploading model into container now
2025-08-19 18:56:06,828:INFO:_master_model_container: 27
2025-08-19 18:56:06,828:INFO:_display_container: 23
2025-08-19 18:56:06,829:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:56:06,829:INFO:create_model() successfully completed......................................
2025-08-19 18:56:06,942:INFO:Initializing finalize_model()
2025-08-19 18:56:06,942:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:06,942:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:56:06,946:INFO:Initializing create_model()
2025-08-19 18:56:06,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:06,946:INFO:Checking exceptions
2025-08-19 18:56:06,948:INFO:Importing libraries
2025-08-19 18:56:06,949:INFO:Copying training dataset
2025-08-19 18:56:06,949:INFO:Defining folds
2025-08-19 18:56:06,949:INFO:Declaring metric variables
2025-08-19 18:56:06,949:INFO:Importing untrained model
2025-08-19 18:56:06,949:INFO:Declaring custom model
2025-08-19 18:56:06,956:INFO:Logistic Regression Imported successfully
2025-08-19 18:56:06,958:INFO:Cross validation set to False
2025-08-19 18:56:06,958:INFO:Fitting Model
2025-08-19 18:56:07,042:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:56:07,042:INFO:create_model() successfully completed......................................
2025-08-19 18:56:07,119:INFO:_master_model_container: 27
2025-08-19 18:56:07,119:INFO:_display_container: 23
2025-08-19 18:56:07,123:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:56:07,123:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:07,217:INFO:Initializing predict_model()
2025-08-19 18:56:07,217:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:07,217:INFO:Checking exceptions
2025-08-19 18:56:07,217:INFO:Preloading libraries
2025-08-19 18:56:07,217:INFO:Set up data.
2025-08-19 18:56:07,225:INFO:Set up index.
2025-08-19 18:56:07,343:INFO:Initializing create_model()
2025-08-19 18:56:07,343:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:07,344:INFO:Checking exceptions
2025-08-19 18:56:07,345:INFO:Importing libraries
2025-08-19 18:56:07,345:INFO:Copying training dataset
2025-08-19 18:56:07,346:INFO:Defining folds
2025-08-19 18:56:07,346:INFO:Declaring metric variables
2025-08-19 18:56:07,346:INFO:Importing untrained model
2025-08-19 18:56:07,346:INFO:Ridge Classifier Imported successfully
2025-08-19 18:56:07,346:INFO:Starting cross validation
2025-08-19 18:56:07,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:07,442:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:07,452:INFO:Calculating mean and std
2025-08-19 18:56:07,452:INFO:Creating metrics dataframe
2025-08-19 18:56:07,453:INFO:Finalizing model
2025-08-19 18:56:07,496:INFO:Uploading results into container
2025-08-19 18:56:07,496:INFO:Uploading model into container now
2025-08-19 18:56:07,497:INFO:_master_model_container: 28
2025-08-19 18:56:07,498:INFO:_display_container: 25
2025-08-19 18:56:07,498:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:56:07,499:INFO:create_model() successfully completed......................................
2025-08-19 18:56:07,659:INFO:Initializing finalize_model()
2025-08-19 18:56:07,659:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:07,659:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:56:07,660:INFO:Initializing create_model()
2025-08-19 18:56:07,660:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:07,660:INFO:Checking exceptions
2025-08-19 18:56:07,661:INFO:Importing libraries
2025-08-19 18:56:07,661:INFO:Copying training dataset
2025-08-19 18:56:07,661:INFO:Defining folds
2025-08-19 18:56:07,661:INFO:Declaring metric variables
2025-08-19 18:56:07,661:INFO:Importing untrained model
2025-08-19 18:56:07,661:INFO:Declaring custom model
2025-08-19 18:56:07,663:INFO:Ridge Classifier Imported successfully
2025-08-19 18:56:07,664:INFO:Cross validation set to False
2025-08-19 18:56:07,664:INFO:Fitting Model
2025-08-19 18:56:07,702:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:56:07,702:INFO:create_model() successfully completed......................................
2025-08-19 18:56:07,807:INFO:_master_model_container: 28
2025-08-19 18:56:07,807:INFO:_display_container: 25
2025-08-19 18:56:07,811:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:56:07,811:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:07,895:INFO:Initializing predict_model()
2025-08-19 18:56:07,895:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:07,895:INFO:Checking exceptions
2025-08-19 18:56:07,895:INFO:Preloading libraries
2025-08-19 18:56:07,895:INFO:Set up data.
2025-08-19 18:56:07,900:INFO:Set up index.
2025-08-19 18:56:08,005:INFO:Initializing create_model()
2025-08-19 18:56:08,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:08,005:INFO:Checking exceptions
2025-08-19 18:56:08,006:INFO:Importing libraries
2025-08-19 18:56:08,006:INFO:Copying training dataset
2025-08-19 18:56:08,007:INFO:Defining folds
2025-08-19 18:56:08,007:INFO:Declaring metric variables
2025-08-19 18:56:08,007:INFO:Importing untrained model
2025-08-19 18:56:08,007:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:56:08,007:INFO:Starting cross validation
2025-08-19 18:56:08,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:08,099:INFO:Calculating mean and std
2025-08-19 18:56:08,100:INFO:Creating metrics dataframe
2025-08-19 18:56:08,101:INFO:Finalizing model
2025-08-19 18:56:08,124:INFO:Uploading results into container
2025-08-19 18:56:08,125:INFO:Uploading model into container now
2025-08-19 18:56:08,126:INFO:_master_model_container: 29
2025-08-19 18:56:08,126:INFO:_display_container: 27
2025-08-19 18:56:08,127:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:56:08,127:INFO:create_model() successfully completed......................................
2025-08-19 18:56:08,236:INFO:Initializing finalize_model()
2025-08-19 18:56:08,237:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:08,237:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:56:08,238:INFO:Initializing create_model()
2025-08-19 18:56:08,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:08,238:INFO:Checking exceptions
2025-08-19 18:56:08,239:INFO:Importing libraries
2025-08-19 18:56:08,239:INFO:Copying training dataset
2025-08-19 18:56:08,239:INFO:Defining folds
2025-08-19 18:56:08,239:INFO:Declaring metric variables
2025-08-19 18:56:08,239:INFO:Importing untrained model
2025-08-19 18:56:08,239:INFO:Declaring custom model
2025-08-19 18:56:08,239:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:56:08,240:INFO:Cross validation set to False
2025-08-19 18:56:08,240:INFO:Fitting Model
2025-08-19 18:56:08,290:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:56:08,291:INFO:create_model() successfully completed......................................
2025-08-19 18:56:08,418:INFO:_master_model_container: 29
2025-08-19 18:56:08,418:INFO:_display_container: 27
2025-08-19 18:56:08,421:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:56:08,422:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:08,514:INFO:Initializing predict_model()
2025-08-19 18:56:08,514:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:08,514:INFO:Checking exceptions
2025-08-19 18:56:08,514:INFO:Preloading libraries
2025-08-19 18:56:08,514:INFO:Set up data.
2025-08-19 18:56:08,517:INFO:Set up index.
2025-08-19 18:56:08,610:INFO:Initializing create_model()
2025-08-19 18:56:08,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:08,610:INFO:Checking exceptions
2025-08-19 18:56:08,611:INFO:Importing libraries
2025-08-19 18:56:08,611:INFO:Copying training dataset
2025-08-19 18:56:08,613:INFO:Defining folds
2025-08-19 18:56:08,613:INFO:Declaring metric variables
2025-08-19 18:56:08,613:INFO:Importing untrained model
2025-08-19 18:56:08,613:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:56:08,613:INFO:Starting cross validation
2025-08-19 18:56:08,614:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:08,709:INFO:Calculating mean and std
2025-08-19 18:56:08,709:INFO:Creating metrics dataframe
2025-08-19 18:56:08,710:INFO:Finalizing model
2025-08-19 18:56:08,729:INFO:Uploading results into container
2025-08-19 18:56:08,729:INFO:Uploading model into container now
2025-08-19 18:56:08,729:INFO:_master_model_container: 30
2025-08-19 18:56:08,729:INFO:_display_container: 29
2025-08-19 18:56:08,730:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:56:08,730:INFO:create_model() successfully completed......................................
2025-08-19 18:56:08,798:INFO:Initializing finalize_model()
2025-08-19 18:56:08,798:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:08,798:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:56:08,799:INFO:Initializing create_model()
2025-08-19 18:56:08,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:08,799:INFO:Checking exceptions
2025-08-19 18:56:08,800:INFO:Importing libraries
2025-08-19 18:56:08,800:INFO:Copying training dataset
2025-08-19 18:56:08,800:INFO:Defining folds
2025-08-19 18:56:08,800:INFO:Declaring metric variables
2025-08-19 18:56:08,800:INFO:Importing untrained model
2025-08-19 18:56:08,800:INFO:Declaring custom model
2025-08-19 18:56:08,801:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:56:08,801:INFO:Cross validation set to False
2025-08-19 18:56:08,801:INFO:Fitting Model
2025-08-19 18:56:08,827:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:56:08,827:INFO:create_model() successfully completed......................................
2025-08-19 18:56:08,910:INFO:_master_model_container: 30
2025-08-19 18:56:08,910:INFO:_display_container: 29
2025-08-19 18:56:08,914:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:56:08,914:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:08,994:INFO:Initializing predict_model()
2025-08-19 18:56:08,994:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:08,994:INFO:Checking exceptions
2025-08-19 18:56:08,994:INFO:Preloading libraries
2025-08-19 18:56:08,994:INFO:Set up data.
2025-08-19 18:56:08,998:INFO:Set up index.
2025-08-19 18:56:09,098:INFO:Initializing create_model()
2025-08-19 18:56:09,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:09,098:INFO:Checking exceptions
2025-08-19 18:56:09,099:INFO:Importing libraries
2025-08-19 18:56:09,099:INFO:Copying training dataset
2025-08-19 18:56:09,100:INFO:Defining folds
2025-08-19 18:56:09,100:INFO:Declaring metric variables
2025-08-19 18:56:09,100:INFO:Importing untrained model
2025-08-19 18:56:09,100:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:56:09,100:INFO:Starting cross validation
2025-08-19 18:56:09,101:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:09,127:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,131:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,140:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,142:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,144:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,146:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,161:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,170:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,170:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,171:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,190:INFO:Calculating mean and std
2025-08-19 18:56:09,191:INFO:Creating metrics dataframe
2025-08-19 18:56:09,192:INFO:Finalizing model
2025-08-19 18:56:09,209:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,217:INFO:Uploading results into container
2025-08-19 18:56:09,218:INFO:Uploading model into container now
2025-08-19 18:56:09,218:INFO:_master_model_container: 31
2025-08-19 18:56:09,218:INFO:_display_container: 31
2025-08-19 18:56:09,219:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:56:09,220:INFO:create_model() successfully completed......................................
2025-08-19 18:56:09,314:INFO:Initializing finalize_model()
2025-08-19 18:56:09,314:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:09,314:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:56:09,315:INFO:Initializing create_model()
2025-08-19 18:56:09,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:09,315:INFO:Checking exceptions
2025-08-19 18:56:09,316:INFO:Importing libraries
2025-08-19 18:56:09,316:INFO:Copying training dataset
2025-08-19 18:56:09,316:INFO:Defining folds
2025-08-19 18:56:09,316:INFO:Declaring metric variables
2025-08-19 18:56:09,316:INFO:Importing untrained model
2025-08-19 18:56:09,316:INFO:Declaring custom model
2025-08-19 18:56:09,316:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:56:09,317:INFO:Cross validation set to False
2025-08-19 18:56:09,317:INFO:Fitting Model
2025-08-19 18:56:09,339:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:09,352:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:56:09,352:INFO:create_model() successfully completed......................................
2025-08-19 18:56:09,439:INFO:_master_model_container: 31
2025-08-19 18:56:09,439:INFO:_display_container: 31
2025-08-19 18:56:09,443:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:56:09,443:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:09,543:INFO:Initializing predict_model()
2025-08-19 18:56:09,543:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:09,543:INFO:Checking exceptions
2025-08-19 18:56:09,543:INFO:Preloading libraries
2025-08-19 18:56:09,543:INFO:Set up data.
2025-08-19 18:56:09,546:INFO:Set up index.
2025-08-19 18:56:09,664:INFO:Initializing create_model()
2025-08-19 18:56:09,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:09,664:INFO:Checking exceptions
2025-08-19 18:56:09,665:INFO:Importing libraries
2025-08-19 18:56:09,665:INFO:Copying training dataset
2025-08-19 18:56:09,666:INFO:Defining folds
2025-08-19 18:56:09,666:INFO:Declaring metric variables
2025-08-19 18:56:09,666:INFO:Importing untrained model
2025-08-19 18:56:09,667:INFO:Naive Bayes Imported successfully
2025-08-19 18:56:09,667:INFO:Starting cross validation
2025-08-19 18:56:09,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:09,768:INFO:Calculating mean and std
2025-08-19 18:56:09,769:INFO:Creating metrics dataframe
2025-08-19 18:56:09,770:INFO:Finalizing model
2025-08-19 18:56:09,787:INFO:Uploading results into container
2025-08-19 18:56:09,788:INFO:Uploading model into container now
2025-08-19 18:56:09,788:INFO:_master_model_container: 32
2025-08-19 18:56:09,788:INFO:_display_container: 33
2025-08-19 18:56:09,788:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:56:09,788:INFO:create_model() successfully completed......................................
2025-08-19 18:56:09,855:INFO:Initializing finalize_model()
2025-08-19 18:56:09,855:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:09,855:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:56:09,856:INFO:Initializing create_model()
2025-08-19 18:56:09,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:09,856:INFO:Checking exceptions
2025-08-19 18:56:09,857:INFO:Importing libraries
2025-08-19 18:56:09,857:INFO:Copying training dataset
2025-08-19 18:56:09,857:INFO:Defining folds
2025-08-19 18:56:09,857:INFO:Declaring metric variables
2025-08-19 18:56:09,857:INFO:Importing untrained model
2025-08-19 18:56:09,857:INFO:Declaring custom model
2025-08-19 18:56:09,857:INFO:Naive Bayes Imported successfully
2025-08-19 18:56:09,858:INFO:Cross validation set to False
2025-08-19 18:56:09,858:INFO:Fitting Model
2025-08-19 18:56:09,878:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:56:09,878:INFO:create_model() successfully completed......................................
2025-08-19 18:56:09,946:INFO:_master_model_container: 32
2025-08-19 18:56:09,946:INFO:_display_container: 33
2025-08-19 18:56:09,949:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:56:09,949:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:10,018:INFO:Initializing predict_model()
2025-08-19 18:56:10,018:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307fc9360>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307bfd120>)
2025-08-19 18:56:10,018:INFO:Checking exceptions
2025-08-19 18:56:10,019:INFO:Preloading libraries
2025-08-19 18:56:10,019:INFO:Set up data.
2025-08-19 18:56:10,022:INFO:Set up index.
2025-08-19 18:56:10,113:INFO:PyCaret ClassificationExperiment
2025-08-19 18:56:10,113:INFO:Logging name: clf-default-name
2025-08-19 18:56:10,113:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 18:56:10,113:INFO:version 3.3.2
2025-08-19 18:56:10,113:INFO:Initializing setup()
2025-08-19 18:56:10,113:INFO:self.USI: 4c4d
2025-08-19 18:56:10,113:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 18:56:10,113:INFO:Checking environment
2025-08-19 18:56:10,113:INFO:python_version: 3.10.18
2025-08-19 18:56:10,113:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 18:56:10,113:INFO:machine: arm64
2025-08-19 18:56:10,113:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 18:56:10,113:INFO:Memory: svmem(total=17179869184, available=3053191168, percent=82.2, used=5855576064, free=242352128, active=2840444928, inactive=2765340672, wired=3015131136)
2025-08-19 18:56:10,113:INFO:Physical Core: 8
2025-08-19 18:56:10,113:INFO:Logical Core: 8
2025-08-19 18:56:10,113:INFO:Checking libraries
2025-08-19 18:56:10,113:INFO:System:
2025-08-19 18:56:10,113:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 18:56:10,113:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 18:56:10,113:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 18:56:10,113:INFO:PyCaret required dependencies:
2025-08-19 18:56:10,113:INFO:                 pip: 25.2
2025-08-19 18:56:10,113:INFO:          setuptools: 80.9.0
2025-08-19 18:56:10,113:INFO:             pycaret: 3.3.2
2025-08-19 18:56:10,113:INFO:             IPython: 8.37.0
2025-08-19 18:56:10,113:INFO:          ipywidgets: 8.1.7
2025-08-19 18:56:10,113:INFO:                tqdm: 4.67.1
2025-08-19 18:56:10,113:INFO:               numpy: 1.25.2
2025-08-19 18:56:10,113:INFO:              pandas: 2.1.4
2025-08-19 18:56:10,113:INFO:              jinja2: 3.1.6
2025-08-19 18:56:10,113:INFO:               scipy: 1.9.3
2025-08-19 18:56:10,113:INFO:              joblib: 1.3.2
2025-08-19 18:56:10,113:INFO:             sklearn: 1.4.2
2025-08-19 18:56:10,113:INFO:                pyod: 2.0.5
2025-08-19 18:56:10,113:INFO:            imblearn: 0.12.4
2025-08-19 18:56:10,113:INFO:   category_encoders: 2.7.0
2025-08-19 18:56:10,113:INFO:            lightgbm: 4.6.0
2025-08-19 18:56:10,113:INFO:               numba: 0.61.2
2025-08-19 18:56:10,113:INFO:            requests: 2.32.4
2025-08-19 18:56:10,113:INFO:          matplotlib: 3.7.2
2025-08-19 18:56:10,114:INFO:          scikitplot: 0.3.7
2025-08-19 18:56:10,114:INFO:         yellowbrick: 1.5
2025-08-19 18:56:10,114:INFO:              plotly: 5.24.1
2025-08-19 18:56:10,114:INFO:    plotly-resampler: Not installed
2025-08-19 18:56:10,114:INFO:             kaleido: 1.0.0
2025-08-19 18:56:10,114:INFO:           schemdraw: 0.15
2025-08-19 18:56:10,114:INFO:         statsmodels: 0.14.5
2025-08-19 18:56:10,114:INFO:              sktime: 0.26.0
2025-08-19 18:56:10,114:INFO:               tbats: 1.1.3
2025-08-19 18:56:10,114:INFO:            pmdarima: 2.0.4
2025-08-19 18:56:10,114:INFO:              psutil: 7.0.0
2025-08-19 18:56:10,114:INFO:          markupsafe: 3.0.2
2025-08-19 18:56:10,114:INFO:             pickle5: Not installed
2025-08-19 18:56:10,114:INFO:         cloudpickle: 3.1.1
2025-08-19 18:56:10,114:INFO:         deprecation: 2.1.0
2025-08-19 18:56:10,114:INFO:              xxhash: 3.5.0
2025-08-19 18:56:10,114:INFO:           wurlitzer: 3.1.1
2025-08-19 18:56:10,114:INFO:PyCaret optional dependencies:
2025-08-19 18:56:10,114:INFO:                shap: 0.48.0
2025-08-19 18:56:10,114:INFO:           interpret: Not installed
2025-08-19 18:56:10,114:INFO:                umap: Not installed
2025-08-19 18:56:10,114:INFO:     ydata_profiling: Not installed
2025-08-19 18:56:10,114:INFO:  explainerdashboard: Not installed
2025-08-19 18:56:10,114:INFO:             autoviz: Not installed
2025-08-19 18:56:10,114:INFO:           fairlearn: Not installed
2025-08-19 18:56:10,114:INFO:          deepchecks: Not installed
2025-08-19 18:56:10,114:INFO:             xgboost: 3.0.4
2025-08-19 18:56:10,114:INFO:            catboost: 1.2.8
2025-08-19 18:56:10,114:INFO:              kmodes: Not installed
2025-08-19 18:56:10,114:INFO:             mlxtend: 0.23.4
2025-08-19 18:56:10,114:INFO:       statsforecast: Not installed
2025-08-19 18:56:10,114:INFO:        tune_sklearn: Not installed
2025-08-19 18:56:10,114:INFO:                 ray: Not installed
2025-08-19 18:56:10,114:INFO:            hyperopt: Not installed
2025-08-19 18:56:10,114:INFO:              optuna: 4.4.0
2025-08-19 18:56:10,114:INFO:               skopt: Not installed
2025-08-19 18:56:10,114:INFO:              mlflow: Not installed
2025-08-19 18:56:10,114:INFO:              gradio: Not installed
2025-08-19 18:56:10,114:INFO:             fastapi: Not installed
2025-08-19 18:56:10,114:INFO:             uvicorn: Not installed
2025-08-19 18:56:10,114:INFO:              m2cgen: Not installed
2025-08-19 18:56:10,114:INFO:           evidently: Not installed
2025-08-19 18:56:10,114:INFO:               fugue: Not installed
2025-08-19 18:56:10,114:INFO:           streamlit: Not installed
2025-08-19 18:56:10,114:INFO:             prophet: Not installed
2025-08-19 18:56:10,114:INFO:None
2025-08-19 18:56:10,114:INFO:Set up data.
2025-08-19 18:56:10,118:INFO:Set up folding strategy.
2025-08-19 18:56:10,118:INFO:Set up train/test split.
2025-08-19 18:56:10,118:INFO:Set up data.
2025-08-19 18:56:10,123:INFO:Set up index.
2025-08-19 18:56:10,123:INFO:Assigning column types.
2025-08-19 18:56:10,125:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 18:56:10,145:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:56:10,146:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:56:10,158:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:56:10,160:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:56:10,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 18:56:10,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:56:10,197:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:56:10,198:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:56:10,199:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 18:56:10,219:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:56:10,232:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:56:10,233:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:56:10,253:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 18:56:10,265:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:56:10,266:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:56:10,266:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 18:56:10,298:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:56:10,300:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:56:10,339:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:56:10,341:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:56:10,341:INFO:Preparing preprocessing pipeline...
2025-08-19 18:56:10,342:INFO:Set up label encoding.
2025-08-19 18:56:10,342:INFO:Set up simple imputation.
2025-08-19 18:56:10,343:INFO:Set up encoding of categorical features.
2025-08-19 18:56:10,385:INFO:Finished creating preprocessing pipeline.
2025-08-19 18:56:10,388:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 18:56:10,388:INFO:Creating final display dataframe.
2025-08-19 18:56:10,495:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              4c4d
2025-08-19 18:56:10,526:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:56:10,528:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:56:10,559:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 18:56:10,560:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 18:56:10,561:INFO:setup() successfully completed in 0.45s...............
2025-08-19 18:56:10,563:INFO:Initializing compare_models()
2025-08-19 18:56:10,563:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 18:56:10,563:INFO:Checking exceptions
2025-08-19 18:56:10,564:INFO:Preparing display monitor
2025-08-19 18:56:10,565:INFO:Initializing Logistic Regression
2025-08-19 18:56:10,565:INFO:Total runtime is 6.318092346191406e-07 minutes
2025-08-19 18:56:10,566:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:10,566:INFO:Initializing create_model()
2025-08-19 18:56:10,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:10,566:INFO:Checking exceptions
2025-08-19 18:56:10,566:INFO:Importing libraries
2025-08-19 18:56:10,566:INFO:Copying training dataset
2025-08-19 18:56:10,567:INFO:Defining folds
2025-08-19 18:56:10,567:INFO:Declaring metric variables
2025-08-19 18:56:10,567:INFO:Importing untrained model
2025-08-19 18:56:10,567:INFO:Logistic Regression Imported successfully
2025-08-19 18:56:10,567:INFO:Starting cross validation
2025-08-19 18:56:10,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:10,652:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:10,662:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:10,669:INFO:Calculating mean and std
2025-08-19 18:56:10,669:INFO:Creating metrics dataframe
2025-08-19 18:56:10,670:INFO:Uploading results into container
2025-08-19 18:56:10,670:INFO:Uploading model into container now
2025-08-19 18:56:10,670:INFO:_master_model_container: 1
2025-08-19 18:56:10,671:INFO:_display_container: 2
2025-08-19 18:56:10,671:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:56:10,671:INFO:create_model() successfully completed......................................
2025-08-19 18:56:10,743:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:10,743:INFO:Creating metrics dataframe
2025-08-19 18:56:10,744:INFO:Initializing K Neighbors Classifier
2025-08-19 18:56:10,745:INFO:Total runtime is 0.002991664409637451 minutes
2025-08-19 18:56:10,745:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:10,745:INFO:Initializing create_model()
2025-08-19 18:56:10,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:10,745:INFO:Checking exceptions
2025-08-19 18:56:10,745:INFO:Importing libraries
2025-08-19 18:56:10,745:INFO:Copying training dataset
2025-08-19 18:56:10,747:INFO:Defining folds
2025-08-19 18:56:10,747:INFO:Declaring metric variables
2025-08-19 18:56:10,747:INFO:Importing untrained model
2025-08-19 18:56:10,747:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:56:10,747:INFO:Starting cross validation
2025-08-19 18:56:10,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:10,836:INFO:Calculating mean and std
2025-08-19 18:56:10,836:INFO:Creating metrics dataframe
2025-08-19 18:56:10,837:INFO:Uploading results into container
2025-08-19 18:56:10,838:INFO:Uploading model into container now
2025-08-19 18:56:10,838:INFO:_master_model_container: 2
2025-08-19 18:56:10,838:INFO:_display_container: 2
2025-08-19 18:56:10,838:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:56:10,838:INFO:create_model() successfully completed......................................
2025-08-19 18:56:10,905:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:10,905:INFO:Creating metrics dataframe
2025-08-19 18:56:10,907:INFO:Initializing Naive Bayes
2025-08-19 18:56:10,907:INFO:Total runtime is 0.005685933430989583 minutes
2025-08-19 18:56:10,907:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:10,907:INFO:Initializing create_model()
2025-08-19 18:56:10,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:10,907:INFO:Checking exceptions
2025-08-19 18:56:10,907:INFO:Importing libraries
2025-08-19 18:56:10,907:INFO:Copying training dataset
2025-08-19 18:56:10,908:INFO:Defining folds
2025-08-19 18:56:10,908:INFO:Declaring metric variables
2025-08-19 18:56:10,908:INFO:Importing untrained model
2025-08-19 18:56:10,908:INFO:Naive Bayes Imported successfully
2025-08-19 18:56:10,908:INFO:Starting cross validation
2025-08-19 18:56:10,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:11,007:INFO:Calculating mean and std
2025-08-19 18:56:11,007:INFO:Creating metrics dataframe
2025-08-19 18:56:11,008:INFO:Uploading results into container
2025-08-19 18:56:11,008:INFO:Uploading model into container now
2025-08-19 18:56:11,008:INFO:_master_model_container: 3
2025-08-19 18:56:11,008:INFO:_display_container: 2
2025-08-19 18:56:11,009:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:56:11,009:INFO:create_model() successfully completed......................................
2025-08-19 18:56:11,076:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:11,077:INFO:Creating metrics dataframe
2025-08-19 18:56:11,078:INFO:Initializing Decision Tree Classifier
2025-08-19 18:56:11,078:INFO:Total runtime is 0.008540562788645427 minutes
2025-08-19 18:56:11,078:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:11,078:INFO:Initializing create_model()
2025-08-19 18:56:11,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:11,078:INFO:Checking exceptions
2025-08-19 18:56:11,078:INFO:Importing libraries
2025-08-19 18:56:11,078:INFO:Copying training dataset
2025-08-19 18:56:11,079:INFO:Defining folds
2025-08-19 18:56:11,079:INFO:Declaring metric variables
2025-08-19 18:56:11,079:INFO:Importing untrained model
2025-08-19 18:56:11,080:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:56:11,080:INFO:Starting cross validation
2025-08-19 18:56:11,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:11,177:INFO:Calculating mean and std
2025-08-19 18:56:11,177:INFO:Creating metrics dataframe
2025-08-19 18:56:11,178:INFO:Uploading results into container
2025-08-19 18:56:11,178:INFO:Uploading model into container now
2025-08-19 18:56:11,179:INFO:_master_model_container: 4
2025-08-19 18:56:11,179:INFO:_display_container: 2
2025-08-19 18:56:11,179:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:56:11,179:INFO:create_model() successfully completed......................................
2025-08-19 18:56:11,246:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:11,246:INFO:Creating metrics dataframe
2025-08-19 18:56:11,247:INFO:Initializing SVM - Linear Kernel
2025-08-19 18:56:11,247:INFO:Total runtime is 0.011365282535552978 minutes
2025-08-19 18:56:11,247:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:11,248:INFO:Initializing create_model()
2025-08-19 18:56:11,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:11,248:INFO:Checking exceptions
2025-08-19 18:56:11,248:INFO:Importing libraries
2025-08-19 18:56:11,248:INFO:Copying training dataset
2025-08-19 18:56:11,249:INFO:Defining folds
2025-08-19 18:56:11,249:INFO:Declaring metric variables
2025-08-19 18:56:11,249:INFO:Importing untrained model
2025-08-19 18:56:11,249:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:56:11,249:INFO:Starting cross validation
2025-08-19 18:56:11,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:11,337:INFO:Calculating mean and std
2025-08-19 18:56:11,337:INFO:Creating metrics dataframe
2025-08-19 18:56:11,338:INFO:Uploading results into container
2025-08-19 18:56:11,338:INFO:Uploading model into container now
2025-08-19 18:56:11,338:INFO:_master_model_container: 5
2025-08-19 18:56:11,338:INFO:_display_container: 2
2025-08-19 18:56:11,338:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:56:11,338:INFO:create_model() successfully completed......................................
2025-08-19 18:56:11,429:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:11,430:INFO:Creating metrics dataframe
2025-08-19 18:56:11,431:INFO:Initializing Ridge Classifier
2025-08-19 18:56:11,431:INFO:Total runtime is 0.014434715112050373 minutes
2025-08-19 18:56:11,432:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:11,432:INFO:Initializing create_model()
2025-08-19 18:56:11,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:11,432:INFO:Checking exceptions
2025-08-19 18:56:11,432:INFO:Importing libraries
2025-08-19 18:56:11,432:INFO:Copying training dataset
2025-08-19 18:56:11,434:INFO:Defining folds
2025-08-19 18:56:11,434:INFO:Declaring metric variables
2025-08-19 18:56:11,434:INFO:Importing untrained model
2025-08-19 18:56:11,435:INFO:Ridge Classifier Imported successfully
2025-08-19 18:56:11,435:INFO:Starting cross validation
2025-08-19 18:56:11,435:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:11,546:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:11,552:INFO:Calculating mean and std
2025-08-19 18:56:11,552:INFO:Creating metrics dataframe
2025-08-19 18:56:11,554:INFO:Uploading results into container
2025-08-19 18:56:11,554:INFO:Uploading model into container now
2025-08-19 18:56:11,554:INFO:_master_model_container: 6
2025-08-19 18:56:11,554:INFO:_display_container: 2
2025-08-19 18:56:11,554:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:56:11,554:INFO:create_model() successfully completed......................................
2025-08-19 18:56:11,626:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:11,626:INFO:Creating metrics dataframe
2025-08-19 18:56:11,628:INFO:Initializing Random Forest Classifier
2025-08-19 18:56:11,628:INFO:Total runtime is 0.017704216639200847 minutes
2025-08-19 18:56:11,628:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:11,628:INFO:Initializing create_model()
2025-08-19 18:56:11,628:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:11,628:INFO:Checking exceptions
2025-08-19 18:56:11,628:INFO:Importing libraries
2025-08-19 18:56:11,628:INFO:Copying training dataset
2025-08-19 18:56:11,629:INFO:Defining folds
2025-08-19 18:56:11,629:INFO:Declaring metric variables
2025-08-19 18:56:11,629:INFO:Importing untrained model
2025-08-19 18:56:11,629:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:56:11,630:INFO:Starting cross validation
2025-08-19 18:56:11,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:12,049:INFO:Calculating mean and std
2025-08-19 18:56:12,049:INFO:Creating metrics dataframe
2025-08-19 18:56:12,050:INFO:Uploading results into container
2025-08-19 18:56:12,050:INFO:Uploading model into container now
2025-08-19 18:56:12,051:INFO:_master_model_container: 7
2025-08-19 18:56:12,051:INFO:_display_container: 2
2025-08-19 18:56:12,051:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:56:12,051:INFO:create_model() successfully completed......................................
2025-08-19 18:56:12,130:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:12,130:INFO:Creating metrics dataframe
2025-08-19 18:56:12,131:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 18:56:12,131:INFO:Total runtime is 0.0260967493057251 minutes
2025-08-19 18:56:12,131:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:12,131:INFO:Initializing create_model()
2025-08-19 18:56:12,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:12,131:INFO:Checking exceptions
2025-08-19 18:56:12,131:INFO:Importing libraries
2025-08-19 18:56:12,131:INFO:Copying training dataset
2025-08-19 18:56:12,133:INFO:Defining folds
2025-08-19 18:56:12,133:INFO:Declaring metric variables
2025-08-19 18:56:12,133:INFO:Importing untrained model
2025-08-19 18:56:12,133:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:56:12,133:INFO:Starting cross validation
2025-08-19 18:56:12,134:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:12,161:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,164:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,172:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,173:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,175:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,211:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,225:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,228:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,229:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,237:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:12,258:INFO:Calculating mean and std
2025-08-19 18:56:12,258:INFO:Creating metrics dataframe
2025-08-19 18:56:12,259:INFO:Uploading results into container
2025-08-19 18:56:12,259:INFO:Uploading model into container now
2025-08-19 18:56:12,259:INFO:_master_model_container: 8
2025-08-19 18:56:12,259:INFO:_display_container: 2
2025-08-19 18:56:12,259:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:56:12,259:INFO:create_model() successfully completed......................................
2025-08-19 18:56:12,328:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:12,328:INFO:Creating metrics dataframe
2025-08-19 18:56:12,330:INFO:Initializing Ada Boost Classifier
2025-08-19 18:56:12,330:INFO:Total runtime is 0.0294059157371521 minutes
2025-08-19 18:56:12,330:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:12,330:INFO:Initializing create_model()
2025-08-19 18:56:12,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:12,330:INFO:Checking exceptions
2025-08-19 18:56:12,330:INFO:Importing libraries
2025-08-19 18:56:12,330:INFO:Copying training dataset
2025-08-19 18:56:12,331:INFO:Defining folds
2025-08-19 18:56:12,331:INFO:Declaring metric variables
2025-08-19 18:56:12,331:INFO:Importing untrained model
2025-08-19 18:56:12,331:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:56:12,332:INFO:Starting cross validation
2025-08-19 18:56:12,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:12,361:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,363:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,368:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,368:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,386:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,397:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,398:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,425:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,554:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,556:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:12,682:INFO:Calculating mean and std
2025-08-19 18:56:12,683:INFO:Creating metrics dataframe
2025-08-19 18:56:12,683:INFO:Uploading results into container
2025-08-19 18:56:12,684:INFO:Uploading model into container now
2025-08-19 18:56:12,684:INFO:_master_model_container: 9
2025-08-19 18:56:12,684:INFO:_display_container: 2
2025-08-19 18:56:12,684:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:56:12,684:INFO:create_model() successfully completed......................................
2025-08-19 18:56:12,765:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:12,765:INFO:Creating metrics dataframe
2025-08-19 18:56:12,766:INFO:Initializing Gradient Boosting Classifier
2025-08-19 18:56:12,766:INFO:Total runtime is 0.03668338060379028 minutes
2025-08-19 18:56:12,766:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:12,767:INFO:Initializing create_model()
2025-08-19 18:56:12,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:12,767:INFO:Checking exceptions
2025-08-19 18:56:12,767:INFO:Importing libraries
2025-08-19 18:56:12,767:INFO:Copying training dataset
2025-08-19 18:56:12,768:INFO:Defining folds
2025-08-19 18:56:12,768:INFO:Declaring metric variables
2025-08-19 18:56:12,768:INFO:Importing untrained model
2025-08-19 18:56:12,768:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:56:12,769:INFO:Starting cross validation
2025-08-19 18:56:12,769:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:13,778:INFO:Calculating mean and std
2025-08-19 18:56:13,778:INFO:Creating metrics dataframe
2025-08-19 18:56:13,779:INFO:Uploading results into container
2025-08-19 18:56:13,779:INFO:Uploading model into container now
2025-08-19 18:56:13,779:INFO:_master_model_container: 10
2025-08-19 18:56:13,779:INFO:_display_container: 2
2025-08-19 18:56:13,780:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:56:13,780:INFO:create_model() successfully completed......................................
2025-08-19 18:56:13,849:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:13,849:INFO:Creating metrics dataframe
2025-08-19 18:56:13,850:INFO:Initializing Linear Discriminant Analysis
2025-08-19 18:56:13,851:INFO:Total runtime is 0.054751630624135336 minutes
2025-08-19 18:56:13,851:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:13,851:INFO:Initializing create_model()
2025-08-19 18:56:13,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:13,851:INFO:Checking exceptions
2025-08-19 18:56:13,851:INFO:Importing libraries
2025-08-19 18:56:13,851:INFO:Copying training dataset
2025-08-19 18:56:13,852:INFO:Defining folds
2025-08-19 18:56:13,852:INFO:Declaring metric variables
2025-08-19 18:56:13,852:INFO:Importing untrained model
2025-08-19 18:56:13,852:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:56:13,852:INFO:Starting cross validation
2025-08-19 18:56:13,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:13,974:INFO:Calculating mean and std
2025-08-19 18:56:13,975:INFO:Creating metrics dataframe
2025-08-19 18:56:13,979:INFO:Uploading results into container
2025-08-19 18:56:13,980:INFO:Uploading model into container now
2025-08-19 18:56:13,980:INFO:_master_model_container: 11
2025-08-19 18:56:13,980:INFO:_display_container: 2
2025-08-19 18:56:13,980:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:56:13,980:INFO:create_model() successfully completed......................................
2025-08-19 18:56:14,089:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:14,089:INFO:Creating metrics dataframe
2025-08-19 18:56:14,091:INFO:Initializing Extra Trees Classifier
2025-08-19 18:56:14,091:INFO:Total runtime is 0.058752981821695964 minutes
2025-08-19 18:56:14,091:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:14,091:INFO:Initializing create_model()
2025-08-19 18:56:14,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:14,091:INFO:Checking exceptions
2025-08-19 18:56:14,091:INFO:Importing libraries
2025-08-19 18:56:14,091:INFO:Copying training dataset
2025-08-19 18:56:14,092:INFO:Defining folds
2025-08-19 18:56:14,092:INFO:Declaring metric variables
2025-08-19 18:56:14,092:INFO:Importing untrained model
2025-08-19 18:56:14,092:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:56:14,093:INFO:Starting cross validation
2025-08-19 18:56:14,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:14,600:INFO:Calculating mean and std
2025-08-19 18:56:14,600:INFO:Creating metrics dataframe
2025-08-19 18:56:14,602:INFO:Uploading results into container
2025-08-19 18:56:14,602:INFO:Uploading model into container now
2025-08-19 18:56:14,602:INFO:_master_model_container: 12
2025-08-19 18:56:14,602:INFO:_display_container: 2
2025-08-19 18:56:14,602:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:56:14,602:INFO:create_model() successfully completed......................................
2025-08-19 18:56:14,672:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:14,672:INFO:Creating metrics dataframe
2025-08-19 18:56:14,674:INFO:Initializing Extreme Gradient Boosting
2025-08-19 18:56:14,674:INFO:Total runtime is 0.06847288211186726 minutes
2025-08-19 18:56:14,674:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:14,674:INFO:Initializing create_model()
2025-08-19 18:56:14,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:14,674:INFO:Checking exceptions
2025-08-19 18:56:14,674:INFO:Importing libraries
2025-08-19 18:56:14,674:INFO:Copying training dataset
2025-08-19 18:56:14,675:INFO:Defining folds
2025-08-19 18:56:14,676:INFO:Declaring metric variables
2025-08-19 18:56:14,676:INFO:Importing untrained model
2025-08-19 18:56:14,676:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:56:14,676:INFO:Starting cross validation
2025-08-19 18:56:14,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:14,857:INFO:Calculating mean and std
2025-08-19 18:56:14,857:INFO:Creating metrics dataframe
2025-08-19 18:56:14,859:INFO:Uploading results into container
2025-08-19 18:56:14,859:INFO:Uploading model into container now
2025-08-19 18:56:14,860:INFO:_master_model_container: 13
2025-08-19 18:56:14,860:INFO:_display_container: 2
2025-08-19 18:56:14,860:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:56:14,860:INFO:create_model() successfully completed......................................
2025-08-19 18:56:14,932:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:14,932:INFO:Creating metrics dataframe
2025-08-19 18:56:14,933:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 18:56:14,934:INFO:Total runtime is 0.07280271848042806 minutes
2025-08-19 18:56:14,934:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:14,934:INFO:Initializing create_model()
2025-08-19 18:56:14,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:14,934:INFO:Checking exceptions
2025-08-19 18:56:14,934:INFO:Importing libraries
2025-08-19 18:56:14,934:INFO:Copying training dataset
2025-08-19 18:56:14,935:INFO:Defining folds
2025-08-19 18:56:14,935:INFO:Declaring metric variables
2025-08-19 18:56:14,935:INFO:Importing untrained model
2025-08-19 18:56:14,936:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:56:14,936:INFO:Starting cross validation
2025-08-19 18:56:14,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:18,336:INFO:Calculating mean and std
2025-08-19 18:56:18,337:INFO:Creating metrics dataframe
2025-08-19 18:56:18,338:INFO:Uploading results into container
2025-08-19 18:56:18,338:INFO:Uploading model into container now
2025-08-19 18:56:18,338:INFO:_master_model_container: 14
2025-08-19 18:56:18,338:INFO:_display_container: 2
2025-08-19 18:56:18,339:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:56:18,339:INFO:create_model() successfully completed......................................
2025-08-19 18:56:18,440:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:18,440:INFO:Creating metrics dataframe
2025-08-19 18:56:18,441:INFO:Initializing CatBoost Classifier
2025-08-19 18:56:18,441:INFO:Total runtime is 0.1312676986058553 minutes
2025-08-19 18:56:18,442:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:18,442:INFO:Initializing create_model()
2025-08-19 18:56:18,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:18,442:INFO:Checking exceptions
2025-08-19 18:56:18,442:INFO:Importing libraries
2025-08-19 18:56:18,442:INFO:Copying training dataset
2025-08-19 18:56:18,443:INFO:Defining folds
2025-08-19 18:56:18,443:INFO:Declaring metric variables
2025-08-19 18:56:18,443:INFO:Importing untrained model
2025-08-19 18:56:18,443:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:56:18,444:INFO:Starting cross validation
2025-08-19 18:56:18,444:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:26,730:INFO:Calculating mean and std
2025-08-19 18:56:26,731:INFO:Creating metrics dataframe
2025-08-19 18:56:26,734:INFO:Uploading results into container
2025-08-19 18:56:26,735:INFO:Uploading model into container now
2025-08-19 18:56:26,735:INFO:_master_model_container: 15
2025-08-19 18:56:26,735:INFO:_display_container: 2
2025-08-19 18:56:26,735:INFO:<catboost.core.CatBoostClassifier object at 0x308f32f80>
2025-08-19 18:56:26,735:INFO:create_model() successfully completed......................................
2025-08-19 18:56:26,840:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:26,840:INFO:Creating metrics dataframe
2025-08-19 18:56:26,842:INFO:Initializing Dummy Classifier
2025-08-19 18:56:26,842:INFO:Total runtime is 0.27126973470052085 minutes
2025-08-19 18:56:26,842:INFO:SubProcess create_model() called ==================================
2025-08-19 18:56:26,842:INFO:Initializing create_model()
2025-08-19 18:56:26,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x306642980>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:26,842:INFO:Checking exceptions
2025-08-19 18:56:26,842:INFO:Importing libraries
2025-08-19 18:56:26,842:INFO:Copying training dataset
2025-08-19 18:56:26,844:INFO:Defining folds
2025-08-19 18:56:26,844:INFO:Declaring metric variables
2025-08-19 18:56:26,844:INFO:Importing untrained model
2025-08-19 18:56:26,844:INFO:Dummy Classifier Imported successfully
2025-08-19 18:56:26,844:INFO:Starting cross validation
2025-08-19 18:56:26,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:26,888:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,902:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,905:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,913:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,914:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,919:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,926:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,926:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,936:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,937:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:26,952:INFO:Calculating mean and std
2025-08-19 18:56:26,952:INFO:Creating metrics dataframe
2025-08-19 18:56:26,953:INFO:Uploading results into container
2025-08-19 18:56:26,954:INFO:Uploading model into container now
2025-08-19 18:56:26,954:INFO:_master_model_container: 16
2025-08-19 18:56:26,954:INFO:_display_container: 2
2025-08-19 18:56:26,954:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:56:26,954:INFO:create_model() successfully completed......................................
2025-08-19 18:56:27,026:INFO:SubProcess create_model() end ==================================
2025-08-19 18:56:27,026:INFO:Creating metrics dataframe
2025-08-19 18:56:27,028:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 18:56:27,028:INFO:Initializing create_model()
2025-08-19 18:56:27,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:27,028:INFO:Checking exceptions
2025-08-19 18:56:27,029:INFO:Importing libraries
2025-08-19 18:56:27,029:INFO:Copying training dataset
2025-08-19 18:56:27,031:INFO:Defining folds
2025-08-19 18:56:27,031:INFO:Declaring metric variables
2025-08-19 18:56:27,031:INFO:Importing untrained model
2025-08-19 18:56:27,031:INFO:Declaring custom model
2025-08-19 18:56:27,031:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:56:27,032:INFO:Cross validation set to False
2025-08-19 18:56:27,032:INFO:Fitting Model
2025-08-19 18:56:27,057:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:56:27,057:INFO:create_model() successfully completed......................................
2025-08-19 18:56:27,129:INFO:_master_model_container: 16
2025-08-19 18:56:27,129:INFO:_display_container: 2
2025-08-19 18:56:27,129:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:56:27,129:INFO:compare_models() successfully completed......................................
2025-08-19 18:56:27,130:INFO:Initializing create_model()
2025-08-19 18:56:27,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:27,130:INFO:Checking exceptions
2025-08-19 18:56:27,131:INFO:Importing libraries
2025-08-19 18:56:27,131:INFO:Copying training dataset
2025-08-19 18:56:27,132:INFO:Defining folds
2025-08-19 18:56:27,132:INFO:Declaring metric variables
2025-08-19 18:56:27,132:INFO:Importing untrained model
2025-08-19 18:56:27,132:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:56:27,133:INFO:Starting cross validation
2025-08-19 18:56:27,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:27,245:INFO:Calculating mean and std
2025-08-19 18:56:27,245:INFO:Creating metrics dataframe
2025-08-19 18:56:27,246:INFO:Finalizing model
2025-08-19 18:56:27,272:INFO:Uploading results into container
2025-08-19 18:56:27,272:INFO:Uploading model into container now
2025-08-19 18:56:27,272:INFO:_master_model_container: 17
2025-08-19 18:56:27,272:INFO:_display_container: 3
2025-08-19 18:56:27,272:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:56:27,273:INFO:create_model() successfully completed......................................
2025-08-19 18:56:27,343:INFO:Initializing finalize_model()
2025-08-19 18:56:27,343:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:27,343:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 18:56:27,345:INFO:Initializing create_model()
2025-08-19 18:56:27,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:27,345:INFO:Checking exceptions
2025-08-19 18:56:27,346:INFO:Importing libraries
2025-08-19 18:56:27,346:INFO:Copying training dataset
2025-08-19 18:56:27,346:INFO:Defining folds
2025-08-19 18:56:27,346:INFO:Declaring metric variables
2025-08-19 18:56:27,346:INFO:Importing untrained model
2025-08-19 18:56:27,346:INFO:Declaring custom model
2025-08-19 18:56:27,346:INFO:Decision Tree Classifier Imported successfully
2025-08-19 18:56:27,347:INFO:Cross validation set to False
2025-08-19 18:56:27,347:INFO:Fitting Model
2025-08-19 18:56:27,384:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:56:27,384:INFO:create_model() successfully completed......................................
2025-08-19 18:56:27,452:INFO:_master_model_container: 17
2025-08-19 18:56:27,452:INFO:_display_container: 3
2025-08-19 18:56:27,456:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 18:56:27,456:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:27,528:INFO:Initializing predict_model()
2025-08-19 18:56:27,528:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:27,528:INFO:Checking exceptions
2025-08-19 18:56:27,528:INFO:Preloading libraries
2025-08-19 18:56:27,528:INFO:Set up data.
2025-08-19 18:56:27,532:INFO:Set up index.
2025-08-19 18:56:27,616:INFO:Initializing create_model()
2025-08-19 18:56:27,616:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:27,616:INFO:Checking exceptions
2025-08-19 18:56:27,617:INFO:Importing libraries
2025-08-19 18:56:27,617:INFO:Copying training dataset
2025-08-19 18:56:27,619:INFO:Defining folds
2025-08-19 18:56:27,619:INFO:Declaring metric variables
2025-08-19 18:56:27,619:INFO:Importing untrained model
2025-08-19 18:56:27,619:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:56:27,619:INFO:Starting cross validation
2025-08-19 18:56:27,620:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:37,250:INFO:Calculating mean and std
2025-08-19 18:56:37,251:INFO:Creating metrics dataframe
2025-08-19 18:56:37,254:INFO:Finalizing model
2025-08-19 18:56:38,867:INFO:Uploading results into container
2025-08-19 18:56:38,868:INFO:Uploading model into container now
2025-08-19 18:56:38,869:INFO:_master_model_container: 18
2025-08-19 18:56:38,869:INFO:_display_container: 5
2025-08-19 18:56:38,869:INFO:<catboost.core.CatBoostClassifier object at 0x31ff35240>
2025-08-19 18:56:38,869:INFO:create_model() successfully completed......................................
2025-08-19 18:56:39,002:INFO:Initializing finalize_model()
2025-08-19 18:56:39,002:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=<catboost.core.CatBoostClassifier object at 0x31ff35240>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:39,002:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x31ff35240>
2025-08-19 18:56:39,003:INFO:Initializing create_model()
2025-08-19 18:56:39,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=<catboost.core.CatBoostClassifier object at 0x31ff35240>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:39,004:INFO:Checking exceptions
2025-08-19 18:56:39,005:INFO:Importing libraries
2025-08-19 18:56:39,005:INFO:Copying training dataset
2025-08-19 18:56:39,005:INFO:Defining folds
2025-08-19 18:56:39,005:INFO:Declaring metric variables
2025-08-19 18:56:39,005:INFO:Importing untrained model
2025-08-19 18:56:39,005:INFO:Declaring custom model
2025-08-19 18:56:39,005:INFO:CatBoost Classifier Imported successfully
2025-08-19 18:56:39,006:INFO:Cross validation set to False
2025-08-19 18:56:39,006:INFO:Fitting Model
2025-08-19 18:56:40,573:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x3201da920>)],
         verbose=False)
2025-08-19 18:56:40,574:INFO:create_model() successfully completed......................................
2025-08-19 18:56:40,648:INFO:_master_model_container: 18
2025-08-19 18:56:40,649:INFO:_display_container: 5
2025-08-19 18:56:40,653:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x3201da920>)],
         verbose=False)
2025-08-19 18:56:40,653:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:40,733:INFO:Initializing predict_model()
2025-08-19 18:56:40,733:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x3201da920>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:40,733:INFO:Checking exceptions
2025-08-19 18:56:40,733:INFO:Preloading libraries
2025-08-19 18:56:40,734:INFO:Set up data.
2025-08-19 18:56:40,739:INFO:Set up index.
2025-08-19 18:56:40,835:INFO:Initializing create_model()
2025-08-19 18:56:40,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:40,836:INFO:Checking exceptions
2025-08-19 18:56:40,836:INFO:Importing libraries
2025-08-19 18:56:40,837:INFO:Copying training dataset
2025-08-19 18:56:40,838:INFO:Defining folds
2025-08-19 18:56:40,838:INFO:Declaring metric variables
2025-08-19 18:56:40,838:INFO:Importing untrained model
2025-08-19 18:56:40,839:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:56:40,839:INFO:Starting cross validation
2025-08-19 18:56:40,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:41,368:INFO:Calculating mean and std
2025-08-19 18:56:41,369:INFO:Creating metrics dataframe
2025-08-19 18:56:41,370:INFO:Finalizing model
2025-08-19 18:56:41,512:INFO:Uploading results into container
2025-08-19 18:56:41,513:INFO:Uploading model into container now
2025-08-19 18:56:41,513:INFO:_master_model_container: 19
2025-08-19 18:56:41,513:INFO:_display_container: 7
2025-08-19 18:56:41,514:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:56:41,514:INFO:create_model() successfully completed......................................
2025-08-19 18:56:41,598:INFO:Initializing finalize_model()
2025-08-19 18:56:41,598:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:41,598:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 18:56:41,599:INFO:Initializing create_model()
2025-08-19 18:56:41,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:41,599:INFO:Checking exceptions
2025-08-19 18:56:41,600:INFO:Importing libraries
2025-08-19 18:56:41,600:INFO:Copying training dataset
2025-08-19 18:56:41,600:INFO:Defining folds
2025-08-19 18:56:41,600:INFO:Declaring metric variables
2025-08-19 18:56:41,601:INFO:Importing untrained model
2025-08-19 18:56:41,601:INFO:Declaring custom model
2025-08-19 18:56:41,601:INFO:Random Forest Classifier Imported successfully
2025-08-19 18:56:41,602:INFO:Cross validation set to False
2025-08-19 18:56:41,602:INFO:Fitting Model
2025-08-19 18:56:41,736:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:56:41,737:INFO:create_model() successfully completed......................................
2025-08-19 18:56:41,811:INFO:_master_model_container: 19
2025-08-19 18:56:41,811:INFO:_display_container: 7
2025-08-19 18:56:41,816:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 18:56:41,816:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:41,897:INFO:Initializing predict_model()
2025-08-19 18:56:41,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:41,898:INFO:Checking exceptions
2025-08-19 18:56:41,898:INFO:Preloading libraries
2025-08-19 18:56:41,898:INFO:Set up data.
2025-08-19 18:56:41,902:INFO:Set up index.
2025-08-19 18:56:42,025:INFO:Initializing create_model()
2025-08-19 18:56:42,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:42,026:INFO:Checking exceptions
2025-08-19 18:56:42,027:INFO:Importing libraries
2025-08-19 18:56:42,029:INFO:Copying training dataset
2025-08-19 18:56:42,032:INFO:Defining folds
2025-08-19 18:56:42,032:INFO:Declaring metric variables
2025-08-19 18:56:42,032:INFO:Importing untrained model
2025-08-19 18:56:42,032:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:56:42,032:INFO:Starting cross validation
2025-08-19 18:56:42,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:42,067:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,067:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,072:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,082:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,093:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,101:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,108:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,129:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,256:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,270:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,431:INFO:Calculating mean and std
2025-08-19 18:56:42,432:INFO:Creating metrics dataframe
2025-08-19 18:56:42,433:INFO:Finalizing model
2025-08-19 18:56:42,457:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,592:INFO:Uploading results into container
2025-08-19 18:56:42,593:INFO:Uploading model into container now
2025-08-19 18:56:42,593:INFO:_master_model_container: 20
2025-08-19 18:56:42,593:INFO:_display_container: 9
2025-08-19 18:56:42,593:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:56:42,593:INFO:create_model() successfully completed......................................
2025-08-19 18:56:42,670:INFO:Initializing finalize_model()
2025-08-19 18:56:42,670:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:42,670:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 18:56:42,671:INFO:Initializing create_model()
2025-08-19 18:56:42,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:42,671:INFO:Checking exceptions
2025-08-19 18:56:42,672:INFO:Importing libraries
2025-08-19 18:56:42,672:INFO:Copying training dataset
2025-08-19 18:56:42,672:INFO:Defining folds
2025-08-19 18:56:42,672:INFO:Declaring metric variables
2025-08-19 18:56:42,672:INFO:Importing untrained model
2025-08-19 18:56:42,672:INFO:Declaring custom model
2025-08-19 18:56:42,673:INFO:Ada Boost Classifier Imported successfully
2025-08-19 18:56:42,673:INFO:Cross validation set to False
2025-08-19 18:56:42,673:INFO:Fitting Model
2025-08-19 18:56:42,697:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 18:56:42,879:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:56:42,879:INFO:create_model() successfully completed......................................
2025-08-19 18:56:42,963:INFO:_master_model_container: 20
2025-08-19 18:56:42,963:INFO:_display_container: 9
2025-08-19 18:56:42,968:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 18:56:42,968:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:43,049:INFO:Initializing predict_model()
2025-08-19 18:56:43,049:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:43,049:INFO:Checking exceptions
2025-08-19 18:56:43,049:INFO:Preloading libraries
2025-08-19 18:56:43,049:INFO:Set up data.
2025-08-19 18:56:43,053:INFO:Set up index.
2025-08-19 18:56:43,154:INFO:Initializing create_model()
2025-08-19 18:56:43,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:43,155:INFO:Checking exceptions
2025-08-19 18:56:43,155:INFO:Importing libraries
2025-08-19 18:56:43,156:INFO:Copying training dataset
2025-08-19 18:56:43,157:INFO:Defining folds
2025-08-19 18:56:43,157:INFO:Declaring metric variables
2025-08-19 18:56:43,157:INFO:Importing untrained model
2025-08-19 18:56:43,158:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:56:43,158:INFO:Starting cross validation
2025-08-19 18:56:43,158:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:46,702:INFO:Calculating mean and std
2025-08-19 18:56:46,703:INFO:Creating metrics dataframe
2025-08-19 18:56:46,705:INFO:Finalizing model
2025-08-19 18:56:46,731:INFO:[LightGBM] [Info] Number of positive: 480, number of negative: 288
2025-08-19 18:56:46,731:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000354 seconds.
2025-08-19 18:56:46,731:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:56:46,731:INFO:[LightGBM] [Info] Total Bins 6375
2025-08-19 18:56:46,732:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 18:56:46,732:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.625000 -> initscore=0.510826
2025-08-19 18:56:46,732:INFO:[LightGBM] [Info] Start training from score 0.510826
2025-08-19 18:56:46,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:46,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,232:INFO:Uploading results into container
2025-08-19 18:56:47,233:INFO:Uploading model into container now
2025-08-19 18:56:47,233:INFO:_master_model_container: 21
2025-08-19 18:56:47,233:INFO:_display_container: 11
2025-08-19 18:56:47,233:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:56:47,233:INFO:create_model() successfully completed......................................
2025-08-19 18:56:47,314:INFO:Initializing finalize_model()
2025-08-19 18:56:47,314:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:47,314:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 18:56:47,316:INFO:Initializing create_model()
2025-08-19 18:56:47,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:47,316:INFO:Checking exceptions
2025-08-19 18:56:47,317:INFO:Importing libraries
2025-08-19 18:56:47,317:INFO:Copying training dataset
2025-08-19 18:56:47,317:INFO:Defining folds
2025-08-19 18:56:47,317:INFO:Declaring metric variables
2025-08-19 18:56:47,318:INFO:Importing untrained model
2025-08-19 18:56:47,318:INFO:Declaring custom model
2025-08-19 18:56:47,318:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 18:56:47,319:INFO:Cross validation set to False
2025-08-19 18:56:47,319:INFO:Fitting Model
2025-08-19 18:56:47,349:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 18:56:47,350:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000385 seconds.
2025-08-19 18:56:47,350:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 18:56:47,350:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 18:56:47,350:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 18:56:47,350:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 18:56:47,350:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 18:56:47,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 18:56:47,855:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:56:47,855:INFO:create_model() successfully completed......................................
2025-08-19 18:56:47,933:INFO:_master_model_container: 21
2025-08-19 18:56:47,933:INFO:_display_container: 11
2025-08-19 18:56:47,939:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 18:56:47,939:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:48,020:INFO:Initializing predict_model()
2025-08-19 18:56:48,020:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:48,020:INFO:Checking exceptions
2025-08-19 18:56:48,020:INFO:Preloading libraries
2025-08-19 18:56:48,021:INFO:Set up data.
2025-08-19 18:56:48,025:INFO:Set up index.
2025-08-19 18:56:48,122:INFO:Initializing create_model()
2025-08-19 18:56:48,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:48,122:INFO:Checking exceptions
2025-08-19 18:56:48,123:INFO:Importing libraries
2025-08-19 18:56:48,123:INFO:Copying training dataset
2025-08-19 18:56:48,125:INFO:Defining folds
2025-08-19 18:56:48,125:INFO:Declaring metric variables
2025-08-19 18:56:48,125:INFO:Importing untrained model
2025-08-19 18:56:48,125:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:56:48,125:INFO:Starting cross validation
2025-08-19 18:56:48,126:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:49,461:INFO:Calculating mean and std
2025-08-19 18:56:49,462:INFO:Creating metrics dataframe
2025-08-19 18:56:49,463:INFO:Finalizing model
2025-08-19 18:56:50,072:INFO:Uploading results into container
2025-08-19 18:56:50,072:INFO:Uploading model into container now
2025-08-19 18:56:50,073:INFO:_master_model_container: 22
2025-08-19 18:56:50,073:INFO:_display_container: 13
2025-08-19 18:56:50,073:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:56:50,073:INFO:create_model() successfully completed......................................
2025-08-19 18:56:50,160:INFO:Initializing finalize_model()
2025-08-19 18:56:50,161:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:50,161:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 18:56:50,162:INFO:Initializing create_model()
2025-08-19 18:56:50,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:50,162:INFO:Checking exceptions
2025-08-19 18:56:50,163:INFO:Importing libraries
2025-08-19 18:56:50,163:INFO:Copying training dataset
2025-08-19 18:56:50,163:INFO:Defining folds
2025-08-19 18:56:50,164:INFO:Declaring metric variables
2025-08-19 18:56:50,164:INFO:Importing untrained model
2025-08-19 18:56:50,164:INFO:Declaring custom model
2025-08-19 18:56:50,164:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 18:56:50,165:INFO:Cross validation set to False
2025-08-19 18:56:50,165:INFO:Fitting Model
2025-08-19 18:56:50,901:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:56:50,902:INFO:create_model() successfully completed......................................
2025-08-19 18:56:50,977:INFO:_master_model_container: 22
2025-08-19 18:56:50,977:INFO:_display_container: 13
2025-08-19 18:56:50,982:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:56:50,982:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:51,063:INFO:Initializing predict_model()
2025-08-19 18:56:51,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:51,063:INFO:Checking exceptions
2025-08-19 18:56:51,063:INFO:Preloading libraries
2025-08-19 18:56:51,063:INFO:Set up data.
2025-08-19 18:56:51,068:INFO:Set up index.
2025-08-19 18:56:51,184:INFO:Initializing create_model()
2025-08-19 18:56:51,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:51,184:INFO:Checking exceptions
2025-08-19 18:56:51,185:INFO:Importing libraries
2025-08-19 18:56:51,185:INFO:Copying training dataset
2025-08-19 18:56:51,187:INFO:Defining folds
2025-08-19 18:56:51,187:INFO:Declaring metric variables
2025-08-19 18:56:51,187:INFO:Importing untrained model
2025-08-19 18:56:51,187:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:56:51,187:INFO:Starting cross validation
2025-08-19 18:56:51,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:51,405:INFO:Calculating mean and std
2025-08-19 18:56:51,405:INFO:Creating metrics dataframe
2025-08-19 18:56:51,407:INFO:Finalizing model
2025-08-19 18:56:51,553:INFO:Uploading results into container
2025-08-19 18:56:51,554:INFO:Uploading model into container now
2025-08-19 18:56:51,554:INFO:_master_model_container: 23
2025-08-19 18:56:51,554:INFO:_display_container: 15
2025-08-19 18:56:51,555:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:56:51,555:INFO:create_model() successfully completed......................................
2025-08-19 18:56:51,632:INFO:Initializing finalize_model()
2025-08-19 18:56:51,632:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:51,632:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 18:56:51,634:INFO:Initializing create_model()
2025-08-19 18:56:51,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:51,634:INFO:Checking exceptions
2025-08-19 18:56:51,635:INFO:Importing libraries
2025-08-19 18:56:51,635:INFO:Copying training dataset
2025-08-19 18:56:51,635:INFO:Defining folds
2025-08-19 18:56:51,635:INFO:Declaring metric variables
2025-08-19 18:56:51,635:INFO:Importing untrained model
2025-08-19 18:56:51,635:INFO:Declaring custom model
2025-08-19 18:56:51,636:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 18:56:51,637:INFO:Cross validation set to False
2025-08-19 18:56:51,637:INFO:Fitting Model
2025-08-19 18:56:51,797:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:56:51,797:INFO:create_model() successfully completed......................................
2025-08-19 18:56:51,869:INFO:_master_model_container: 23
2025-08-19 18:56:51,869:INFO:_display_container: 15
2025-08-19 18:56:51,875:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 18:56:51,875:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:51,953:INFO:Initializing predict_model()
2025-08-19 18:56:51,953:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:51,953:INFO:Checking exceptions
2025-08-19 18:56:51,953:INFO:Preloading libraries
2025-08-19 18:56:51,953:INFO:Set up data.
2025-08-19 18:56:51,957:INFO:Set up index.
2025-08-19 18:56:52,052:INFO:Initializing create_model()
2025-08-19 18:56:52,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:52,052:INFO:Checking exceptions
2025-08-19 18:56:52,053:INFO:Importing libraries
2025-08-19 18:56:52,053:INFO:Copying training dataset
2025-08-19 18:56:52,054:INFO:Defining folds
2025-08-19 18:56:52,054:INFO:Declaring metric variables
2025-08-19 18:56:52,054:INFO:Importing untrained model
2025-08-19 18:56:52,055:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:56:52,055:INFO:Starting cross validation
2025-08-19 18:56:52,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:52,461:INFO:Calculating mean and std
2025-08-19 18:56:52,461:INFO:Creating metrics dataframe
2025-08-19 18:56:52,463:INFO:Finalizing model
2025-08-19 18:56:52,573:INFO:Uploading results into container
2025-08-19 18:56:52,574:INFO:Uploading model into container now
2025-08-19 18:56:52,574:INFO:_master_model_container: 24
2025-08-19 18:56:52,574:INFO:_display_container: 17
2025-08-19 18:56:52,574:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:56:52,574:INFO:create_model() successfully completed......................................
2025-08-19 18:56:52,679:INFO:Initializing finalize_model()
2025-08-19 18:56:52,680:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:52,680:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 18:56:52,682:INFO:Initializing create_model()
2025-08-19 18:56:52,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:52,682:INFO:Checking exceptions
2025-08-19 18:56:52,683:INFO:Importing libraries
2025-08-19 18:56:52,683:INFO:Copying training dataset
2025-08-19 18:56:52,683:INFO:Defining folds
2025-08-19 18:56:52,683:INFO:Declaring metric variables
2025-08-19 18:56:52,683:INFO:Importing untrained model
2025-08-19 18:56:52,683:INFO:Declaring custom model
2025-08-19 18:56:52,684:INFO:Extra Trees Classifier Imported successfully
2025-08-19 18:56:52,685:INFO:Cross validation set to False
2025-08-19 18:56:52,685:INFO:Fitting Model
2025-08-19 18:56:52,793:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:56:52,793:INFO:create_model() successfully completed......................................
2025-08-19 18:56:52,870:INFO:_master_model_container: 24
2025-08-19 18:56:52,870:INFO:_display_container: 17
2025-08-19 18:56:52,875:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 18:56:52,875:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:52,956:INFO:Initializing predict_model()
2025-08-19 18:56:52,957:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:52,957:INFO:Checking exceptions
2025-08-19 18:56:52,957:INFO:Preloading libraries
2025-08-19 18:56:52,957:INFO:Set up data.
2025-08-19 18:56:52,961:INFO:Set up index.
2025-08-19 18:56:53,082:INFO:Initializing create_model()
2025-08-19 18:56:53,082:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:53,082:INFO:Checking exceptions
2025-08-19 18:56:53,083:INFO:Importing libraries
2025-08-19 18:56:53,083:INFO:Copying training dataset
2025-08-19 18:56:53,084:INFO:Defining folds
2025-08-19 18:56:53,084:INFO:Declaring metric variables
2025-08-19 18:56:53,084:INFO:Importing untrained model
2025-08-19 18:56:53,085:INFO:Dummy Classifier Imported successfully
2025-08-19 18:56:53,085:INFO:Starting cross validation
2025-08-19 18:56:53,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:53,130:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,135:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,141:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,150:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,151:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,159:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,163:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,174:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,178:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,184:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,191:INFO:Calculating mean and std
2025-08-19 18:56:53,192:INFO:Creating metrics dataframe
2025-08-19 18:56:53,193:INFO:Finalizing model
2025-08-19 18:56:53,214:INFO:Uploading results into container
2025-08-19 18:56:53,214:INFO:Uploading model into container now
2025-08-19 18:56:53,215:INFO:_master_model_container: 25
2025-08-19 18:56:53,215:INFO:_display_container: 19
2025-08-19 18:56:53,215:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:56:53,215:INFO:create_model() successfully completed......................................
2025-08-19 18:56:53,289:INFO:Initializing finalize_model()
2025-08-19 18:56:53,290:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:53,290:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 18:56:53,291:INFO:Initializing create_model()
2025-08-19 18:56:53,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:53,291:INFO:Checking exceptions
2025-08-19 18:56:53,292:INFO:Importing libraries
2025-08-19 18:56:53,292:INFO:Copying training dataset
2025-08-19 18:56:53,292:INFO:Defining folds
2025-08-19 18:56:53,292:INFO:Declaring metric variables
2025-08-19 18:56:53,292:INFO:Importing untrained model
2025-08-19 18:56:53,292:INFO:Declaring custom model
2025-08-19 18:56:53,292:INFO:Dummy Classifier Imported successfully
2025-08-19 18:56:53,293:INFO:Cross validation set to False
2025-08-19 18:56:53,293:INFO:Fitting Model
2025-08-19 18:56:53,320:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:56:53,320:INFO:create_model() successfully completed......................................
2025-08-19 18:56:53,394:INFO:_master_model_container: 25
2025-08-19 18:56:53,395:INFO:_display_container: 19
2025-08-19 18:56:53,399:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 18:56:53,399:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:53,479:INFO:Initializing predict_model()
2025-08-19 18:56:53,480:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:53,480:INFO:Checking exceptions
2025-08-19 18:56:53,480:INFO:Preloading libraries
2025-08-19 18:56:53,480:INFO:Set up data.
2025-08-19 18:56:53,484:INFO:Set up index.
2025-08-19 18:56:53,498:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:53,578:INFO:Initializing create_model()
2025-08-19 18:56:53,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:53,578:INFO:Checking exceptions
2025-08-19 18:56:53,579:INFO:Importing libraries
2025-08-19 18:56:53,579:INFO:Copying training dataset
2025-08-19 18:56:53,581:INFO:Defining folds
2025-08-19 18:56:53,581:INFO:Declaring metric variables
2025-08-19 18:56:53,581:INFO:Importing untrained model
2025-08-19 18:56:53,581:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:56:53,581:INFO:Starting cross validation
2025-08-19 18:56:53,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:53,700:INFO:Calculating mean and std
2025-08-19 18:56:53,700:INFO:Creating metrics dataframe
2025-08-19 18:56:53,701:INFO:Finalizing model
2025-08-19 18:56:53,726:INFO:Uploading results into container
2025-08-19 18:56:53,727:INFO:Uploading model into container now
2025-08-19 18:56:53,727:INFO:_master_model_container: 26
2025-08-19 18:56:53,727:INFO:_display_container: 21
2025-08-19 18:56:53,727:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:56:53,727:INFO:create_model() successfully completed......................................
2025-08-19 18:56:53,809:INFO:Initializing finalize_model()
2025-08-19 18:56:53,810:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:53,810:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 18:56:53,811:INFO:Initializing create_model()
2025-08-19 18:56:53,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:53,811:INFO:Checking exceptions
2025-08-19 18:56:53,813:INFO:Importing libraries
2025-08-19 18:56:53,813:INFO:Copying training dataset
2025-08-19 18:56:53,813:INFO:Defining folds
2025-08-19 18:56:53,813:INFO:Declaring metric variables
2025-08-19 18:56:53,813:INFO:Importing untrained model
2025-08-19 18:56:53,813:INFO:Declaring custom model
2025-08-19 18:56:53,813:INFO:K Neighbors Classifier Imported successfully
2025-08-19 18:56:53,814:INFO:Cross validation set to False
2025-08-19 18:56:53,814:INFO:Fitting Model
2025-08-19 18:56:53,843:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:56:53,843:INFO:create_model() successfully completed......................................
2025-08-19 18:56:53,926:INFO:_master_model_container: 26
2025-08-19 18:56:53,927:INFO:_display_container: 21
2025-08-19 18:56:53,931:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 18:56:53,931:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:54,012:INFO:Initializing predict_model()
2025-08-19 18:56:54,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:54,013:INFO:Checking exceptions
2025-08-19 18:56:54,013:INFO:Preloading libraries
2025-08-19 18:56:54,013:INFO:Set up data.
2025-08-19 18:56:54,017:INFO:Set up index.
2025-08-19 18:56:54,115:INFO:Initializing create_model()
2025-08-19 18:56:54,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:54,116:INFO:Checking exceptions
2025-08-19 18:56:54,117:INFO:Importing libraries
2025-08-19 18:56:54,117:INFO:Copying training dataset
2025-08-19 18:56:54,119:INFO:Defining folds
2025-08-19 18:56:54,119:INFO:Declaring metric variables
2025-08-19 18:56:54,119:INFO:Importing untrained model
2025-08-19 18:56:54,119:INFO:Logistic Regression Imported successfully
2025-08-19 18:56:54,119:INFO:Starting cross validation
2025-08-19 18:56:54,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:54,202:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:54,238:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:54,245:INFO:Calculating mean and std
2025-08-19 18:56:54,245:INFO:Creating metrics dataframe
2025-08-19 18:56:54,246:INFO:Finalizing model
2025-08-19 18:56:54,278:INFO:Uploading results into container
2025-08-19 18:56:54,280:INFO:Uploading model into container now
2025-08-19 18:56:54,280:INFO:_master_model_container: 27
2025-08-19 18:56:54,280:INFO:_display_container: 23
2025-08-19 18:56:54,281:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:56:54,281:INFO:create_model() successfully completed......................................
2025-08-19 18:56:54,392:INFO:Initializing finalize_model()
2025-08-19 18:56:54,392:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:54,392:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 18:56:54,394:INFO:Initializing create_model()
2025-08-19 18:56:54,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:54,394:INFO:Checking exceptions
2025-08-19 18:56:54,395:INFO:Importing libraries
2025-08-19 18:56:54,395:INFO:Copying training dataset
2025-08-19 18:56:54,396:INFO:Defining folds
2025-08-19 18:56:54,396:INFO:Declaring metric variables
2025-08-19 18:56:54,396:INFO:Importing untrained model
2025-08-19 18:56:54,396:INFO:Declaring custom model
2025-08-19 18:56:54,396:INFO:Logistic Regression Imported successfully
2025-08-19 18:56:54,397:INFO:Cross validation set to False
2025-08-19 18:56:54,397:INFO:Fitting Model
2025-08-19 18:56:54,482:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:56:54,483:INFO:create_model() successfully completed......................................
2025-08-19 18:56:54,595:INFO:_master_model_container: 27
2025-08-19 18:56:54,595:INFO:_display_container: 23
2025-08-19 18:56:54,602:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 18:56:54,602:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:54,701:INFO:Initializing predict_model()
2025-08-19 18:56:54,701:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:54,701:INFO:Checking exceptions
2025-08-19 18:56:54,701:INFO:Preloading libraries
2025-08-19 18:56:54,701:INFO:Set up data.
2025-08-19 18:56:54,711:INFO:Set up index.
2025-08-19 18:56:54,816:INFO:Initializing create_model()
2025-08-19 18:56:54,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:54,816:INFO:Checking exceptions
2025-08-19 18:56:54,817:INFO:Importing libraries
2025-08-19 18:56:54,817:INFO:Copying training dataset
2025-08-19 18:56:54,819:INFO:Defining folds
2025-08-19 18:56:54,819:INFO:Declaring metric variables
2025-08-19 18:56:54,819:INFO:Importing untrained model
2025-08-19 18:56:54,819:INFO:Ridge Classifier Imported successfully
2025-08-19 18:56:54,819:INFO:Starting cross validation
2025-08-19 18:56:54,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:54,921:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 18:56:54,927:INFO:Calculating mean and std
2025-08-19 18:56:54,927:INFO:Creating metrics dataframe
2025-08-19 18:56:54,929:INFO:Finalizing model
2025-08-19 18:56:54,956:INFO:Uploading results into container
2025-08-19 18:56:54,957:INFO:Uploading model into container now
2025-08-19 18:56:54,957:INFO:_master_model_container: 28
2025-08-19 18:56:54,957:INFO:_display_container: 25
2025-08-19 18:56:54,958:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:56:54,958:INFO:create_model() successfully completed......................................
2025-08-19 18:56:55,111:INFO:Initializing finalize_model()
2025-08-19 18:56:55,111:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:55,111:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 18:56:55,114:INFO:Initializing create_model()
2025-08-19 18:56:55,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:55,114:INFO:Checking exceptions
2025-08-19 18:56:55,115:INFO:Importing libraries
2025-08-19 18:56:55,115:INFO:Copying training dataset
2025-08-19 18:56:55,115:INFO:Defining folds
2025-08-19 18:56:55,115:INFO:Declaring metric variables
2025-08-19 18:56:55,115:INFO:Importing untrained model
2025-08-19 18:56:55,115:INFO:Declaring custom model
2025-08-19 18:56:55,115:INFO:Ridge Classifier Imported successfully
2025-08-19 18:56:55,117:INFO:Cross validation set to False
2025-08-19 18:56:55,118:INFO:Fitting Model
2025-08-19 18:56:55,236:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:56:55,236:INFO:create_model() successfully completed......................................
2025-08-19 18:56:55,448:INFO:_master_model_container: 28
2025-08-19 18:56:55,448:INFO:_display_container: 25
2025-08-19 18:56:55,465:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 18:56:55,465:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:55,552:INFO:Initializing predict_model()
2025-08-19 18:56:55,553:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:55,553:INFO:Checking exceptions
2025-08-19 18:56:55,553:INFO:Preloading libraries
2025-08-19 18:56:55,553:INFO:Set up data.
2025-08-19 18:56:55,557:INFO:Set up index.
2025-08-19 18:56:55,654:INFO:Initializing create_model()
2025-08-19 18:56:55,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:55,654:INFO:Checking exceptions
2025-08-19 18:56:55,655:INFO:Importing libraries
2025-08-19 18:56:55,655:INFO:Copying training dataset
2025-08-19 18:56:55,656:INFO:Defining folds
2025-08-19 18:56:55,656:INFO:Declaring metric variables
2025-08-19 18:56:55,656:INFO:Importing untrained model
2025-08-19 18:56:55,657:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:56:55,657:INFO:Starting cross validation
2025-08-19 18:56:55,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:55,774:INFO:Calculating mean and std
2025-08-19 18:56:55,774:INFO:Creating metrics dataframe
2025-08-19 18:56:55,775:INFO:Finalizing model
2025-08-19 18:56:55,825:INFO:Uploading results into container
2025-08-19 18:56:55,825:INFO:Uploading model into container now
2025-08-19 18:56:55,826:INFO:_master_model_container: 29
2025-08-19 18:56:55,826:INFO:_display_container: 27
2025-08-19 18:56:55,826:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:56:55,826:INFO:create_model() successfully completed......................................
2025-08-19 18:56:55,908:INFO:Initializing finalize_model()
2025-08-19 18:56:55,908:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:55,908:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 18:56:55,909:INFO:Initializing create_model()
2025-08-19 18:56:55,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:55,910:INFO:Checking exceptions
2025-08-19 18:56:55,910:INFO:Importing libraries
2025-08-19 18:56:55,910:INFO:Copying training dataset
2025-08-19 18:56:55,910:INFO:Defining folds
2025-08-19 18:56:55,910:INFO:Declaring metric variables
2025-08-19 18:56:55,911:INFO:Importing untrained model
2025-08-19 18:56:55,911:INFO:Declaring custom model
2025-08-19 18:56:55,911:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 18:56:55,911:INFO:Cross validation set to False
2025-08-19 18:56:55,912:INFO:Fitting Model
2025-08-19 18:56:55,956:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:56:55,956:INFO:create_model() successfully completed......................................
2025-08-19 18:56:56,047:INFO:_master_model_container: 29
2025-08-19 18:56:56,047:INFO:_display_container: 27
2025-08-19 18:56:56,052:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 18:56:56,052:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:56,139:INFO:Initializing predict_model()
2025-08-19 18:56:56,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:56,139:INFO:Checking exceptions
2025-08-19 18:56:56,139:INFO:Preloading libraries
2025-08-19 18:56:56,139:INFO:Set up data.
2025-08-19 18:56:56,143:INFO:Set up index.
2025-08-19 18:56:56,254:INFO:Initializing create_model()
2025-08-19 18:56:56,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:56,254:INFO:Checking exceptions
2025-08-19 18:56:56,255:INFO:Importing libraries
2025-08-19 18:56:56,255:INFO:Copying training dataset
2025-08-19 18:56:56,257:INFO:Defining folds
2025-08-19 18:56:56,257:INFO:Declaring metric variables
2025-08-19 18:56:56,257:INFO:Importing untrained model
2025-08-19 18:56:56,258:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:56:56,258:INFO:Starting cross validation
2025-08-19 18:56:56,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:56,380:INFO:Calculating mean and std
2025-08-19 18:56:56,381:INFO:Creating metrics dataframe
2025-08-19 18:56:56,382:INFO:Finalizing model
2025-08-19 18:56:56,408:INFO:Uploading results into container
2025-08-19 18:56:56,409:INFO:Uploading model into container now
2025-08-19 18:56:56,409:INFO:_master_model_container: 30
2025-08-19 18:56:56,409:INFO:_display_container: 29
2025-08-19 18:56:56,410:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:56:56,410:INFO:create_model() successfully completed......................................
2025-08-19 18:56:56,501:INFO:Initializing finalize_model()
2025-08-19 18:56:56,501:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:56,501:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 18:56:56,503:INFO:Initializing create_model()
2025-08-19 18:56:56,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:56,503:INFO:Checking exceptions
2025-08-19 18:56:56,504:INFO:Importing libraries
2025-08-19 18:56:56,504:INFO:Copying training dataset
2025-08-19 18:56:56,504:INFO:Defining folds
2025-08-19 18:56:56,504:INFO:Declaring metric variables
2025-08-19 18:56:56,504:INFO:Importing untrained model
2025-08-19 18:56:56,504:INFO:Declaring custom model
2025-08-19 18:56:56,504:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 18:56:56,505:INFO:Cross validation set to False
2025-08-19 18:56:56,505:INFO:Fitting Model
2025-08-19 18:56:56,538:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:56:56,538:INFO:create_model() successfully completed......................................
2025-08-19 18:56:56,629:INFO:_master_model_container: 30
2025-08-19 18:56:56,629:INFO:_display_container: 29
2025-08-19 18:56:56,634:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 18:56:56,634:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:56,724:INFO:Initializing predict_model()
2025-08-19 18:56:56,724:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:56,724:INFO:Checking exceptions
2025-08-19 18:56:56,724:INFO:Preloading libraries
2025-08-19 18:56:56,724:INFO:Set up data.
2025-08-19 18:56:56,729:INFO:Set up index.
2025-08-19 18:56:56,838:INFO:Initializing create_model()
2025-08-19 18:56:56,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:56,838:INFO:Checking exceptions
2025-08-19 18:56:56,839:INFO:Importing libraries
2025-08-19 18:56:56,839:INFO:Copying training dataset
2025-08-19 18:56:56,841:INFO:Defining folds
2025-08-19 18:56:56,842:INFO:Declaring metric variables
2025-08-19 18:56:56,842:INFO:Importing untrained model
2025-08-19 18:56:56,842:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:56:56,842:INFO:Starting cross validation
2025-08-19 18:56:56,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:56,875:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,883:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,889:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,890:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,894:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,913:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,916:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,922:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,926:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,930:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,958:INFO:Calculating mean and std
2025-08-19 18:56:56,958:INFO:Creating metrics dataframe
2025-08-19 18:56:56,960:INFO:Finalizing model
2025-08-19 18:56:56,982:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:56,985:INFO:Uploading results into container
2025-08-19 18:56:56,986:INFO:Uploading model into container now
2025-08-19 18:56:56,986:INFO:_master_model_container: 31
2025-08-19 18:56:56,986:INFO:_display_container: 31
2025-08-19 18:56:56,987:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:56:56,987:INFO:create_model() successfully completed......................................
2025-08-19 18:56:57,077:INFO:Initializing finalize_model()
2025-08-19 18:56:57,077:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:57,077:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 18:56:57,078:INFO:Initializing create_model()
2025-08-19 18:56:57,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:57,078:INFO:Checking exceptions
2025-08-19 18:56:57,081:INFO:Importing libraries
2025-08-19 18:56:57,082:INFO:Copying training dataset
2025-08-19 18:56:57,082:INFO:Defining folds
2025-08-19 18:56:57,082:INFO:Declaring metric variables
2025-08-19 18:56:57,082:INFO:Importing untrained model
2025-08-19 18:56:57,082:INFO:Declaring custom model
2025-08-19 18:56:57,083:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 18:56:57,084:INFO:Cross validation set to False
2025-08-19 18:56:57,084:INFO:Fitting Model
2025-08-19 18:56:57,118:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 18:56:57,139:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:56:57,139:INFO:create_model() successfully completed......................................
2025-08-19 18:56:57,230:INFO:_master_model_container: 31
2025-08-19 18:56:57,230:INFO:_display_container: 31
2025-08-19 18:56:57,234:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 18:56:57,234:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:57,331:INFO:Initializing predict_model()
2025-08-19 18:56:57,331:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:57,331:INFO:Checking exceptions
2025-08-19 18:56:57,331:INFO:Preloading libraries
2025-08-19 18:56:57,331:INFO:Set up data.
2025-08-19 18:56:57,344:INFO:Set up index.
2025-08-19 18:56:57,457:INFO:Initializing create_model()
2025-08-19 18:56:57,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:57,457:INFO:Checking exceptions
2025-08-19 18:56:57,458:INFO:Importing libraries
2025-08-19 18:56:57,458:INFO:Copying training dataset
2025-08-19 18:56:57,459:INFO:Defining folds
2025-08-19 18:56:57,459:INFO:Declaring metric variables
2025-08-19 18:56:57,460:INFO:Importing untrained model
2025-08-19 18:56:57,460:INFO:Naive Bayes Imported successfully
2025-08-19 18:56:57,460:INFO:Starting cross validation
2025-08-19 18:56:57,460:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 18:56:57,568:INFO:Calculating mean and std
2025-08-19 18:56:57,568:INFO:Creating metrics dataframe
2025-08-19 18:56:57,569:INFO:Finalizing model
2025-08-19 18:56:57,590:INFO:Uploading results into container
2025-08-19 18:56:57,591:INFO:Uploading model into container now
2025-08-19 18:56:57,591:INFO:_master_model_container: 32
2025-08-19 18:56:57,591:INFO:_display_container: 33
2025-08-19 18:56:57,591:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:56:57,591:INFO:create_model() successfully completed......................................
2025-08-19 18:56:57,667:INFO:Initializing finalize_model()
2025-08-19 18:56:57,667:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 18:56:57,667:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 18:56:57,668:INFO:Initializing create_model()
2025-08-19 18:56:57,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 18:56:57,668:INFO:Checking exceptions
2025-08-19 18:56:57,669:INFO:Importing libraries
2025-08-19 18:56:57,669:INFO:Copying training dataset
2025-08-19 18:56:57,669:INFO:Defining folds
2025-08-19 18:56:57,669:INFO:Declaring metric variables
2025-08-19 18:56:57,669:INFO:Importing untrained model
2025-08-19 18:56:57,669:INFO:Declaring custom model
2025-08-19 18:56:57,670:INFO:Naive Bayes Imported successfully
2025-08-19 18:56:57,670:INFO:Cross validation set to False
2025-08-19 18:56:57,670:INFO:Fitting Model
2025-08-19 18:56:57,701:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:56:57,701:INFO:create_model() successfully completed......................................
2025-08-19 18:56:57,777:INFO:_master_model_container: 32
2025-08-19 18:56:57,777:INFO:_display_container: 33
2025-08-19 18:56:57,781:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 18:56:57,781:INFO:finalize_model() successfully completed......................................
2025-08-19 18:56:57,864:INFO:Initializing predict_model()
2025-08-19 18:56:57,864:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x11a09a170>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11a007130>)
2025-08-19 18:56:57,864:INFO:Checking exceptions
2025-08-19 18:56:57,864:INFO:Preloading libraries
2025-08-19 18:56:57,865:INFO:Set up data.
2025-08-19 18:56:57,869:INFO:Set up index.
2025-08-19 19:04:32,622:INFO:PyCaret ClassificationExperiment
2025-08-19 19:04:32,625:INFO:Logging name: clf-default-name
2025-08-19 19:04:32,625:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 19:04:32,625:INFO:version 3.3.2
2025-08-19 19:04:32,625:INFO:Initializing setup()
2025-08-19 19:04:32,625:INFO:self.USI: 214e
2025-08-19 19:04:32,626:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 19:04:32,626:INFO:Checking environment
2025-08-19 19:04:32,626:INFO:python_version: 3.10.18
2025-08-19 19:04:32,626:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 19:04:32,626:INFO:machine: arm64
2025-08-19 19:04:32,626:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 19:04:32,626:INFO:Memory: svmem(total=17179869184, available=3604824064, percent=79.0, used=6209732608, free=423084032, active=3193602048, inactive=3157671936, wired=3016130560)
2025-08-19 19:04:32,626:INFO:Physical Core: 8
2025-08-19 19:04:32,626:INFO:Logical Core: 8
2025-08-19 19:04:32,626:INFO:Checking libraries
2025-08-19 19:04:32,626:INFO:System:
2025-08-19 19:04:32,626:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 19:04:32,626:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 19:04:32,626:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 19:04:32,626:INFO:PyCaret required dependencies:
2025-08-19 19:04:32,626:INFO:                 pip: 25.2
2025-08-19 19:04:32,626:INFO:          setuptools: 80.9.0
2025-08-19 19:04:32,626:INFO:             pycaret: 3.3.2
2025-08-19 19:04:32,627:INFO:             IPython: 8.37.0
2025-08-19 19:04:32,627:INFO:          ipywidgets: 8.1.7
2025-08-19 19:04:32,627:INFO:                tqdm: 4.67.1
2025-08-19 19:04:32,627:INFO:               numpy: 1.25.2
2025-08-19 19:04:32,627:INFO:              pandas: 2.1.4
2025-08-19 19:04:32,627:INFO:              jinja2: 3.1.6
2025-08-19 19:04:32,627:INFO:               scipy: 1.9.3
2025-08-19 19:04:32,627:INFO:              joblib: 1.3.2
2025-08-19 19:04:32,627:INFO:             sklearn: 1.4.2
2025-08-19 19:04:32,627:INFO:                pyod: 2.0.5
2025-08-19 19:04:32,627:INFO:            imblearn: 0.12.4
2025-08-19 19:04:32,627:INFO:   category_encoders: 2.7.0
2025-08-19 19:04:32,627:INFO:            lightgbm: 4.6.0
2025-08-19 19:04:32,627:INFO:               numba: 0.61.2
2025-08-19 19:04:32,627:INFO:            requests: 2.32.4
2025-08-19 19:04:32,627:INFO:          matplotlib: 3.7.2
2025-08-19 19:04:32,627:INFO:          scikitplot: 0.3.7
2025-08-19 19:04:32,627:INFO:         yellowbrick: 1.5
2025-08-19 19:04:32,627:INFO:              plotly: 5.24.1
2025-08-19 19:04:32,627:INFO:    plotly-resampler: Not installed
2025-08-19 19:04:32,627:INFO:             kaleido: 1.0.0
2025-08-19 19:04:32,627:INFO:           schemdraw: 0.15
2025-08-19 19:04:32,627:INFO:         statsmodels: 0.14.5
2025-08-19 19:04:32,627:INFO:              sktime: 0.26.0
2025-08-19 19:04:32,627:INFO:               tbats: 1.1.3
2025-08-19 19:04:32,627:INFO:            pmdarima: 2.0.4
2025-08-19 19:04:32,627:INFO:              psutil: 7.0.0
2025-08-19 19:04:32,627:INFO:          markupsafe: 3.0.2
2025-08-19 19:04:32,627:INFO:             pickle5: Not installed
2025-08-19 19:04:32,627:INFO:         cloudpickle: 3.1.1
2025-08-19 19:04:32,627:INFO:         deprecation: 2.1.0
2025-08-19 19:04:32,627:INFO:              xxhash: 3.5.0
2025-08-19 19:04:32,627:INFO:           wurlitzer: 3.1.1
2025-08-19 19:04:32,627:INFO:PyCaret optional dependencies:
2025-08-19 19:04:32,627:INFO:                shap: 0.48.0
2025-08-19 19:04:32,627:INFO:           interpret: Not installed
2025-08-19 19:04:32,627:INFO:                umap: Not installed
2025-08-19 19:04:32,627:INFO:     ydata_profiling: Not installed
2025-08-19 19:04:32,627:INFO:  explainerdashboard: Not installed
2025-08-19 19:04:32,627:INFO:             autoviz: Not installed
2025-08-19 19:04:32,627:INFO:           fairlearn: Not installed
2025-08-19 19:04:32,627:INFO:          deepchecks: Not installed
2025-08-19 19:04:32,627:INFO:             xgboost: 3.0.4
2025-08-19 19:04:32,627:INFO:            catboost: 1.2.8
2025-08-19 19:04:32,628:INFO:              kmodes: Not installed
2025-08-19 19:04:32,628:INFO:             mlxtend: 0.23.4
2025-08-19 19:04:32,628:INFO:       statsforecast: Not installed
2025-08-19 19:04:32,628:INFO:        tune_sklearn: Not installed
2025-08-19 19:04:32,628:INFO:                 ray: Not installed
2025-08-19 19:04:32,628:INFO:            hyperopt: Not installed
2025-08-19 19:04:32,628:INFO:              optuna: 4.4.0
2025-08-19 19:04:32,628:INFO:               skopt: Not installed
2025-08-19 19:04:32,628:INFO:              mlflow: Not installed
2025-08-19 19:04:32,628:INFO:              gradio: Not installed
2025-08-19 19:04:32,628:INFO:             fastapi: Not installed
2025-08-19 19:04:32,628:INFO:             uvicorn: Not installed
2025-08-19 19:04:32,628:INFO:              m2cgen: Not installed
2025-08-19 19:04:32,628:INFO:           evidently: Not installed
2025-08-19 19:04:32,628:INFO:               fugue: Not installed
2025-08-19 19:04:32,628:INFO:           streamlit: Not installed
2025-08-19 19:04:32,628:INFO:             prophet: Not installed
2025-08-19 19:04:32,628:INFO:None
2025-08-19 19:04:32,628:INFO:Set up data.
2025-08-19 19:04:32,635:INFO:Set up folding strategy.
2025-08-19 19:04:32,635:INFO:Set up train/test split.
2025-08-19 19:04:32,635:INFO:Set up data.
2025-08-19 19:04:32,642:INFO:Set up index.
2025-08-19 19:04:32,642:INFO:Assigning column types.
2025-08-19 19:04:32,645:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 19:04:32,671:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:04:32,672:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:04:32,688:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:04:32,690:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:04:32,716:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:04:32,716:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:04:32,732:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:04:32,734:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:04:32,734:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 19:04:32,759:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:04:32,775:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:04:32,777:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:04:32,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:04:32,818:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:04:32,819:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:04:32,820:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 19:04:32,862:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:04:32,864:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:04:32,907:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:04:32,909:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:04:32,910:INFO:Preparing preprocessing pipeline...
2025-08-19 19:04:32,911:INFO:Set up label encoding.
2025-08-19 19:04:32,911:INFO:Set up simple imputation.
2025-08-19 19:04:32,913:INFO:Set up encoding of categorical features.
2025-08-19 19:04:32,974:INFO:Finished creating preprocessing pipeline.
2025-08-19 19:04:32,979:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 19:04:32,979:INFO:Creating final display dataframe.
2025-08-19 19:04:33,127:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              214e
2025-08-19 19:04:33,169:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:04:33,171:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:04:33,213:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:04:33,215:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:04:33,216:INFO:setup() successfully completed in 0.6s...............
2025-08-19 19:04:33,216:INFO:Initializing compare_models()
2025-08-19 19:04:33,216:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 19:04:33,216:INFO:Checking exceptions
2025-08-19 19:04:33,218:INFO:Preparing display monitor
2025-08-19 19:04:33,221:INFO:Initializing Logistic Regression
2025-08-19 19:04:33,221:INFO:Total runtime is 9.139378865559896e-07 minutes
2025-08-19 19:04:33,221:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:33,221:INFO:Initializing create_model()
2025-08-19 19:04:33,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:33,221:INFO:Checking exceptions
2025-08-19 19:04:33,221:INFO:Importing libraries
2025-08-19 19:04:33,221:INFO:Copying training dataset
2025-08-19 19:04:33,223:INFO:Defining folds
2025-08-19 19:04:33,223:INFO:Declaring metric variables
2025-08-19 19:04:33,223:INFO:Importing untrained model
2025-08-19 19:04:33,223:INFO:Logistic Regression Imported successfully
2025-08-19 19:04:33,223:INFO:Starting cross validation
2025-08-19 19:04:33,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:39,241:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:04:39,335:INFO:Calculating mean and std
2025-08-19 19:04:39,336:INFO:Creating metrics dataframe
2025-08-19 19:04:39,339:INFO:Uploading results into container
2025-08-19 19:04:39,340:INFO:Uploading model into container now
2025-08-19 19:04:39,340:INFO:_master_model_container: 1
2025-08-19 19:04:39,340:INFO:_display_container: 2
2025-08-19 19:04:39,341:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:04:39,341:INFO:create_model() successfully completed......................................
2025-08-19 19:04:39,485:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:39,485:INFO:Creating metrics dataframe
2025-08-19 19:04:39,487:INFO:Initializing K Neighbors Classifier
2025-08-19 19:04:39,487:INFO:Total runtime is 0.10443511803944905 minutes
2025-08-19 19:04:39,487:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:39,487:INFO:Initializing create_model()
2025-08-19 19:04:39,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:39,487:INFO:Checking exceptions
2025-08-19 19:04:39,487:INFO:Importing libraries
2025-08-19 19:04:39,487:INFO:Copying training dataset
2025-08-19 19:04:39,489:INFO:Defining folds
2025-08-19 19:04:39,489:INFO:Declaring metric variables
2025-08-19 19:04:39,489:INFO:Importing untrained model
2025-08-19 19:04:39,490:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:04:39,490:INFO:Starting cross validation
2025-08-19 19:04:39,491:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:39,655:INFO:Calculating mean and std
2025-08-19 19:04:39,655:INFO:Creating metrics dataframe
2025-08-19 19:04:39,656:INFO:Uploading results into container
2025-08-19 19:04:39,657:INFO:Uploading model into container now
2025-08-19 19:04:39,657:INFO:_master_model_container: 2
2025-08-19 19:04:39,657:INFO:_display_container: 2
2025-08-19 19:04:39,657:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:04:39,657:INFO:create_model() successfully completed......................................
2025-08-19 19:04:39,741:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:39,741:INFO:Creating metrics dataframe
2025-08-19 19:04:39,743:INFO:Initializing Naive Bayes
2025-08-19 19:04:39,743:INFO:Total runtime is 0.10870079994201659 minutes
2025-08-19 19:04:39,743:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:39,743:INFO:Initializing create_model()
2025-08-19 19:04:39,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:39,743:INFO:Checking exceptions
2025-08-19 19:04:39,743:INFO:Importing libraries
2025-08-19 19:04:39,743:INFO:Copying training dataset
2025-08-19 19:04:39,745:INFO:Defining folds
2025-08-19 19:04:39,745:INFO:Declaring metric variables
2025-08-19 19:04:39,745:INFO:Importing untrained model
2025-08-19 19:04:39,745:INFO:Naive Bayes Imported successfully
2025-08-19 19:04:39,746:INFO:Starting cross validation
2025-08-19 19:04:39,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:39,862:INFO:Calculating mean and std
2025-08-19 19:04:39,862:INFO:Creating metrics dataframe
2025-08-19 19:04:39,863:INFO:Uploading results into container
2025-08-19 19:04:39,864:INFO:Uploading model into container now
2025-08-19 19:04:39,864:INFO:_master_model_container: 3
2025-08-19 19:04:39,864:INFO:_display_container: 2
2025-08-19 19:04:39,864:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:04:39,864:INFO:create_model() successfully completed......................................
2025-08-19 19:04:39,947:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:39,947:INFO:Creating metrics dataframe
2025-08-19 19:04:39,949:INFO:Initializing Decision Tree Classifier
2025-08-19 19:04:39,949:INFO:Total runtime is 0.11213619709014891 minutes
2025-08-19 19:04:39,949:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:39,949:INFO:Initializing create_model()
2025-08-19 19:04:39,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:39,949:INFO:Checking exceptions
2025-08-19 19:04:39,949:INFO:Importing libraries
2025-08-19 19:04:39,949:INFO:Copying training dataset
2025-08-19 19:04:39,952:INFO:Defining folds
2025-08-19 19:04:39,952:INFO:Declaring metric variables
2025-08-19 19:04:39,952:INFO:Importing untrained model
2025-08-19 19:04:39,952:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:04:39,952:INFO:Starting cross validation
2025-08-19 19:04:39,953:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:40,087:INFO:Calculating mean and std
2025-08-19 19:04:40,087:INFO:Creating metrics dataframe
2025-08-19 19:04:40,088:INFO:Uploading results into container
2025-08-19 19:04:40,088:INFO:Uploading model into container now
2025-08-19 19:04:40,088:INFO:_master_model_container: 4
2025-08-19 19:04:40,089:INFO:_display_container: 2
2025-08-19 19:04:40,089:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:04:40,089:INFO:create_model() successfully completed......................................
2025-08-19 19:04:40,172:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:40,172:INFO:Creating metrics dataframe
2025-08-19 19:04:40,174:INFO:Initializing SVM - Linear Kernel
2025-08-19 19:04:40,174:INFO:Total runtime is 0.11588796774546303 minutes
2025-08-19 19:04:40,174:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:40,174:INFO:Initializing create_model()
2025-08-19 19:04:40,174:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:40,174:INFO:Checking exceptions
2025-08-19 19:04:40,174:INFO:Importing libraries
2025-08-19 19:04:40,174:INFO:Copying training dataset
2025-08-19 19:04:40,176:INFO:Defining folds
2025-08-19 19:04:40,176:INFO:Declaring metric variables
2025-08-19 19:04:40,176:INFO:Importing untrained model
2025-08-19 19:04:40,177:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:04:40,177:INFO:Starting cross validation
2025-08-19 19:04:40,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:40,301:INFO:Calculating mean and std
2025-08-19 19:04:40,302:INFO:Creating metrics dataframe
2025-08-19 19:04:40,303:INFO:Uploading results into container
2025-08-19 19:04:40,303:INFO:Uploading model into container now
2025-08-19 19:04:40,303:INFO:_master_model_container: 5
2025-08-19 19:04:40,303:INFO:_display_container: 2
2025-08-19 19:04:40,303:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:04:40,303:INFO:create_model() successfully completed......................................
2025-08-19 19:04:40,413:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:40,413:INFO:Creating metrics dataframe
2025-08-19 19:04:40,415:INFO:Initializing Ridge Classifier
2025-08-19 19:04:40,415:INFO:Total runtime is 0.11990524927775063 minutes
2025-08-19 19:04:40,415:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:40,415:INFO:Initializing create_model()
2025-08-19 19:04:40,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:40,415:INFO:Checking exceptions
2025-08-19 19:04:40,415:INFO:Importing libraries
2025-08-19 19:04:40,415:INFO:Copying training dataset
2025-08-19 19:04:40,417:INFO:Defining folds
2025-08-19 19:04:40,417:INFO:Declaring metric variables
2025-08-19 19:04:40,417:INFO:Importing untrained model
2025-08-19 19:04:40,417:INFO:Ridge Classifier Imported successfully
2025-08-19 19:04:40,417:INFO:Starting cross validation
2025-08-19 19:04:40,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:40,480:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:04:40,555:INFO:Calculating mean and std
2025-08-19 19:04:40,556:INFO:Creating metrics dataframe
2025-08-19 19:04:40,557:INFO:Uploading results into container
2025-08-19 19:04:40,557:INFO:Uploading model into container now
2025-08-19 19:04:40,557:INFO:_master_model_container: 6
2025-08-19 19:04:40,557:INFO:_display_container: 2
2025-08-19 19:04:40,557:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:04:40,557:INFO:create_model() successfully completed......................................
2025-08-19 19:04:40,653:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:40,653:INFO:Creating metrics dataframe
2025-08-19 19:04:40,655:INFO:Initializing Random Forest Classifier
2025-08-19 19:04:40,655:INFO:Total runtime is 0.12390136718749999 minutes
2025-08-19 19:04:40,655:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:40,655:INFO:Initializing create_model()
2025-08-19 19:04:40,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:40,655:INFO:Checking exceptions
2025-08-19 19:04:40,655:INFO:Importing libraries
2025-08-19 19:04:40,655:INFO:Copying training dataset
2025-08-19 19:04:40,657:INFO:Defining folds
2025-08-19 19:04:40,657:INFO:Declaring metric variables
2025-08-19 19:04:40,657:INFO:Importing untrained model
2025-08-19 19:04:40,658:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:04:40,658:INFO:Starting cross validation
2025-08-19 19:04:40,658:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:41,201:INFO:Calculating mean and std
2025-08-19 19:04:41,201:INFO:Creating metrics dataframe
2025-08-19 19:04:41,202:INFO:Uploading results into container
2025-08-19 19:04:41,202:INFO:Uploading model into container now
2025-08-19 19:04:41,203:INFO:_master_model_container: 7
2025-08-19 19:04:41,203:INFO:_display_container: 2
2025-08-19 19:04:41,203:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:04:41,203:INFO:create_model() successfully completed......................................
2025-08-19 19:04:41,285:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:41,285:INFO:Creating metrics dataframe
2025-08-19 19:04:41,286:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 19:04:41,286:INFO:Total runtime is 0.13442961772282916 minutes
2025-08-19 19:04:41,287:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:41,287:INFO:Initializing create_model()
2025-08-19 19:04:41,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:41,287:INFO:Checking exceptions
2025-08-19 19:04:41,287:INFO:Importing libraries
2025-08-19 19:04:41,287:INFO:Copying training dataset
2025-08-19 19:04:41,289:INFO:Defining folds
2025-08-19 19:04:41,289:INFO:Declaring metric variables
2025-08-19 19:04:41,289:INFO:Importing untrained model
2025-08-19 19:04:41,289:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:04:41,289:INFO:Starting cross validation
2025-08-19 19:04:41,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:41,325:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,329:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,333:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,333:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,335:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,347:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,349:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,350:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,375:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,382:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:04:41,409:INFO:Calculating mean and std
2025-08-19 19:04:41,410:INFO:Creating metrics dataframe
2025-08-19 19:04:41,411:INFO:Uploading results into container
2025-08-19 19:04:41,411:INFO:Uploading model into container now
2025-08-19 19:04:41,411:INFO:_master_model_container: 8
2025-08-19 19:04:41,411:INFO:_display_container: 2
2025-08-19 19:04:41,412:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:04:41,412:INFO:create_model() successfully completed......................................
2025-08-19 19:04:41,495:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:41,495:INFO:Creating metrics dataframe
2025-08-19 19:04:41,496:INFO:Initializing Ada Boost Classifier
2025-08-19 19:04:41,496:INFO:Total runtime is 0.13792698383331298 minutes
2025-08-19 19:04:41,496:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:41,496:INFO:Initializing create_model()
2025-08-19 19:04:41,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:41,497:INFO:Checking exceptions
2025-08-19 19:04:41,497:INFO:Importing libraries
2025-08-19 19:04:41,497:INFO:Copying training dataset
2025-08-19 19:04:41,498:INFO:Defining folds
2025-08-19 19:04:41,498:INFO:Declaring metric variables
2025-08-19 19:04:41,498:INFO:Importing untrained model
2025-08-19 19:04:41,498:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:04:41,499:INFO:Starting cross validation
2025-08-19 19:04:41,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:41,533:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,539:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,543:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,549:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,553:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,558:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,562:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,579:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,790:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,801:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:04:41,979:INFO:Calculating mean and std
2025-08-19 19:04:41,979:INFO:Creating metrics dataframe
2025-08-19 19:04:41,980:INFO:Uploading results into container
2025-08-19 19:04:41,980:INFO:Uploading model into container now
2025-08-19 19:04:41,981:INFO:_master_model_container: 9
2025-08-19 19:04:41,981:INFO:_display_container: 2
2025-08-19 19:04:41,981:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:04:41,981:INFO:create_model() successfully completed......................................
2025-08-19 19:04:42,064:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:42,064:INFO:Creating metrics dataframe
2025-08-19 19:04:42,065:INFO:Initializing Gradient Boosting Classifier
2025-08-19 19:04:42,065:INFO:Total runtime is 0.14740848541259766 minutes
2025-08-19 19:04:42,065:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:42,065:INFO:Initializing create_model()
2025-08-19 19:04:42,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:42,065:INFO:Checking exceptions
2025-08-19 19:04:42,065:INFO:Importing libraries
2025-08-19 19:04:42,066:INFO:Copying training dataset
2025-08-19 19:04:42,067:INFO:Defining folds
2025-08-19 19:04:42,067:INFO:Declaring metric variables
2025-08-19 19:04:42,067:INFO:Importing untrained model
2025-08-19 19:04:42,067:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:04:42,068:INFO:Starting cross validation
2025-08-19 19:04:42,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:43,375:INFO:Calculating mean and std
2025-08-19 19:04:43,375:INFO:Creating metrics dataframe
2025-08-19 19:04:43,376:INFO:Uploading results into container
2025-08-19 19:04:43,376:INFO:Uploading model into container now
2025-08-19 19:04:43,377:INFO:_master_model_container: 10
2025-08-19 19:04:43,377:INFO:_display_container: 2
2025-08-19 19:04:43,377:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:04:43,377:INFO:create_model() successfully completed......................................
2025-08-19 19:04:43,462:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:43,462:INFO:Creating metrics dataframe
2025-08-19 19:04:43,463:INFO:Initializing Linear Discriminant Analysis
2025-08-19 19:04:43,463:INFO:Total runtime is 0.1707081158955892 minutes
2025-08-19 19:04:43,463:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:43,463:INFO:Initializing create_model()
2025-08-19 19:04:43,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:43,463:INFO:Checking exceptions
2025-08-19 19:04:43,463:INFO:Importing libraries
2025-08-19 19:04:43,463:INFO:Copying training dataset
2025-08-19 19:04:43,466:INFO:Defining folds
2025-08-19 19:04:43,466:INFO:Declaring metric variables
2025-08-19 19:04:43,466:INFO:Importing untrained model
2025-08-19 19:04:43,466:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:04:43,466:INFO:Starting cross validation
2025-08-19 19:04:43,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:43,528:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:04:43,585:INFO:Calculating mean and std
2025-08-19 19:04:43,585:INFO:Creating metrics dataframe
2025-08-19 19:04:43,586:INFO:Uploading results into container
2025-08-19 19:04:43,586:INFO:Uploading model into container now
2025-08-19 19:04:43,587:INFO:_master_model_container: 11
2025-08-19 19:04:43,587:INFO:_display_container: 2
2025-08-19 19:04:43,587:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:04:43,587:INFO:create_model() successfully completed......................................
2025-08-19 19:04:43,669:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:43,669:INFO:Creating metrics dataframe
2025-08-19 19:04:43,671:INFO:Initializing Extra Trees Classifier
2025-08-19 19:04:43,671:INFO:Total runtime is 0.17417533397674562 minutes
2025-08-19 19:04:43,671:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:43,671:INFO:Initializing create_model()
2025-08-19 19:04:43,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:43,671:INFO:Checking exceptions
2025-08-19 19:04:43,672:INFO:Importing libraries
2025-08-19 19:04:43,672:INFO:Copying training dataset
2025-08-19 19:04:43,674:INFO:Defining folds
2025-08-19 19:04:43,674:INFO:Declaring metric variables
2025-08-19 19:04:43,674:INFO:Importing untrained model
2025-08-19 19:04:43,674:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:04:43,674:INFO:Starting cross validation
2025-08-19 19:04:43,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:44,212:INFO:Calculating mean and std
2025-08-19 19:04:44,214:INFO:Creating metrics dataframe
2025-08-19 19:04:44,233:INFO:Uploading results into container
2025-08-19 19:04:44,233:INFO:Uploading model into container now
2025-08-19 19:04:44,234:INFO:_master_model_container: 12
2025-08-19 19:04:44,234:INFO:_display_container: 2
2025-08-19 19:04:44,234:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:04:44,235:INFO:create_model() successfully completed......................................
2025-08-19 19:04:44,936:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:44,936:INFO:Creating metrics dataframe
2025-08-19 19:04:44,945:INFO:Initializing Extreme Gradient Boosting
2025-08-19 19:04:44,945:INFO:Total runtime is 0.19541198412577312 minutes
2025-08-19 19:04:44,946:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:44,948:INFO:Initializing create_model()
2025-08-19 19:04:44,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:44,948:INFO:Checking exceptions
2025-08-19 19:04:44,949:INFO:Importing libraries
2025-08-19 19:04:44,949:INFO:Copying training dataset
2025-08-19 19:04:44,968:INFO:Defining folds
2025-08-19 19:04:44,968:INFO:Declaring metric variables
2025-08-19 19:04:44,968:INFO:Importing untrained model
2025-08-19 19:04:44,969:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:04:44,969:INFO:Starting cross validation
2025-08-19 19:04:44,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:45,735:INFO:Calculating mean and std
2025-08-19 19:04:45,736:INFO:Creating metrics dataframe
2025-08-19 19:04:45,738:INFO:Uploading results into container
2025-08-19 19:04:45,738:INFO:Uploading model into container now
2025-08-19 19:04:45,738:INFO:_master_model_container: 13
2025-08-19 19:04:45,738:INFO:_display_container: 2
2025-08-19 19:04:45,739:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:04:45,739:INFO:create_model() successfully completed......................................
2025-08-19 19:04:45,828:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:45,828:INFO:Creating metrics dataframe
2025-08-19 19:04:45,830:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 19:04:45,830:INFO:Total runtime is 0.21015616655349734 minutes
2025-08-19 19:04:45,830:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:45,830:INFO:Initializing create_model()
2025-08-19 19:04:45,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:45,830:INFO:Checking exceptions
2025-08-19 19:04:45,830:INFO:Importing libraries
2025-08-19 19:04:45,830:INFO:Copying training dataset
2025-08-19 19:04:45,832:INFO:Defining folds
2025-08-19 19:04:45,832:INFO:Declaring metric variables
2025-08-19 19:04:45,832:INFO:Importing untrained model
2025-08-19 19:04:45,832:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:04:45,833:INFO:Starting cross validation
2025-08-19 19:04:45,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:49,468:INFO:Calculating mean and std
2025-08-19 19:04:49,470:INFO:Creating metrics dataframe
2025-08-19 19:04:49,471:INFO:Uploading results into container
2025-08-19 19:04:49,471:INFO:Uploading model into container now
2025-08-19 19:04:49,472:INFO:_master_model_container: 14
2025-08-19 19:04:49,472:INFO:_display_container: 2
2025-08-19 19:04:49,472:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:04:49,472:INFO:create_model() successfully completed......................................
2025-08-19 19:04:49,587:INFO:SubProcess create_model() end ==================================
2025-08-19 19:04:49,587:INFO:Creating metrics dataframe
2025-08-19 19:04:49,589:INFO:Initializing CatBoost Classifier
2025-08-19 19:04:49,589:INFO:Total runtime is 0.2728022972742717 minutes
2025-08-19 19:04:49,589:INFO:SubProcess create_model() called ==================================
2025-08-19 19:04:49,589:INFO:Initializing create_model()
2025-08-19 19:04:49,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:04:49,589:INFO:Checking exceptions
2025-08-19 19:04:49,589:INFO:Importing libraries
2025-08-19 19:04:49,589:INFO:Copying training dataset
2025-08-19 19:04:49,591:INFO:Defining folds
2025-08-19 19:04:49,591:INFO:Declaring metric variables
2025-08-19 19:04:49,591:INFO:Importing untrained model
2025-08-19 19:04:49,591:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:04:49,592:INFO:Starting cross validation
2025-08-19 19:04:49,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:04:59,819:INFO:Calculating mean and std
2025-08-19 19:04:59,821:INFO:Creating metrics dataframe
2025-08-19 19:04:59,824:INFO:Uploading results into container
2025-08-19 19:04:59,824:INFO:Uploading model into container now
2025-08-19 19:04:59,825:INFO:_master_model_container: 15
2025-08-19 19:04:59,825:INFO:_display_container: 2
2025-08-19 19:04:59,825:INFO:<catboost.core.CatBoostClassifier object at 0x320cfd0f0>
2025-08-19 19:04:59,825:INFO:create_model() successfully completed......................................
2025-08-19 19:05:00,050:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:00,050:INFO:Creating metrics dataframe
2025-08-19 19:05:00,051:INFO:Initializing Dummy Classifier
2025-08-19 19:05:00,051:INFO:Total runtime is 0.44717959960301723 minutes
2025-08-19 19:05:00,052:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:00,052:INFO:Initializing create_model()
2025-08-19 19:05:00,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x320ff2260>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:00,052:INFO:Checking exceptions
2025-08-19 19:05:00,052:INFO:Importing libraries
2025-08-19 19:05:00,052:INFO:Copying training dataset
2025-08-19 19:05:00,057:INFO:Defining folds
2025-08-19 19:05:00,057:INFO:Declaring metric variables
2025-08-19 19:05:00,057:INFO:Importing untrained model
2025-08-19 19:05:00,058:INFO:Dummy Classifier Imported successfully
2025-08-19 19:05:00,058:INFO:Starting cross validation
2025-08-19 19:05:00,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:00,161:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,166:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,173:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,179:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,190:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,190:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,212:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,222:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,228:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,237:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:00,247:INFO:Calculating mean and std
2025-08-19 19:05:00,247:INFO:Creating metrics dataframe
2025-08-19 19:05:00,249:INFO:Uploading results into container
2025-08-19 19:05:00,249:INFO:Uploading model into container now
2025-08-19 19:05:00,249:INFO:_master_model_container: 16
2025-08-19 19:05:00,249:INFO:_display_container: 2
2025-08-19 19:05:00,249:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:05:00,250:INFO:create_model() successfully completed......................................
2025-08-19 19:05:00,351:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:00,351:INFO:Creating metrics dataframe
2025-08-19 19:05:00,352:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 19:05:00,353:INFO:Initializing create_model()
2025-08-19 19:05:00,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:00,353:INFO:Checking exceptions
2025-08-19 19:05:00,354:INFO:Importing libraries
2025-08-19 19:05:00,354:INFO:Copying training dataset
2025-08-19 19:05:00,356:INFO:Defining folds
2025-08-19 19:05:00,356:INFO:Declaring metric variables
2025-08-19 19:05:00,356:INFO:Importing untrained model
2025-08-19 19:05:00,356:INFO:Declaring custom model
2025-08-19 19:05:00,356:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:05:00,357:INFO:Cross validation set to False
2025-08-19 19:05:00,357:INFO:Fitting Model
2025-08-19 19:05:00,552:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:05:00,552:INFO:create_model() successfully completed......................................
2025-08-19 19:05:00,656:INFO:_master_model_container: 16
2025-08-19 19:05:00,656:INFO:_display_container: 2
2025-08-19 19:05:00,656:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:05:00,656:INFO:compare_models() successfully completed......................................
2025-08-19 19:05:00,658:INFO:Initializing create_model()
2025-08-19 19:05:00,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:00,659:INFO:Checking exceptions
2025-08-19 19:05:00,660:INFO:Importing libraries
2025-08-19 19:05:00,661:INFO:Copying training dataset
2025-08-19 19:05:00,672:INFO:Defining folds
2025-08-19 19:05:00,672:INFO:Declaring metric variables
2025-08-19 19:05:00,673:INFO:Importing untrained model
2025-08-19 19:05:00,673:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:05:00,673:INFO:Starting cross validation
2025-08-19 19:05:00,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:01,653:INFO:Calculating mean and std
2025-08-19 19:05:01,653:INFO:Creating metrics dataframe
2025-08-19 19:05:01,657:INFO:Finalizing model
2025-08-19 19:05:01,834:INFO:Uploading results into container
2025-08-19 19:05:01,834:INFO:Uploading model into container now
2025-08-19 19:05:01,834:INFO:_master_model_container: 17
2025-08-19 19:05:01,835:INFO:_display_container: 3
2025-08-19 19:05:01,835:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:05:01,835:INFO:create_model() successfully completed......................................
2025-08-19 19:05:01,937:INFO:Initializing finalize_model()
2025-08-19 19:05:01,937:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:01,937:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:05:01,939:INFO:Initializing create_model()
2025-08-19 19:05:01,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:01,939:INFO:Checking exceptions
2025-08-19 19:05:01,940:INFO:Importing libraries
2025-08-19 19:05:01,940:INFO:Copying training dataset
2025-08-19 19:05:01,940:INFO:Defining folds
2025-08-19 19:05:01,940:INFO:Declaring metric variables
2025-08-19 19:05:01,940:INFO:Importing untrained model
2025-08-19 19:05:01,940:INFO:Declaring custom model
2025-08-19 19:05:01,941:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:05:01,941:INFO:Cross validation set to False
2025-08-19 19:05:01,941:INFO:Fitting Model
2025-08-19 19:05:02,095:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:05:02,095:INFO:create_model() successfully completed......................................
2025-08-19 19:05:02,181:INFO:_master_model_container: 17
2025-08-19 19:05:02,182:INFO:_display_container: 3
2025-08-19 19:05:02,186:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:05:02,187:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:02,277:INFO:Initializing predict_model()
2025-08-19 19:05:02,277:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:02,277:INFO:Checking exceptions
2025-08-19 19:05:02,277:INFO:Preloading libraries
2025-08-19 19:05:02,277:INFO:Set up data.
2025-08-19 19:05:02,282:INFO:Set up index.
2025-08-19 19:05:02,426:INFO:Initializing create_model()
2025-08-19 19:05:02,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:02,426:INFO:Checking exceptions
2025-08-19 19:05:02,427:INFO:Importing libraries
2025-08-19 19:05:02,427:INFO:Copying training dataset
2025-08-19 19:05:02,429:INFO:Defining folds
2025-08-19 19:05:02,429:INFO:Declaring metric variables
2025-08-19 19:05:02,430:INFO:Importing untrained model
2025-08-19 19:05:02,430:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:05:02,430:INFO:Starting cross validation
2025-08-19 19:05:02,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:12,126:INFO:Calculating mean and std
2025-08-19 19:05:12,127:INFO:Creating metrics dataframe
2025-08-19 19:05:12,132:INFO:Finalizing model
2025-08-19 19:05:13,656:INFO:Uploading results into container
2025-08-19 19:05:13,656:INFO:Uploading model into container now
2025-08-19 19:05:13,657:INFO:_master_model_container: 18
2025-08-19 19:05:13,657:INFO:_display_container: 5
2025-08-19 19:05:13,657:INFO:<catboost.core.CatBoostClassifier object at 0x320cadde0>
2025-08-19 19:05:13,657:INFO:create_model() successfully completed......................................
2025-08-19 19:05:13,952:INFO:Initializing finalize_model()
2025-08-19 19:05:13,952:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=<catboost.core.CatBoostClassifier object at 0x320cadde0>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:13,953:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x320cadde0>
2025-08-19 19:05:13,956:INFO:Initializing create_model()
2025-08-19 19:05:13,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=<catboost.core.CatBoostClassifier object at 0x320cadde0>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:13,956:INFO:Checking exceptions
2025-08-19 19:05:13,958:INFO:Importing libraries
2025-08-19 19:05:13,958:INFO:Copying training dataset
2025-08-19 19:05:13,958:INFO:Defining folds
2025-08-19 19:05:13,958:INFO:Declaring metric variables
2025-08-19 19:05:13,958:INFO:Importing untrained model
2025-08-19 19:05:13,958:INFO:Declaring custom model
2025-08-19 19:05:13,958:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:05:13,959:INFO:Cross validation set to False
2025-08-19 19:05:13,959:INFO:Fitting Model
2025-08-19 19:05:16,009:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x3201e5ea0>)],
         verbose=False)
2025-08-19 19:05:16,009:INFO:create_model() successfully completed......................................
2025-08-19 19:05:16,097:INFO:_master_model_container: 18
2025-08-19 19:05:16,097:INFO:_display_container: 5
2025-08-19 19:05:16,101:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x3201e5ea0>)],
         verbose=False)
2025-08-19 19:05:16,101:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:16,191:INFO:Initializing predict_model()
2025-08-19 19:05:16,191:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x3201e5ea0>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:16,191:INFO:Checking exceptions
2025-08-19 19:05:16,191:INFO:Preloading libraries
2025-08-19 19:05:16,191:INFO:Set up data.
2025-08-19 19:05:16,196:INFO:Set up index.
2025-08-19 19:05:16,304:INFO:Initializing create_model()
2025-08-19 19:05:16,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:16,305:INFO:Checking exceptions
2025-08-19 19:05:16,305:INFO:Importing libraries
2025-08-19 19:05:16,306:INFO:Copying training dataset
2025-08-19 19:05:16,307:INFO:Defining folds
2025-08-19 19:05:16,307:INFO:Declaring metric variables
2025-08-19 19:05:16,307:INFO:Importing untrained model
2025-08-19 19:05:16,308:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:05:16,308:INFO:Starting cross validation
2025-08-19 19:05:16,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:17,840:INFO:Calculating mean and std
2025-08-19 19:05:17,841:INFO:Creating metrics dataframe
2025-08-19 19:05:17,845:INFO:Finalizing model
2025-08-19 19:05:18,456:INFO:Uploading results into container
2025-08-19 19:05:18,457:INFO:Uploading model into container now
2025-08-19 19:05:18,457:INFO:_master_model_container: 19
2025-08-19 19:05:18,457:INFO:_display_container: 7
2025-08-19 19:05:18,458:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:05:18,458:INFO:create_model() successfully completed......................................
2025-08-19 19:05:18,604:INFO:Initializing finalize_model()
2025-08-19 19:05:18,604:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:18,605:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:05:18,606:INFO:Initializing create_model()
2025-08-19 19:05:18,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:18,606:INFO:Checking exceptions
2025-08-19 19:05:18,608:INFO:Importing libraries
2025-08-19 19:05:18,608:INFO:Copying training dataset
2025-08-19 19:05:18,608:INFO:Defining folds
2025-08-19 19:05:18,608:INFO:Declaring metric variables
2025-08-19 19:05:18,608:INFO:Importing untrained model
2025-08-19 19:05:18,608:INFO:Declaring custom model
2025-08-19 19:05:18,609:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:05:18,609:INFO:Cross validation set to False
2025-08-19 19:05:18,609:INFO:Fitting Model
2025-08-19 19:05:19,322:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:05:19,322:INFO:create_model() successfully completed......................................
2025-08-19 19:05:19,407:INFO:_master_model_container: 19
2025-08-19 19:05:19,407:INFO:_display_container: 7
2025-08-19 19:05:19,412:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:05:19,412:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:19,507:INFO:Initializing predict_model()
2025-08-19 19:05:19,507:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:19,507:INFO:Checking exceptions
2025-08-19 19:05:19,507:INFO:Preloading libraries
2025-08-19 19:05:19,507:INFO:Set up data.
2025-08-19 19:05:19,512:INFO:Set up index.
2025-08-19 19:05:19,637:INFO:Initializing create_model()
2025-08-19 19:05:19,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:19,637:INFO:Checking exceptions
2025-08-19 19:05:19,638:INFO:Importing libraries
2025-08-19 19:05:19,638:INFO:Copying training dataset
2025-08-19 19:05:19,639:INFO:Defining folds
2025-08-19 19:05:19,639:INFO:Declaring metric variables
2025-08-19 19:05:19,640:INFO:Importing untrained model
2025-08-19 19:05:19,640:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:05:19,640:INFO:Starting cross validation
2025-08-19 19:05:19,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:19,995:INFO:Calculating mean and std
2025-08-19 19:05:19,995:INFO:Creating metrics dataframe
2025-08-19 19:05:19,996:INFO:Finalizing model
2025-08-19 19:05:20,157:INFO:Uploading results into container
2025-08-19 19:05:20,157:INFO:Uploading model into container now
2025-08-19 19:05:20,158:INFO:_master_model_container: 20
2025-08-19 19:05:20,158:INFO:_display_container: 9
2025-08-19 19:05:20,158:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:05:20,158:INFO:create_model() successfully completed......................................
2025-08-19 19:05:20,243:INFO:Initializing finalize_model()
2025-08-19 19:05:20,243:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:20,244:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:05:20,245:INFO:Initializing create_model()
2025-08-19 19:05:20,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:20,245:INFO:Checking exceptions
2025-08-19 19:05:20,246:INFO:Importing libraries
2025-08-19 19:05:20,246:INFO:Copying training dataset
2025-08-19 19:05:20,246:INFO:Defining folds
2025-08-19 19:05:20,246:INFO:Declaring metric variables
2025-08-19 19:05:20,246:INFO:Importing untrained model
2025-08-19 19:05:20,247:INFO:Declaring custom model
2025-08-19 19:05:20,247:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:05:20,248:INFO:Cross validation set to False
2025-08-19 19:05:20,248:INFO:Fitting Model
2025-08-19 19:05:20,419:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:05:20,420:INFO:create_model() successfully completed......................................
2025-08-19 19:05:20,505:INFO:_master_model_container: 20
2025-08-19 19:05:20,505:INFO:_display_container: 9
2025-08-19 19:05:20,511:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:05:20,511:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:20,602:INFO:Initializing predict_model()
2025-08-19 19:05:20,602:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:20,602:INFO:Checking exceptions
2025-08-19 19:05:20,602:INFO:Preloading libraries
2025-08-19 19:05:20,602:INFO:Set up data.
2025-08-19 19:05:20,607:INFO:Set up index.
2025-08-19 19:05:20,716:INFO:Initializing create_model()
2025-08-19 19:05:20,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:20,716:INFO:Checking exceptions
2025-08-19 19:05:20,717:INFO:Importing libraries
2025-08-19 19:05:20,717:INFO:Copying training dataset
2025-08-19 19:05:20,718:INFO:Defining folds
2025-08-19 19:05:20,718:INFO:Declaring metric variables
2025-08-19 19:05:20,718:INFO:Importing untrained model
2025-08-19 19:05:20,719:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:05:20,719:INFO:Starting cross validation
2025-08-19 19:05:20,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:20,904:INFO:Calculating mean and std
2025-08-19 19:05:20,905:INFO:Creating metrics dataframe
2025-08-19 19:05:20,906:INFO:Finalizing model
2025-08-19 19:05:20,948:INFO:Uploading results into container
2025-08-19 19:05:20,948:INFO:Uploading model into container now
2025-08-19 19:05:20,948:INFO:_master_model_container: 21
2025-08-19 19:05:20,948:INFO:_display_container: 11
2025-08-19 19:05:20,948:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:05:20,949:INFO:create_model() successfully completed......................................
2025-08-19 19:05:21,047:INFO:Initializing finalize_model()
2025-08-19 19:05:21,048:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:21,048:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:05:21,049:INFO:Initializing create_model()
2025-08-19 19:05:21,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:21,049:INFO:Checking exceptions
2025-08-19 19:05:21,050:INFO:Importing libraries
2025-08-19 19:05:21,050:INFO:Copying training dataset
2025-08-19 19:05:21,050:INFO:Defining folds
2025-08-19 19:05:21,050:INFO:Declaring metric variables
2025-08-19 19:05:21,050:INFO:Importing untrained model
2025-08-19 19:05:21,051:INFO:Declaring custom model
2025-08-19 19:05:21,051:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:05:21,052:INFO:Cross validation set to False
2025-08-19 19:05:21,052:INFO:Fitting Model
2025-08-19 19:05:21,104:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:05:21,104:INFO:create_model() successfully completed......................................
2025-08-19 19:05:21,194:INFO:_master_model_container: 21
2025-08-19 19:05:21,194:INFO:_display_container: 11
2025-08-19 19:05:21,199:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:05:21,199:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:21,302:INFO:Initializing predict_model()
2025-08-19 19:05:21,302:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:21,302:INFO:Checking exceptions
2025-08-19 19:05:21,302:INFO:Preloading libraries
2025-08-19 19:05:21,303:INFO:Set up data.
2025-08-19 19:05:21,307:INFO:Set up index.
2025-08-19 19:05:21,419:INFO:Initializing create_model()
2025-08-19 19:05:21,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:21,419:INFO:Checking exceptions
2025-08-19 19:05:21,420:INFO:Importing libraries
2025-08-19 19:05:21,421:INFO:Copying training dataset
2025-08-19 19:05:21,422:INFO:Defining folds
2025-08-19 19:05:21,422:INFO:Declaring metric variables
2025-08-19 19:05:21,423:INFO:Importing untrained model
2025-08-19 19:05:21,423:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:05:21,423:INFO:Starting cross validation
2025-08-19 19:05:21,424:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:27,296:INFO:Calculating mean and std
2025-08-19 19:05:27,482:INFO:Creating metrics dataframe
2025-08-19 19:05:27,555:INFO:Finalizing model
2025-08-19 19:05:27,633:INFO:[LightGBM] [Info] Number of positive: 474, number of negative: 294
2025-08-19 19:05:27,638:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.005169 seconds.
2025-08-19 19:05:27,638:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:05:27,638:INFO:[LightGBM] [Info] Total Bins 6377
2025-08-19 19:05:27,639:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 19:05:27,640:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.617188 -> initscore=0.477628
2025-08-19 19:05:27,640:INFO:[LightGBM] [Info] Start training from score 0.477628
2025-08-19 19:05:27,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:27,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:27,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:27,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:27,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:27,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:27,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:28,226:INFO:Uploading results into container
2025-08-19 19:05:28,226:INFO:Uploading model into container now
2025-08-19 19:05:28,227:INFO:_master_model_container: 22
2025-08-19 19:05:28,227:INFO:_display_container: 13
2025-08-19 19:05:28,228:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:05:28,228:INFO:create_model() successfully completed......................................
2025-08-19 19:05:28,364:INFO:Initializing finalize_model()
2025-08-19 19:05:28,364:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:28,365:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:05:28,367:INFO:Initializing create_model()
2025-08-19 19:05:28,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:28,367:INFO:Checking exceptions
2025-08-19 19:05:28,369:INFO:Importing libraries
2025-08-19 19:05:28,369:INFO:Copying training dataset
2025-08-19 19:05:28,369:INFO:Defining folds
2025-08-19 19:05:28,369:INFO:Declaring metric variables
2025-08-19 19:05:28,369:INFO:Importing untrained model
2025-08-19 19:05:28,369:INFO:Declaring custom model
2025-08-19 19:05:28,370:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:05:28,371:INFO:Cross validation set to False
2025-08-19 19:05:28,371:INFO:Fitting Model
2025-08-19 19:05:28,410:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 19:05:28,411:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001447 seconds.
2025-08-19 19:05:28,411:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:05:28,411:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 19:05:28,414:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 19:05:28,414:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 19:05:28,414:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 19:05:28,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:28,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:28,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:28,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:29,003:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:05:29,003:INFO:create_model() successfully completed......................................
2025-08-19 19:05:29,091:INFO:_master_model_container: 22
2025-08-19 19:05:29,091:INFO:_display_container: 13
2025-08-19 19:05:29,097:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:05:29,097:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:29,188:INFO:Initializing predict_model()
2025-08-19 19:05:29,188:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:29,188:INFO:Checking exceptions
2025-08-19 19:05:29,188:INFO:Preloading libraries
2025-08-19 19:05:29,188:INFO:Set up data.
2025-08-19 19:05:29,192:INFO:Set up index.
2025-08-19 19:05:29,298:INFO:Initializing create_model()
2025-08-19 19:05:29,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:29,298:INFO:Checking exceptions
2025-08-19 19:05:29,299:INFO:Importing libraries
2025-08-19 19:05:29,299:INFO:Copying training dataset
2025-08-19 19:05:29,300:INFO:Defining folds
2025-08-19 19:05:29,300:INFO:Declaring metric variables
2025-08-19 19:05:29,300:INFO:Importing untrained model
2025-08-19 19:05:29,301:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:05:29,301:INFO:Starting cross validation
2025-08-19 19:05:29,301:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:29,348:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,359:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,360:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,373:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,373:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,375:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,401:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,425:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,569:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,575:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,729:INFO:Calculating mean and std
2025-08-19 19:05:29,730:INFO:Creating metrics dataframe
2025-08-19 19:05:29,731:INFO:Finalizing model
2025-08-19 19:05:29,754:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:29,890:INFO:Uploading results into container
2025-08-19 19:05:29,890:INFO:Uploading model into container now
2025-08-19 19:05:29,891:INFO:_master_model_container: 23
2025-08-19 19:05:29,891:INFO:_display_container: 15
2025-08-19 19:05:29,891:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:05:29,891:INFO:create_model() successfully completed......................................
2025-08-19 19:05:29,974:INFO:Initializing finalize_model()
2025-08-19 19:05:29,974:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:29,975:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:05:29,976:INFO:Initializing create_model()
2025-08-19 19:05:29,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:29,976:INFO:Checking exceptions
2025-08-19 19:05:29,977:INFO:Importing libraries
2025-08-19 19:05:29,977:INFO:Copying training dataset
2025-08-19 19:05:29,977:INFO:Defining folds
2025-08-19 19:05:29,977:INFO:Declaring metric variables
2025-08-19 19:05:29,977:INFO:Importing untrained model
2025-08-19 19:05:29,977:INFO:Declaring custom model
2025-08-19 19:05:29,977:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:05:29,978:INFO:Cross validation set to False
2025-08-19 19:05:29,978:INFO:Fitting Model
2025-08-19 19:05:30,001:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:30,181:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:05:30,181:INFO:create_model() successfully completed......................................
2025-08-19 19:05:30,269:INFO:_master_model_container: 23
2025-08-19 19:05:30,269:INFO:_display_container: 15
2025-08-19 19:05:30,274:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:05:30,274:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:30,368:INFO:Initializing predict_model()
2025-08-19 19:05:30,368:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:30,368:INFO:Checking exceptions
2025-08-19 19:05:30,368:INFO:Preloading libraries
2025-08-19 19:05:30,368:INFO:Set up data.
2025-08-19 19:05:30,372:INFO:Set up index.
2025-08-19 19:05:30,485:INFO:Initializing create_model()
2025-08-19 19:05:30,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:30,485:INFO:Checking exceptions
2025-08-19 19:05:30,486:INFO:Importing libraries
2025-08-19 19:05:30,486:INFO:Copying training dataset
2025-08-19 19:05:30,488:INFO:Defining folds
2025-08-19 19:05:30,488:INFO:Declaring metric variables
2025-08-19 19:05:30,488:INFO:Importing untrained model
2025-08-19 19:05:30,489:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:05:30,489:INFO:Starting cross validation
2025-08-19 19:05:30,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:30,883:INFO:Calculating mean and std
2025-08-19 19:05:30,883:INFO:Creating metrics dataframe
2025-08-19 19:05:30,884:INFO:Finalizing model
2025-08-19 19:05:30,976:INFO:Uploading results into container
2025-08-19 19:05:30,976:INFO:Uploading model into container now
2025-08-19 19:05:30,976:INFO:_master_model_container: 24
2025-08-19 19:05:30,976:INFO:_display_container: 17
2025-08-19 19:05:30,977:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:05:30,977:INFO:create_model() successfully completed......................................
2025-08-19 19:05:31,070:INFO:Initializing finalize_model()
2025-08-19 19:05:31,070:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:31,071:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:05:31,073:INFO:Initializing create_model()
2025-08-19 19:05:31,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:31,073:INFO:Checking exceptions
2025-08-19 19:05:31,075:INFO:Importing libraries
2025-08-19 19:05:31,075:INFO:Copying training dataset
2025-08-19 19:05:31,075:INFO:Defining folds
2025-08-19 19:05:31,075:INFO:Declaring metric variables
2025-08-19 19:05:31,076:INFO:Importing untrained model
2025-08-19 19:05:31,076:INFO:Declaring custom model
2025-08-19 19:05:31,076:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:05:31,077:INFO:Cross validation set to False
2025-08-19 19:05:31,077:INFO:Fitting Model
2025-08-19 19:05:31,233:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:05:31,233:INFO:create_model() successfully completed......................................
2025-08-19 19:05:31,321:INFO:_master_model_container: 24
2025-08-19 19:05:31,321:INFO:_display_container: 17
2025-08-19 19:05:31,327:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:05:31,327:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:31,464:INFO:Initializing predict_model()
2025-08-19 19:05:31,464:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:31,464:INFO:Checking exceptions
2025-08-19 19:05:31,464:INFO:Preloading libraries
2025-08-19 19:05:31,464:INFO:Set up data.
2025-08-19 19:05:31,469:INFO:Set up index.
2025-08-19 19:05:31,614:INFO:Initializing create_model()
2025-08-19 19:05:31,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:31,614:INFO:Checking exceptions
2025-08-19 19:05:31,615:INFO:Importing libraries
2025-08-19 19:05:31,615:INFO:Copying training dataset
2025-08-19 19:05:31,617:INFO:Defining folds
2025-08-19 19:05:31,617:INFO:Declaring metric variables
2025-08-19 19:05:31,617:INFO:Importing untrained model
2025-08-19 19:05:31,617:INFO:Dummy Classifier Imported successfully
2025-08-19 19:05:31,617:INFO:Starting cross validation
2025-08-19 19:05:31,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:31,690:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,693:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,694:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,707:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,711:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,713:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,717:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,734:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,743:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,744:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:31,752:INFO:Calculating mean and std
2025-08-19 19:05:31,752:INFO:Creating metrics dataframe
2025-08-19 19:05:31,753:INFO:Finalizing model
2025-08-19 19:05:31,777:INFO:Uploading results into container
2025-08-19 19:05:31,777:INFO:Uploading model into container now
2025-08-19 19:05:31,777:INFO:_master_model_container: 25
2025-08-19 19:05:31,777:INFO:_display_container: 19
2025-08-19 19:05:31,777:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:05:31,777:INFO:create_model() successfully completed......................................
2025-08-19 19:05:31,861:INFO:Initializing finalize_model()
2025-08-19 19:05:31,861:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:31,861:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:05:31,863:INFO:Initializing create_model()
2025-08-19 19:05:31,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:31,863:INFO:Checking exceptions
2025-08-19 19:05:31,863:INFO:Importing libraries
2025-08-19 19:05:31,864:INFO:Copying training dataset
2025-08-19 19:05:31,864:INFO:Defining folds
2025-08-19 19:05:31,864:INFO:Declaring metric variables
2025-08-19 19:05:31,864:INFO:Importing untrained model
2025-08-19 19:05:31,864:INFO:Declaring custom model
2025-08-19 19:05:31,864:INFO:Dummy Classifier Imported successfully
2025-08-19 19:05:31,865:INFO:Cross validation set to False
2025-08-19 19:05:31,865:INFO:Fitting Model
2025-08-19 19:05:31,893:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:05:31,893:INFO:create_model() successfully completed......................................
2025-08-19 19:05:31,980:INFO:_master_model_container: 25
2025-08-19 19:05:31,980:INFO:_display_container: 19
2025-08-19 19:05:31,985:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:05:31,985:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:32,074:INFO:Initializing predict_model()
2025-08-19 19:05:32,074:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:32,075:INFO:Checking exceptions
2025-08-19 19:05:32,075:INFO:Preloading libraries
2025-08-19 19:05:32,075:INFO:Set up data.
2025-08-19 19:05:32,079:INFO:Set up index.
2025-08-19 19:05:32,095:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:32,185:INFO:Initializing create_model()
2025-08-19 19:05:32,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:32,185:INFO:Checking exceptions
2025-08-19 19:05:32,186:INFO:Importing libraries
2025-08-19 19:05:32,186:INFO:Copying training dataset
2025-08-19 19:05:32,188:INFO:Defining folds
2025-08-19 19:05:32,188:INFO:Declaring metric variables
2025-08-19 19:05:32,188:INFO:Importing untrained model
2025-08-19 19:05:32,188:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:05:32,189:INFO:Starting cross validation
2025-08-19 19:05:32,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:32,325:INFO:Calculating mean and std
2025-08-19 19:05:32,326:INFO:Creating metrics dataframe
2025-08-19 19:05:32,327:INFO:Finalizing model
2025-08-19 19:05:32,351:INFO:Uploading results into container
2025-08-19 19:05:32,351:INFO:Uploading model into container now
2025-08-19 19:05:32,351:INFO:_master_model_container: 26
2025-08-19 19:05:32,351:INFO:_display_container: 21
2025-08-19 19:05:32,351:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:05:32,351:INFO:create_model() successfully completed......................................
2025-08-19 19:05:32,436:INFO:Initializing finalize_model()
2025-08-19 19:05:32,436:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:32,436:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:05:32,438:INFO:Initializing create_model()
2025-08-19 19:05:32,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:32,438:INFO:Checking exceptions
2025-08-19 19:05:32,439:INFO:Importing libraries
2025-08-19 19:05:32,439:INFO:Copying training dataset
2025-08-19 19:05:32,439:INFO:Defining folds
2025-08-19 19:05:32,439:INFO:Declaring metric variables
2025-08-19 19:05:32,439:INFO:Importing untrained model
2025-08-19 19:05:32,439:INFO:Declaring custom model
2025-08-19 19:05:32,439:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:05:32,440:INFO:Cross validation set to False
2025-08-19 19:05:32,440:INFO:Fitting Model
2025-08-19 19:05:32,467:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:05:32,467:INFO:create_model() successfully completed......................................
2025-08-19 19:05:32,551:INFO:_master_model_container: 26
2025-08-19 19:05:32,551:INFO:_display_container: 21
2025-08-19 19:05:32,556:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:05:32,556:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:32,642:INFO:Initializing predict_model()
2025-08-19 19:05:32,643:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:32,643:INFO:Checking exceptions
2025-08-19 19:05:32,643:INFO:Preloading libraries
2025-08-19 19:05:32,643:INFO:Set up data.
2025-08-19 19:05:32,647:INFO:Set up index.
2025-08-19 19:05:33,003:INFO:Initializing create_model()
2025-08-19 19:05:33,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:33,004:INFO:Checking exceptions
2025-08-19 19:05:33,005:INFO:Importing libraries
2025-08-19 19:05:33,005:INFO:Copying training dataset
2025-08-19 19:05:33,007:INFO:Defining folds
2025-08-19 19:05:33,007:INFO:Declaring metric variables
2025-08-19 19:05:33,007:INFO:Importing untrained model
2025-08-19 19:05:33,008:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:05:33,008:INFO:Starting cross validation
2025-08-19 19:05:33,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:33,072:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,094:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,123:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,126:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,142:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,148:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,206:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,207:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,229:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,246:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,282:INFO:Calculating mean and std
2025-08-19 19:05:33,283:INFO:Creating metrics dataframe
2025-08-19 19:05:33,284:INFO:Finalizing model
2025-08-19 19:05:33,326:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,429:INFO:Uploading results into container
2025-08-19 19:05:33,430:INFO:Uploading model into container now
2025-08-19 19:05:33,484:INFO:_master_model_container: 27
2025-08-19 19:05:33,484:INFO:_display_container: 23
2025-08-19 19:05:33,485:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:05:33,485:INFO:create_model() successfully completed......................................
2025-08-19 19:05:33,729:INFO:Initializing finalize_model()
2025-08-19 19:05:33,729:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:33,729:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:05:33,731:INFO:Initializing create_model()
2025-08-19 19:05:33,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:33,731:INFO:Checking exceptions
2025-08-19 19:05:33,732:INFO:Importing libraries
2025-08-19 19:05:33,732:INFO:Copying training dataset
2025-08-19 19:05:33,732:INFO:Defining folds
2025-08-19 19:05:33,732:INFO:Declaring metric variables
2025-08-19 19:05:33,732:INFO:Importing untrained model
2025-08-19 19:05:33,733:INFO:Declaring custom model
2025-08-19 19:05:33,733:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:05:33,733:INFO:Cross validation set to False
2025-08-19 19:05:33,733:INFO:Fitting Model
2025-08-19 19:05:33,782:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:33,954:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:05:33,959:INFO:create_model() successfully completed......................................
2025-08-19 19:05:34,141:INFO:_master_model_container: 27
2025-08-19 19:05:34,141:INFO:_display_container: 23
2025-08-19 19:05:34,145:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:05:34,145:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:34,244:INFO:Initializing predict_model()
2025-08-19 19:05:34,244:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:34,244:INFO:Checking exceptions
2025-08-19 19:05:34,244:INFO:Preloading libraries
2025-08-19 19:05:34,244:INFO:Set up data.
2025-08-19 19:05:34,248:INFO:Set up index.
2025-08-19 19:05:34,365:INFO:Initializing create_model()
2025-08-19 19:05:34,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:34,366:INFO:Checking exceptions
2025-08-19 19:05:34,367:INFO:Importing libraries
2025-08-19 19:05:34,367:INFO:Copying training dataset
2025-08-19 19:05:34,369:INFO:Defining folds
2025-08-19 19:05:34,369:INFO:Declaring metric variables
2025-08-19 19:05:34,369:INFO:Importing untrained model
2025-08-19 19:05:34,369:INFO:Ridge Classifier Imported successfully
2025-08-19 19:05:34,369:INFO:Starting cross validation
2025-08-19 19:05:34,370:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:34,447:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:34,520:INFO:Calculating mean and std
2025-08-19 19:05:34,521:INFO:Creating metrics dataframe
2025-08-19 19:05:34,522:INFO:Finalizing model
2025-08-19 19:05:34,547:INFO:Uploading results into container
2025-08-19 19:05:34,548:INFO:Uploading model into container now
2025-08-19 19:05:34,548:INFO:_master_model_container: 28
2025-08-19 19:05:34,548:INFO:_display_container: 25
2025-08-19 19:05:34,548:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:05:34,548:INFO:create_model() successfully completed......................................
2025-08-19 19:05:34,668:INFO:Initializing finalize_model()
2025-08-19 19:05:34,668:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:34,668:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:05:34,669:INFO:Initializing create_model()
2025-08-19 19:05:34,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:34,670:INFO:Checking exceptions
2025-08-19 19:05:34,673:INFO:Importing libraries
2025-08-19 19:05:34,674:INFO:Copying training dataset
2025-08-19 19:05:34,677:INFO:Defining folds
2025-08-19 19:05:34,678:INFO:Declaring metric variables
2025-08-19 19:05:34,678:INFO:Importing untrained model
2025-08-19 19:05:34,678:INFO:Declaring custom model
2025-08-19 19:05:34,681:INFO:Ridge Classifier Imported successfully
2025-08-19 19:05:34,701:INFO:Cross validation set to False
2025-08-19 19:05:34,701:INFO:Fitting Model
2025-08-19 19:05:34,872:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:05:34,872:INFO:create_model() successfully completed......................................
2025-08-19 19:05:35,079:INFO:_master_model_container: 28
2025-08-19 19:05:35,079:INFO:_display_container: 25
2025-08-19 19:05:35,086:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:05:35,086:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:35,202:INFO:Initializing predict_model()
2025-08-19 19:05:35,202:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:35,203:INFO:Checking exceptions
2025-08-19 19:05:35,203:INFO:Preloading libraries
2025-08-19 19:05:35,203:INFO:Set up data.
2025-08-19 19:05:35,208:INFO:Set up index.
2025-08-19 19:05:35,316:INFO:Initializing create_model()
2025-08-19 19:05:35,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:35,316:INFO:Checking exceptions
2025-08-19 19:05:35,317:INFO:Importing libraries
2025-08-19 19:05:35,317:INFO:Copying training dataset
2025-08-19 19:05:35,319:INFO:Defining folds
2025-08-19 19:05:35,319:INFO:Declaring metric variables
2025-08-19 19:05:35,319:INFO:Importing untrained model
2025-08-19 19:05:35,320:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:05:35,320:INFO:Starting cross validation
2025-08-19 19:05:35,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:35,426:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:35,469:INFO:Calculating mean and std
2025-08-19 19:05:35,470:INFO:Creating metrics dataframe
2025-08-19 19:05:35,471:INFO:Finalizing model
2025-08-19 19:05:35,530:INFO:Uploading results into container
2025-08-19 19:05:35,531:INFO:Uploading model into container now
2025-08-19 19:05:35,532:INFO:_master_model_container: 29
2025-08-19 19:05:35,532:INFO:_display_container: 27
2025-08-19 19:05:35,532:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:05:35,532:INFO:create_model() successfully completed......................................
2025-08-19 19:05:35,647:INFO:Initializing finalize_model()
2025-08-19 19:05:35,647:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:35,647:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:05:35,648:INFO:Initializing create_model()
2025-08-19 19:05:35,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:35,648:INFO:Checking exceptions
2025-08-19 19:05:35,649:INFO:Importing libraries
2025-08-19 19:05:35,649:INFO:Copying training dataset
2025-08-19 19:05:35,649:INFO:Defining folds
2025-08-19 19:05:35,650:INFO:Declaring metric variables
2025-08-19 19:05:35,650:INFO:Importing untrained model
2025-08-19 19:05:35,650:INFO:Declaring custom model
2025-08-19 19:05:35,650:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:05:35,651:INFO:Cross validation set to False
2025-08-19 19:05:35,651:INFO:Fitting Model
2025-08-19 19:05:35,721:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:05:35,721:INFO:create_model() successfully completed......................................
2025-08-19 19:05:35,867:INFO:_master_model_container: 29
2025-08-19 19:05:35,867:INFO:_display_container: 27
2025-08-19 19:05:35,879:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:05:35,879:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:35,980:INFO:Initializing predict_model()
2025-08-19 19:05:35,980:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:35,980:INFO:Checking exceptions
2025-08-19 19:05:35,980:INFO:Preloading libraries
2025-08-19 19:05:35,981:INFO:Set up data.
2025-08-19 19:05:35,985:INFO:Set up index.
2025-08-19 19:05:36,094:INFO:Initializing create_model()
2025-08-19 19:05:36,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:36,094:INFO:Checking exceptions
2025-08-19 19:05:36,095:INFO:Importing libraries
2025-08-19 19:05:36,095:INFO:Copying training dataset
2025-08-19 19:05:36,097:INFO:Defining folds
2025-08-19 19:05:36,097:INFO:Declaring metric variables
2025-08-19 19:05:36,097:INFO:Importing untrained model
2025-08-19 19:05:36,097:INFO:Logistic Regression Imported successfully
2025-08-19 19:05:36,098:INFO:Starting cross validation
2025-08-19 19:05:36,098:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:36,153:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:36,217:INFO:Calculating mean and std
2025-08-19 19:05:36,217:INFO:Creating metrics dataframe
2025-08-19 19:05:36,218:INFO:Finalizing model
2025-08-19 19:05:36,718:INFO:Uploading results into container
2025-08-19 19:05:36,721:INFO:Uploading model into container now
2025-08-19 19:05:36,724:INFO:_master_model_container: 30
2025-08-19 19:05:36,724:INFO:_display_container: 29
2025-08-19 19:05:36,726:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:05:36,726:INFO:create_model() successfully completed......................................
2025-08-19 19:05:37,761:INFO:Initializing finalize_model()
2025-08-19 19:05:37,761:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:37,761:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:05:37,763:INFO:Initializing create_model()
2025-08-19 19:05:37,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:37,763:INFO:Checking exceptions
2025-08-19 19:05:37,765:INFO:Importing libraries
2025-08-19 19:05:37,765:INFO:Copying training dataset
2025-08-19 19:05:37,765:INFO:Defining folds
2025-08-19 19:05:37,765:INFO:Declaring metric variables
2025-08-19 19:05:37,765:INFO:Importing untrained model
2025-08-19 19:05:37,765:INFO:Declaring custom model
2025-08-19 19:05:37,765:INFO:Logistic Regression Imported successfully
2025-08-19 19:05:37,766:INFO:Cross validation set to False
2025-08-19 19:05:37,766:INFO:Fitting Model
2025-08-19 19:05:37,811:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:05:37,811:INFO:create_model() successfully completed......................................
2025-08-19 19:05:37,912:INFO:_master_model_container: 30
2025-08-19 19:05:37,912:INFO:_display_container: 29
2025-08-19 19:05:37,919:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:05:37,919:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:38,029:INFO:Initializing predict_model()
2025-08-19 19:05:38,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:38,029:INFO:Checking exceptions
2025-08-19 19:05:38,029:INFO:Preloading libraries
2025-08-19 19:05:38,029:INFO:Set up data.
2025-08-19 19:05:38,033:INFO:Set up index.
2025-08-19 19:05:38,160:INFO:Initializing create_model()
2025-08-19 19:05:38,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:38,160:INFO:Checking exceptions
2025-08-19 19:05:38,161:INFO:Importing libraries
2025-08-19 19:05:38,161:INFO:Copying training dataset
2025-08-19 19:05:38,163:INFO:Defining folds
2025-08-19 19:05:38,164:INFO:Declaring metric variables
2025-08-19 19:05:38,164:INFO:Importing untrained model
2025-08-19 19:05:38,164:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:05:38,164:INFO:Starting cross validation
2025-08-19 19:05:38,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:38,349:INFO:Calculating mean and std
2025-08-19 19:05:38,350:INFO:Creating metrics dataframe
2025-08-19 19:05:38,351:INFO:Finalizing model
2025-08-19 19:05:38,382:INFO:Uploading results into container
2025-08-19 19:05:38,382:INFO:Uploading model into container now
2025-08-19 19:05:38,382:INFO:_master_model_container: 31
2025-08-19 19:05:38,382:INFO:_display_container: 31
2025-08-19 19:05:38,383:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:05:38,383:INFO:create_model() successfully completed......................................
2025-08-19 19:05:38,530:INFO:Initializing finalize_model()
2025-08-19 19:05:38,530:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:38,530:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:05:38,538:INFO:Initializing create_model()
2025-08-19 19:05:38,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:38,539:INFO:Checking exceptions
2025-08-19 19:05:38,541:INFO:Importing libraries
2025-08-19 19:05:38,541:INFO:Copying training dataset
2025-08-19 19:05:38,541:INFO:Defining folds
2025-08-19 19:05:38,541:INFO:Declaring metric variables
2025-08-19 19:05:38,541:INFO:Importing untrained model
2025-08-19 19:05:38,541:INFO:Declaring custom model
2025-08-19 19:05:38,542:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:05:38,545:INFO:Cross validation set to False
2025-08-19 19:05:38,545:INFO:Fitting Model
2025-08-19 19:05:38,665:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:05:38,665:INFO:create_model() successfully completed......................................
2025-08-19 19:05:38,915:INFO:_master_model_container: 31
2025-08-19 19:05:38,915:INFO:_display_container: 31
2025-08-19 19:05:38,921:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:05:38,921:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:39,039:INFO:Initializing predict_model()
2025-08-19 19:05:39,039:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:39,039:INFO:Checking exceptions
2025-08-19 19:05:39,039:INFO:Preloading libraries
2025-08-19 19:05:39,040:INFO:Set up data.
2025-08-19 19:05:39,047:INFO:Set up index.
2025-08-19 19:05:39,182:INFO:Initializing create_model()
2025-08-19 19:05:39,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:39,182:INFO:Checking exceptions
2025-08-19 19:05:39,183:INFO:Importing libraries
2025-08-19 19:05:39,183:INFO:Copying training dataset
2025-08-19 19:05:39,186:INFO:Defining folds
2025-08-19 19:05:39,186:INFO:Declaring metric variables
2025-08-19 19:05:39,186:INFO:Importing untrained model
2025-08-19 19:05:39,187:INFO:Naive Bayes Imported successfully
2025-08-19 19:05:39,187:INFO:Starting cross validation
2025-08-19 19:05:39,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:39,349:INFO:Calculating mean and std
2025-08-19 19:05:39,350:INFO:Creating metrics dataframe
2025-08-19 19:05:39,351:INFO:Finalizing model
2025-08-19 19:05:39,377:INFO:Uploading results into container
2025-08-19 19:05:39,377:INFO:Uploading model into container now
2025-08-19 19:05:39,378:INFO:_master_model_container: 32
2025-08-19 19:05:39,378:INFO:_display_container: 33
2025-08-19 19:05:39,378:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:05:39,378:INFO:create_model() successfully completed......................................
2025-08-19 19:05:39,474:INFO:Initializing finalize_model()
2025-08-19 19:05:39,474:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:05:39,474:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:05:39,475:INFO:Initializing create_model()
2025-08-19 19:05:39,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:39,475:INFO:Checking exceptions
2025-08-19 19:05:39,476:INFO:Importing libraries
2025-08-19 19:05:39,476:INFO:Copying training dataset
2025-08-19 19:05:39,476:INFO:Defining folds
2025-08-19 19:05:39,476:INFO:Declaring metric variables
2025-08-19 19:05:39,477:INFO:Importing untrained model
2025-08-19 19:05:39,477:INFO:Declaring custom model
2025-08-19 19:05:39,477:INFO:Naive Bayes Imported successfully
2025-08-19 19:05:39,477:INFO:Cross validation set to False
2025-08-19 19:05:39,477:INFO:Fitting Model
2025-08-19 19:05:39,506:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:05:39,506:INFO:create_model() successfully completed......................................
2025-08-19 19:05:39,592:INFO:_master_model_container: 32
2025-08-19 19:05:39,592:INFO:_display_container: 33
2025-08-19 19:05:39,597:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:05:39,597:INFO:finalize_model() successfully completed......................................
2025-08-19 19:05:39,689:INFO:Initializing predict_model()
2025-08-19 19:05:39,689:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x320d83fd0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:05:39,689:INFO:Checking exceptions
2025-08-19 19:05:39,689:INFO:Preloading libraries
2025-08-19 19:05:39,689:INFO:Set up data.
2025-08-19 19:05:39,693:INFO:Set up index.
2025-08-19 19:05:39,835:INFO:PyCaret ClassificationExperiment
2025-08-19 19:05:39,835:INFO:Logging name: clf-default-name
2025-08-19 19:05:39,835:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 19:05:39,835:INFO:version 3.3.2
2025-08-19 19:05:39,835:INFO:Initializing setup()
2025-08-19 19:05:39,835:INFO:self.USI: b2c9
2025-08-19 19:05:39,835:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 19:05:39,835:INFO:Checking environment
2025-08-19 19:05:39,835:INFO:python_version: 3.10.18
2025-08-19 19:05:39,835:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 19:05:39,835:INFO:machine: arm64
2025-08-19 19:05:39,836:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 19:05:39,836:INFO:Memory: svmem(total=17179869184, available=3121676288, percent=81.8, used=6382370816, free=96813056, active=3041411072, inactive=2975481856, wired=3340959744)
2025-08-19 19:05:39,836:INFO:Physical Core: 8
2025-08-19 19:05:39,836:INFO:Logical Core: 8
2025-08-19 19:05:39,836:INFO:Checking libraries
2025-08-19 19:05:39,836:INFO:System:
2025-08-19 19:05:39,836:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 19:05:39,836:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 19:05:39,836:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 19:05:39,836:INFO:PyCaret required dependencies:
2025-08-19 19:05:39,836:INFO:                 pip: 25.2
2025-08-19 19:05:39,836:INFO:          setuptools: 80.9.0
2025-08-19 19:05:39,836:INFO:             pycaret: 3.3.2
2025-08-19 19:05:39,836:INFO:             IPython: 8.37.0
2025-08-19 19:05:39,836:INFO:          ipywidgets: 8.1.7
2025-08-19 19:05:39,836:INFO:                tqdm: 4.67.1
2025-08-19 19:05:39,836:INFO:               numpy: 1.25.2
2025-08-19 19:05:39,836:INFO:              pandas: 2.1.4
2025-08-19 19:05:39,836:INFO:              jinja2: 3.1.6
2025-08-19 19:05:39,836:INFO:               scipy: 1.9.3
2025-08-19 19:05:39,836:INFO:              joblib: 1.3.2
2025-08-19 19:05:39,836:INFO:             sklearn: 1.4.2
2025-08-19 19:05:39,836:INFO:                pyod: 2.0.5
2025-08-19 19:05:39,836:INFO:            imblearn: 0.12.4
2025-08-19 19:05:39,836:INFO:   category_encoders: 2.7.0
2025-08-19 19:05:39,836:INFO:            lightgbm: 4.6.0
2025-08-19 19:05:39,836:INFO:               numba: 0.61.2
2025-08-19 19:05:39,836:INFO:            requests: 2.32.4
2025-08-19 19:05:39,836:INFO:          matplotlib: 3.7.2
2025-08-19 19:05:39,836:INFO:          scikitplot: 0.3.7
2025-08-19 19:05:39,836:INFO:         yellowbrick: 1.5
2025-08-19 19:05:39,836:INFO:              plotly: 5.24.1
2025-08-19 19:05:39,836:INFO:    plotly-resampler: Not installed
2025-08-19 19:05:39,836:INFO:             kaleido: 1.0.0
2025-08-19 19:05:39,836:INFO:           schemdraw: 0.15
2025-08-19 19:05:39,836:INFO:         statsmodels: 0.14.5
2025-08-19 19:05:39,836:INFO:              sktime: 0.26.0
2025-08-19 19:05:39,836:INFO:               tbats: 1.1.3
2025-08-19 19:05:39,836:INFO:            pmdarima: 2.0.4
2025-08-19 19:05:39,836:INFO:              psutil: 7.0.0
2025-08-19 19:05:39,836:INFO:          markupsafe: 3.0.2
2025-08-19 19:05:39,837:INFO:             pickle5: Not installed
2025-08-19 19:05:39,837:INFO:         cloudpickle: 3.1.1
2025-08-19 19:05:39,837:INFO:         deprecation: 2.1.0
2025-08-19 19:05:39,837:INFO:              xxhash: 3.5.0
2025-08-19 19:05:39,837:INFO:           wurlitzer: 3.1.1
2025-08-19 19:05:39,837:INFO:PyCaret optional dependencies:
2025-08-19 19:05:39,837:INFO:                shap: 0.48.0
2025-08-19 19:05:39,837:INFO:           interpret: Not installed
2025-08-19 19:05:39,837:INFO:                umap: Not installed
2025-08-19 19:05:39,837:INFO:     ydata_profiling: Not installed
2025-08-19 19:05:39,837:INFO:  explainerdashboard: Not installed
2025-08-19 19:05:39,837:INFO:             autoviz: Not installed
2025-08-19 19:05:39,837:INFO:           fairlearn: Not installed
2025-08-19 19:05:39,837:INFO:          deepchecks: Not installed
2025-08-19 19:05:39,837:INFO:             xgboost: 3.0.4
2025-08-19 19:05:39,837:INFO:            catboost: 1.2.8
2025-08-19 19:05:39,837:INFO:              kmodes: Not installed
2025-08-19 19:05:39,837:INFO:             mlxtend: 0.23.4
2025-08-19 19:05:39,837:INFO:       statsforecast: Not installed
2025-08-19 19:05:39,837:INFO:        tune_sklearn: Not installed
2025-08-19 19:05:39,837:INFO:                 ray: Not installed
2025-08-19 19:05:39,837:INFO:            hyperopt: Not installed
2025-08-19 19:05:39,837:INFO:              optuna: 4.4.0
2025-08-19 19:05:39,837:INFO:               skopt: Not installed
2025-08-19 19:05:39,837:INFO:              mlflow: Not installed
2025-08-19 19:05:39,837:INFO:              gradio: Not installed
2025-08-19 19:05:39,837:INFO:             fastapi: Not installed
2025-08-19 19:05:39,837:INFO:             uvicorn: Not installed
2025-08-19 19:05:39,837:INFO:              m2cgen: Not installed
2025-08-19 19:05:39,837:INFO:           evidently: Not installed
2025-08-19 19:05:39,837:INFO:               fugue: Not installed
2025-08-19 19:05:39,837:INFO:           streamlit: Not installed
2025-08-19 19:05:39,837:INFO:             prophet: Not installed
2025-08-19 19:05:39,837:INFO:None
2025-08-19 19:05:39,837:INFO:Set up data.
2025-08-19 19:05:39,842:INFO:Set up folding strategy.
2025-08-19 19:05:39,842:INFO:Set up train/test split.
2025-08-19 19:05:39,842:INFO:Set up data.
2025-08-19 19:05:39,849:INFO:Set up index.
2025-08-19 19:05:39,850:INFO:Assigning column types.
2025-08-19 19:05:39,852:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 19:05:39,881:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:05:39,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:05:39,901:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:05:39,903:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:05:39,947:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:05:39,947:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:05:39,967:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:05:39,968:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:05:39,969:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 19:05:39,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:05:40,015:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:05:40,018:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:05:40,049:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:05:40,067:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:05:40,069:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:05:40,070:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 19:05:40,119:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:05:40,121:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:05:40,165:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:05:40,167:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:05:40,168:INFO:Preparing preprocessing pipeline...
2025-08-19 19:05:40,169:INFO:Set up label encoding.
2025-08-19 19:05:40,169:INFO:Set up simple imputation.
2025-08-19 19:05:40,170:INFO:Set up encoding of categorical features.
2025-08-19 19:05:40,228:INFO:Finished creating preprocessing pipeline.
2025-08-19 19:05:40,233:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 19:05:40,233:INFO:Creating final display dataframe.
2025-08-19 19:05:40,414:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              b2c9
2025-08-19 19:05:40,459:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:05:40,461:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:05:40,504:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:05:40,505:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:05:40,507:INFO:setup() successfully completed in 0.67s...............
2025-08-19 19:05:40,511:INFO:Initializing compare_models()
2025-08-19 19:05:40,511:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 19:05:40,511:INFO:Checking exceptions
2025-08-19 19:05:40,515:INFO:Preparing display monitor
2025-08-19 19:05:40,516:INFO:Initializing Logistic Regression
2025-08-19 19:05:40,517:INFO:Total runtime is 1.2159347534179687e-06 minutes
2025-08-19 19:05:40,517:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:40,517:INFO:Initializing create_model()
2025-08-19 19:05:40,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:40,517:INFO:Checking exceptions
2025-08-19 19:05:40,517:INFO:Importing libraries
2025-08-19 19:05:40,517:INFO:Copying training dataset
2025-08-19 19:05:40,519:INFO:Defining folds
2025-08-19 19:05:40,519:INFO:Declaring metric variables
2025-08-19 19:05:40,519:INFO:Importing untrained model
2025-08-19 19:05:40,519:INFO:Logistic Regression Imported successfully
2025-08-19 19:05:40,519:INFO:Starting cross validation
2025-08-19 19:05:40,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:40,696:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:40,705:INFO:Calculating mean and std
2025-08-19 19:05:40,706:INFO:Creating metrics dataframe
2025-08-19 19:05:40,707:INFO:Uploading results into container
2025-08-19 19:05:40,707:INFO:Uploading model into container now
2025-08-19 19:05:40,707:INFO:_master_model_container: 1
2025-08-19 19:05:40,707:INFO:_display_container: 2
2025-08-19 19:05:40,708:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:05:40,708:INFO:create_model() successfully completed......................................
2025-08-19 19:05:40,804:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:40,804:INFO:Creating metrics dataframe
2025-08-19 19:05:40,806:INFO:Initializing K Neighbors Classifier
2025-08-19 19:05:40,806:INFO:Total runtime is 0.004821221033732096 minutes
2025-08-19 19:05:40,806:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:40,806:INFO:Initializing create_model()
2025-08-19 19:05:40,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:40,806:INFO:Checking exceptions
2025-08-19 19:05:40,806:INFO:Importing libraries
2025-08-19 19:05:40,806:INFO:Copying training dataset
2025-08-19 19:05:40,808:INFO:Defining folds
2025-08-19 19:05:40,808:INFO:Declaring metric variables
2025-08-19 19:05:40,808:INFO:Importing untrained model
2025-08-19 19:05:40,809:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:05:40,809:INFO:Starting cross validation
2025-08-19 19:05:40,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:40,946:INFO:Calculating mean and std
2025-08-19 19:05:40,946:INFO:Creating metrics dataframe
2025-08-19 19:05:40,947:INFO:Uploading results into container
2025-08-19 19:05:40,947:INFO:Uploading model into container now
2025-08-19 19:05:40,948:INFO:_master_model_container: 2
2025-08-19 19:05:40,948:INFO:_display_container: 2
2025-08-19 19:05:40,948:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:05:40,948:INFO:create_model() successfully completed......................................
2025-08-19 19:05:41,033:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:41,033:INFO:Creating metrics dataframe
2025-08-19 19:05:41,034:INFO:Initializing Naive Bayes
2025-08-19 19:05:41,034:INFO:Total runtime is 0.008634066581726073 minutes
2025-08-19 19:05:41,035:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:41,035:INFO:Initializing create_model()
2025-08-19 19:05:41,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:41,035:INFO:Checking exceptions
2025-08-19 19:05:41,035:INFO:Importing libraries
2025-08-19 19:05:41,035:INFO:Copying training dataset
2025-08-19 19:05:41,037:INFO:Defining folds
2025-08-19 19:05:41,037:INFO:Declaring metric variables
2025-08-19 19:05:41,037:INFO:Importing untrained model
2025-08-19 19:05:41,037:INFO:Naive Bayes Imported successfully
2025-08-19 19:05:41,037:INFO:Starting cross validation
2025-08-19 19:05:41,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:41,179:INFO:Calculating mean and std
2025-08-19 19:05:41,179:INFO:Creating metrics dataframe
2025-08-19 19:05:41,181:INFO:Uploading results into container
2025-08-19 19:05:41,181:INFO:Uploading model into container now
2025-08-19 19:05:41,181:INFO:_master_model_container: 3
2025-08-19 19:05:41,181:INFO:_display_container: 2
2025-08-19 19:05:41,181:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:05:41,181:INFO:create_model() successfully completed......................................
2025-08-19 19:05:41,267:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:41,267:INFO:Creating metrics dataframe
2025-08-19 19:05:41,268:INFO:Initializing Decision Tree Classifier
2025-08-19 19:05:41,268:INFO:Total runtime is 0.012533132235209146 minutes
2025-08-19 19:05:41,269:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:41,269:INFO:Initializing create_model()
2025-08-19 19:05:41,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:41,269:INFO:Checking exceptions
2025-08-19 19:05:41,269:INFO:Importing libraries
2025-08-19 19:05:41,269:INFO:Copying training dataset
2025-08-19 19:05:41,271:INFO:Defining folds
2025-08-19 19:05:41,271:INFO:Declaring metric variables
2025-08-19 19:05:41,271:INFO:Importing untrained model
2025-08-19 19:05:41,271:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:05:41,272:INFO:Starting cross validation
2025-08-19 19:05:41,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:41,415:INFO:Calculating mean and std
2025-08-19 19:05:41,415:INFO:Creating metrics dataframe
2025-08-19 19:05:41,416:INFO:Uploading results into container
2025-08-19 19:05:41,417:INFO:Uploading model into container now
2025-08-19 19:05:41,417:INFO:_master_model_container: 4
2025-08-19 19:05:41,417:INFO:_display_container: 2
2025-08-19 19:05:41,417:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:05:41,417:INFO:create_model() successfully completed......................................
2025-08-19 19:05:41,502:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:41,502:INFO:Creating metrics dataframe
2025-08-19 19:05:41,503:INFO:Initializing SVM - Linear Kernel
2025-08-19 19:05:41,503:INFO:Total runtime is 0.016448152065277097 minutes
2025-08-19 19:05:41,503:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:41,504:INFO:Initializing create_model()
2025-08-19 19:05:41,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:41,504:INFO:Checking exceptions
2025-08-19 19:05:41,504:INFO:Importing libraries
2025-08-19 19:05:41,504:INFO:Copying training dataset
2025-08-19 19:05:41,505:INFO:Defining folds
2025-08-19 19:05:41,505:INFO:Declaring metric variables
2025-08-19 19:05:41,505:INFO:Importing untrained model
2025-08-19 19:05:41,506:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:05:41,506:INFO:Starting cross validation
2025-08-19 19:05:41,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:41,648:INFO:Calculating mean and std
2025-08-19 19:05:41,648:INFO:Creating metrics dataframe
2025-08-19 19:05:41,649:INFO:Uploading results into container
2025-08-19 19:05:41,650:INFO:Uploading model into container now
2025-08-19 19:05:41,650:INFO:_master_model_container: 5
2025-08-19 19:05:41,650:INFO:_display_container: 2
2025-08-19 19:05:41,650:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:05:41,650:INFO:create_model() successfully completed......................................
2025-08-19 19:05:41,746:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:41,746:INFO:Creating metrics dataframe
2025-08-19 19:05:41,748:INFO:Initializing Ridge Classifier
2025-08-19 19:05:41,748:INFO:Total runtime is 0.020519300301869707 minutes
2025-08-19 19:05:41,748:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:41,748:INFO:Initializing create_model()
2025-08-19 19:05:41,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:41,748:INFO:Checking exceptions
2025-08-19 19:05:41,748:INFO:Importing libraries
2025-08-19 19:05:41,748:INFO:Copying training dataset
2025-08-19 19:05:41,750:INFO:Defining folds
2025-08-19 19:05:41,750:INFO:Declaring metric variables
2025-08-19 19:05:41,750:INFO:Importing untrained model
2025-08-19 19:05:41,750:INFO:Ridge Classifier Imported successfully
2025-08-19 19:05:41,750:INFO:Starting cross validation
2025-08-19 19:05:41,751:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:41,881:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:41,896:INFO:Calculating mean and std
2025-08-19 19:05:41,896:INFO:Creating metrics dataframe
2025-08-19 19:05:41,898:INFO:Uploading results into container
2025-08-19 19:05:41,898:INFO:Uploading model into container now
2025-08-19 19:05:41,898:INFO:_master_model_container: 6
2025-08-19 19:05:41,898:INFO:_display_container: 2
2025-08-19 19:05:41,898:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:05:41,898:INFO:create_model() successfully completed......................................
2025-08-19 19:05:41,988:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:41,990:INFO:Creating metrics dataframe
2025-08-19 19:05:41,992:INFO:Initializing Random Forest Classifier
2025-08-19 19:05:41,994:INFO:Total runtime is 0.024632298946380613 minutes
2025-08-19 19:05:41,995:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:41,996:INFO:Initializing create_model()
2025-08-19 19:05:41,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:41,996:INFO:Checking exceptions
2025-08-19 19:05:41,996:INFO:Importing libraries
2025-08-19 19:05:41,996:INFO:Copying training dataset
2025-08-19 19:05:41,998:INFO:Defining folds
2025-08-19 19:05:42,002:INFO:Declaring metric variables
2025-08-19 19:05:42,003:INFO:Importing untrained model
2025-08-19 19:05:42,003:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:05:42,003:INFO:Starting cross validation
2025-08-19 19:05:42,004:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:42,535:INFO:Calculating mean and std
2025-08-19 19:05:42,535:INFO:Creating metrics dataframe
2025-08-19 19:05:42,536:INFO:Uploading results into container
2025-08-19 19:05:42,536:INFO:Uploading model into container now
2025-08-19 19:05:42,536:INFO:_master_model_container: 7
2025-08-19 19:05:42,536:INFO:_display_container: 2
2025-08-19 19:05:42,537:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:05:42,537:INFO:create_model() successfully completed......................................
2025-08-19 19:05:42,621:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:42,621:INFO:Creating metrics dataframe
2025-08-19 19:05:42,622:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 19:05:42,622:INFO:Total runtime is 0.03509938319524129 minutes
2025-08-19 19:05:42,622:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:42,623:INFO:Initializing create_model()
2025-08-19 19:05:42,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:42,623:INFO:Checking exceptions
2025-08-19 19:05:42,623:INFO:Importing libraries
2025-08-19 19:05:42,623:INFO:Copying training dataset
2025-08-19 19:05:42,624:INFO:Defining folds
2025-08-19 19:05:42,624:INFO:Declaring metric variables
2025-08-19 19:05:42,624:INFO:Importing untrained model
2025-08-19 19:05:42,625:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:05:42,625:INFO:Starting cross validation
2025-08-19 19:05:42,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:42,661:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,663:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,668:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,669:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,684:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,685:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,691:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,706:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,707:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,719:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:05:42,746:INFO:Calculating mean and std
2025-08-19 19:05:42,747:INFO:Creating metrics dataframe
2025-08-19 19:05:42,748:INFO:Uploading results into container
2025-08-19 19:05:42,748:INFO:Uploading model into container now
2025-08-19 19:05:42,748:INFO:_master_model_container: 8
2025-08-19 19:05:42,748:INFO:_display_container: 2
2025-08-19 19:05:42,748:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:05:42,748:INFO:create_model() successfully completed......................................
2025-08-19 19:05:42,833:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:42,833:INFO:Creating metrics dataframe
2025-08-19 19:05:42,834:INFO:Initializing Ada Boost Classifier
2025-08-19 19:05:42,834:INFO:Total runtime is 0.038632615407307946 minutes
2025-08-19 19:05:42,835:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:42,835:INFO:Initializing create_model()
2025-08-19 19:05:42,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:42,835:INFO:Checking exceptions
2025-08-19 19:05:42,835:INFO:Importing libraries
2025-08-19 19:05:42,835:INFO:Copying training dataset
2025-08-19 19:05:42,837:INFO:Defining folds
2025-08-19 19:05:42,837:INFO:Declaring metric variables
2025-08-19 19:05:42,837:INFO:Importing untrained model
2025-08-19 19:05:42,837:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:05:42,837:INFO:Starting cross validation
2025-08-19 19:05:42,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:42,872:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:42,873:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:42,873:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:42,874:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:42,896:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:42,899:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:42,906:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:42,909:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:43,161:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:43,164:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:05:43,327:INFO:Calculating mean and std
2025-08-19 19:05:43,327:INFO:Creating metrics dataframe
2025-08-19 19:05:43,328:INFO:Uploading results into container
2025-08-19 19:05:43,328:INFO:Uploading model into container now
2025-08-19 19:05:43,329:INFO:_master_model_container: 9
2025-08-19 19:05:43,329:INFO:_display_container: 2
2025-08-19 19:05:43,329:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:05:43,329:INFO:create_model() successfully completed......................................
2025-08-19 19:05:43,414:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:43,414:INFO:Creating metrics dataframe
2025-08-19 19:05:43,416:INFO:Initializing Gradient Boosting Classifier
2025-08-19 19:05:43,416:INFO:Total runtime is 0.04832913478215536 minutes
2025-08-19 19:05:43,416:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:43,416:INFO:Initializing create_model()
2025-08-19 19:05:43,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:43,416:INFO:Checking exceptions
2025-08-19 19:05:43,417:INFO:Importing libraries
2025-08-19 19:05:43,417:INFO:Copying training dataset
2025-08-19 19:05:43,419:INFO:Defining folds
2025-08-19 19:05:43,419:INFO:Declaring metric variables
2025-08-19 19:05:43,419:INFO:Importing untrained model
2025-08-19 19:05:43,420:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:05:43,420:INFO:Starting cross validation
2025-08-19 19:05:43,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:44,734:INFO:Calculating mean and std
2025-08-19 19:05:44,735:INFO:Creating metrics dataframe
2025-08-19 19:05:44,736:INFO:Uploading results into container
2025-08-19 19:05:44,736:INFO:Uploading model into container now
2025-08-19 19:05:44,736:INFO:_master_model_container: 10
2025-08-19 19:05:44,736:INFO:_display_container: 2
2025-08-19 19:05:44,736:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:05:44,736:INFO:create_model() successfully completed......................................
2025-08-19 19:05:44,821:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:44,821:INFO:Creating metrics dataframe
2025-08-19 19:05:44,822:INFO:Initializing Linear Discriminant Analysis
2025-08-19 19:05:44,822:INFO:Total runtime is 0.07176331679026286 minutes
2025-08-19 19:05:44,822:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:44,823:INFO:Initializing create_model()
2025-08-19 19:05:44,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:44,823:INFO:Checking exceptions
2025-08-19 19:05:44,823:INFO:Importing libraries
2025-08-19 19:05:44,823:INFO:Copying training dataset
2025-08-19 19:05:44,825:INFO:Defining folds
2025-08-19 19:05:44,825:INFO:Declaring metric variables
2025-08-19 19:05:44,825:INFO:Importing untrained model
2025-08-19 19:05:44,825:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:05:44,825:INFO:Starting cross validation
2025-08-19 19:05:44,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:44,961:INFO:Calculating mean and std
2025-08-19 19:05:44,961:INFO:Creating metrics dataframe
2025-08-19 19:05:44,962:INFO:Uploading results into container
2025-08-19 19:05:44,963:INFO:Uploading model into container now
2025-08-19 19:05:44,963:INFO:_master_model_container: 11
2025-08-19 19:05:44,963:INFO:_display_container: 2
2025-08-19 19:05:44,963:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:05:44,963:INFO:create_model() successfully completed......................................
2025-08-19 19:05:45,047:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:45,047:INFO:Creating metrics dataframe
2025-08-19 19:05:45,049:INFO:Initializing Extra Trees Classifier
2025-08-19 19:05:45,049:INFO:Total runtime is 0.07553631862004598 minutes
2025-08-19 19:05:45,049:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:45,049:INFO:Initializing create_model()
2025-08-19 19:05:45,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:45,049:INFO:Checking exceptions
2025-08-19 19:05:45,049:INFO:Importing libraries
2025-08-19 19:05:45,049:INFO:Copying training dataset
2025-08-19 19:05:45,051:INFO:Defining folds
2025-08-19 19:05:45,051:INFO:Declaring metric variables
2025-08-19 19:05:45,051:INFO:Importing untrained model
2025-08-19 19:05:45,051:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:05:45,051:INFO:Starting cross validation
2025-08-19 19:05:45,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:45,462:INFO:Calculating mean and std
2025-08-19 19:05:45,463:INFO:Creating metrics dataframe
2025-08-19 19:05:45,464:INFO:Uploading results into container
2025-08-19 19:05:45,464:INFO:Uploading model into container now
2025-08-19 19:05:45,464:INFO:_master_model_container: 12
2025-08-19 19:05:45,464:INFO:_display_container: 2
2025-08-19 19:05:45,464:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:05:45,464:INFO:create_model() successfully completed......................................
2025-08-19 19:05:45,549:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:45,549:INFO:Creating metrics dataframe
2025-08-19 19:05:45,550:INFO:Initializing Extreme Gradient Boosting
2025-08-19 19:05:45,550:INFO:Total runtime is 0.0838979681332906 minutes
2025-08-19 19:05:45,550:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:45,551:INFO:Initializing create_model()
2025-08-19 19:05:45,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:45,551:INFO:Checking exceptions
2025-08-19 19:05:45,551:INFO:Importing libraries
2025-08-19 19:05:45,551:INFO:Copying training dataset
2025-08-19 19:05:45,552:INFO:Defining folds
2025-08-19 19:05:45,552:INFO:Declaring metric variables
2025-08-19 19:05:45,552:INFO:Importing untrained model
2025-08-19 19:05:45,553:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:05:45,553:INFO:Starting cross validation
2025-08-19 19:05:45,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:45,809:INFO:Calculating mean and std
2025-08-19 19:05:45,809:INFO:Creating metrics dataframe
2025-08-19 19:05:45,810:INFO:Uploading results into container
2025-08-19 19:05:45,811:INFO:Uploading model into container now
2025-08-19 19:05:45,811:INFO:_master_model_container: 13
2025-08-19 19:05:45,811:INFO:_display_container: 2
2025-08-19 19:05:45,811:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:05:45,811:INFO:create_model() successfully completed......................................
2025-08-19 19:05:45,904:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:45,904:INFO:Creating metrics dataframe
2025-08-19 19:05:45,906:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 19:05:45,906:INFO:Total runtime is 0.08982001543045043 minutes
2025-08-19 19:05:45,906:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:45,906:INFO:Initializing create_model()
2025-08-19 19:05:45,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:45,906:INFO:Checking exceptions
2025-08-19 19:05:45,906:INFO:Importing libraries
2025-08-19 19:05:45,906:INFO:Copying training dataset
2025-08-19 19:05:45,908:INFO:Defining folds
2025-08-19 19:05:45,908:INFO:Declaring metric variables
2025-08-19 19:05:45,908:INFO:Importing untrained model
2025-08-19 19:05:45,909:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:05:45,909:INFO:Starting cross validation
2025-08-19 19:05:45,909:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:49,160:INFO:Calculating mean and std
2025-08-19 19:05:49,161:INFO:Creating metrics dataframe
2025-08-19 19:05:49,162:INFO:Uploading results into container
2025-08-19 19:05:49,162:INFO:Uploading model into container now
2025-08-19 19:05:49,162:INFO:_master_model_container: 14
2025-08-19 19:05:49,163:INFO:_display_container: 2
2025-08-19 19:05:49,163:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:05:49,163:INFO:create_model() successfully completed......................................
2025-08-19 19:05:49,247:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:49,247:INFO:Creating metrics dataframe
2025-08-19 19:05:49,248:INFO:Initializing CatBoost Classifier
2025-08-19 19:05:49,248:INFO:Total runtime is 0.14553215106328327 minutes
2025-08-19 19:05:49,248:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:49,249:INFO:Initializing create_model()
2025-08-19 19:05:49,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:49,249:INFO:Checking exceptions
2025-08-19 19:05:49,249:INFO:Importing libraries
2025-08-19 19:05:49,249:INFO:Copying training dataset
2025-08-19 19:05:49,250:INFO:Defining folds
2025-08-19 19:05:49,250:INFO:Declaring metric variables
2025-08-19 19:05:49,250:INFO:Importing untrained model
2025-08-19 19:05:49,251:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:05:49,251:INFO:Starting cross validation
2025-08-19 19:05:49,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:59,088:INFO:Calculating mean and std
2025-08-19 19:05:59,089:INFO:Creating metrics dataframe
2025-08-19 19:05:59,093:INFO:Uploading results into container
2025-08-19 19:05:59,093:INFO:Uploading model into container now
2025-08-19 19:05:59,094:INFO:_master_model_container: 15
2025-08-19 19:05:59,094:INFO:_display_container: 2
2025-08-19 19:05:59,094:INFO:<catboost.core.CatBoostClassifier object at 0x3075b2e00>
2025-08-19 19:05:59,094:INFO:create_model() successfully completed......................................
2025-08-19 19:05:59,297:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:59,297:INFO:Creating metrics dataframe
2025-08-19 19:05:59,299:INFO:Initializing Dummy Classifier
2025-08-19 19:05:59,299:INFO:Total runtime is 0.31303783257802326 minutes
2025-08-19 19:05:59,299:INFO:SubProcess create_model() called ==================================
2025-08-19 19:05:59,299:INFO:Initializing create_model()
2025-08-19 19:05:59,299:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x119f12c80>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:59,299:INFO:Checking exceptions
2025-08-19 19:05:59,299:INFO:Importing libraries
2025-08-19 19:05:59,299:INFO:Copying training dataset
2025-08-19 19:05:59,301:INFO:Defining folds
2025-08-19 19:05:59,301:INFO:Declaring metric variables
2025-08-19 19:05:59,301:INFO:Importing untrained model
2025-08-19 19:05:59,301:INFO:Dummy Classifier Imported successfully
2025-08-19 19:05:59,301:INFO:Starting cross validation
2025-08-19 19:05:59,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:05:59,374:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,404:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,404:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,419:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,459:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,460:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,468:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,469:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,491:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,506:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:05:59,513:INFO:Calculating mean and std
2025-08-19 19:05:59,514:INFO:Creating metrics dataframe
2025-08-19 19:05:59,515:INFO:Uploading results into container
2025-08-19 19:05:59,515:INFO:Uploading model into container now
2025-08-19 19:05:59,515:INFO:_master_model_container: 16
2025-08-19 19:05:59,515:INFO:_display_container: 2
2025-08-19 19:05:59,515:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:05:59,515:INFO:create_model() successfully completed......................................
2025-08-19 19:05:59,599:INFO:SubProcess create_model() end ==================================
2025-08-19 19:05:59,599:INFO:Creating metrics dataframe
2025-08-19 19:05:59,601:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 19:05:59,602:INFO:Initializing create_model()
2025-08-19 19:05:59,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:05:59,602:INFO:Checking exceptions
2025-08-19 19:05:59,603:INFO:Importing libraries
2025-08-19 19:05:59,603:INFO:Copying training dataset
2025-08-19 19:05:59,605:INFO:Defining folds
2025-08-19 19:05:59,605:INFO:Declaring metric variables
2025-08-19 19:05:59,605:INFO:Importing untrained model
2025-08-19 19:05:59,605:INFO:Declaring custom model
2025-08-19 19:05:59,606:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:05:59,607:INFO:Cross validation set to False
2025-08-19 19:05:59,607:INFO:Fitting Model
2025-08-19 19:05:59,641:INFO:[LightGBM] [Info] Number of positive: 468, number of negative: 300
2025-08-19 19:05:59,642:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000359 seconds.
2025-08-19 19:05:59,642:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:05:59,642:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 19:05:59,642:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 19:05:59,642:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.609375 -> initscore=0.444686
2025-08-19 19:05:59,642:INFO:[LightGBM] [Info] Start training from score 0.444686
2025-08-19 19:05:59,644:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,702:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:05:59,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:00,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:00,102:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:06:00,102:INFO:create_model() successfully completed......................................
2025-08-19 19:06:00,192:INFO:_master_model_container: 16
2025-08-19 19:06:00,192:INFO:_display_container: 2
2025-08-19 19:06:00,192:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:06:00,192:INFO:compare_models() successfully completed......................................
2025-08-19 19:06:00,193:INFO:Initializing create_model()
2025-08-19 19:06:00,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:00,193:INFO:Checking exceptions
2025-08-19 19:06:00,194:INFO:Importing libraries
2025-08-19 19:06:00,195:INFO:Copying training dataset
2025-08-19 19:06:00,197:INFO:Defining folds
2025-08-19 19:06:00,197:INFO:Declaring metric variables
2025-08-19 19:06:00,197:INFO:Importing untrained model
2025-08-19 19:06:00,197:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:06:00,197:INFO:Starting cross validation
2025-08-19 19:06:00,198:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:04,997:INFO:Calculating mean and std
2025-08-19 19:06:05,000:INFO:Creating metrics dataframe
2025-08-19 19:06:05,005:INFO:Finalizing model
2025-08-19 19:06:05,106:INFO:[LightGBM] [Info] Number of positive: 468, number of negative: 300
2025-08-19 19:06:05,109:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.002657 seconds.
2025-08-19 19:06:05,109:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:06:05,109:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 19:06:05,110:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 19:06:05,111:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.609375 -> initscore=0.444686
2025-08-19 19:06:05,111:INFO:[LightGBM] [Info] Start training from score 0.444686
2025-08-19 19:06:05,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,545:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:05,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:06,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:06,202:INFO:Uploading results into container
2025-08-19 19:06:06,202:INFO:Uploading model into container now
2025-08-19 19:06:06,203:INFO:_master_model_container: 17
2025-08-19 19:06:06,203:INFO:_display_container: 3
2025-08-19 19:06:06,203:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:06:06,204:INFO:create_model() successfully completed......................................
2025-08-19 19:06:07,629:INFO:Initializing finalize_model()
2025-08-19 19:06:07,630:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:07,630:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:06:07,633:INFO:Initializing create_model()
2025-08-19 19:06:07,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:07,633:INFO:Checking exceptions
2025-08-19 19:06:07,639:INFO:Importing libraries
2025-08-19 19:06:07,639:INFO:Copying training dataset
2025-08-19 19:06:07,640:INFO:Defining folds
2025-08-19 19:06:07,640:INFO:Declaring metric variables
2025-08-19 19:06:07,641:INFO:Importing untrained model
2025-08-19 19:06:07,641:INFO:Declaring custom model
2025-08-19 19:06:07,642:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:06:07,643:INFO:Cross validation set to False
2025-08-19 19:06:07,643:INFO:Fitting Model
2025-08-19 19:06:07,686:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 19:06:07,687:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000496 seconds.
2025-08-19 19:06:07,687:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:06:07,687:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 19:06:07,687:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 19:06:07,688:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 19:06:07,688:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 19:06:07,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:07,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:06:08,357:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:06:08,358:INFO:create_model() successfully completed......................................
2025-08-19 19:06:08,559:INFO:_master_model_container: 17
2025-08-19 19:06:08,559:INFO:_display_container: 3
2025-08-19 19:06:08,579:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:06:08,579:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:08,675:INFO:Initializing predict_model()
2025-08-19 19:06:08,675:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:08,675:INFO:Checking exceptions
2025-08-19 19:06:08,675:INFO:Preloading libraries
2025-08-19 19:06:08,675:INFO:Set up data.
2025-08-19 19:06:08,679:INFO:Set up index.
2025-08-19 19:06:08,794:INFO:Initializing create_model()
2025-08-19 19:06:08,794:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:08,794:INFO:Checking exceptions
2025-08-19 19:06:08,795:INFO:Importing libraries
2025-08-19 19:06:08,795:INFO:Copying training dataset
2025-08-19 19:06:08,798:INFO:Defining folds
2025-08-19 19:06:08,798:INFO:Declaring metric variables
2025-08-19 19:06:08,798:INFO:Importing untrained model
2025-08-19 19:06:08,798:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:06:08,798:INFO:Starting cross validation
2025-08-19 19:06:08,799:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:21,857:INFO:Calculating mean and std
2025-08-19 19:06:21,858:INFO:Creating metrics dataframe
2025-08-19 19:06:21,863:INFO:Finalizing model
2025-08-19 19:06:24,518:INFO:Uploading results into container
2025-08-19 19:06:24,518:INFO:Uploading model into container now
2025-08-19 19:06:24,519:INFO:_master_model_container: 18
2025-08-19 19:06:24,519:INFO:_display_container: 5
2025-08-19 19:06:24,519:INFO:<catboost.core.CatBoostClassifier object at 0x320d83e20>
2025-08-19 19:06:24,519:INFO:create_model() successfully completed......................................
2025-08-19 19:06:24,645:INFO:Initializing finalize_model()
2025-08-19 19:06:24,645:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=<catboost.core.CatBoostClassifier object at 0x320d83e20>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:24,645:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x320d83e20>
2025-08-19 19:06:24,647:INFO:Initializing create_model()
2025-08-19 19:06:24,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=<catboost.core.CatBoostClassifier object at 0x320d83e20>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:24,647:INFO:Checking exceptions
2025-08-19 19:06:24,648:INFO:Importing libraries
2025-08-19 19:06:24,648:INFO:Copying training dataset
2025-08-19 19:06:24,648:INFO:Defining folds
2025-08-19 19:06:24,648:INFO:Declaring metric variables
2025-08-19 19:06:24,649:INFO:Importing untrained model
2025-08-19 19:06:24,649:INFO:Declaring custom model
2025-08-19 19:06:24,649:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:06:24,650:INFO:Cross validation set to False
2025-08-19 19:06:24,650:INFO:Fitting Model
2025-08-19 19:06:26,556:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x320664fd0>)],
         verbose=False)
2025-08-19 19:06:26,557:INFO:create_model() successfully completed......................................
2025-08-19 19:06:26,649:INFO:_master_model_container: 18
2025-08-19 19:06:26,649:INFO:_display_container: 5
2025-08-19 19:06:26,654:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x320664fd0>)],
         verbose=False)
2025-08-19 19:06:26,654:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:26,744:INFO:Initializing predict_model()
2025-08-19 19:06:26,744:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x320664fd0>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:26,744:INFO:Checking exceptions
2025-08-19 19:06:26,744:INFO:Preloading libraries
2025-08-19 19:06:26,744:INFO:Set up data.
2025-08-19 19:06:26,750:INFO:Set up index.
2025-08-19 19:06:26,857:INFO:Initializing create_model()
2025-08-19 19:06:26,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:26,857:INFO:Checking exceptions
2025-08-19 19:06:26,858:INFO:Importing libraries
2025-08-19 19:06:26,858:INFO:Copying training dataset
2025-08-19 19:06:26,860:INFO:Defining folds
2025-08-19 19:06:26,860:INFO:Declaring metric variables
2025-08-19 19:06:26,860:INFO:Importing untrained model
2025-08-19 19:06:26,860:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:06:26,860:INFO:Starting cross validation
2025-08-19 19:06:26,861:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:28,438:INFO:Calculating mean and std
2025-08-19 19:06:28,438:INFO:Creating metrics dataframe
2025-08-19 19:06:28,440:INFO:Finalizing model
2025-08-19 19:06:29,056:INFO:Uploading results into container
2025-08-19 19:06:29,056:INFO:Uploading model into container now
2025-08-19 19:06:29,057:INFO:_master_model_container: 19
2025-08-19 19:06:29,057:INFO:_display_container: 7
2025-08-19 19:06:29,057:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:06:29,057:INFO:create_model() successfully completed......................................
2025-08-19 19:06:29,168:INFO:Initializing finalize_model()
2025-08-19 19:06:29,168:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:29,168:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:06:29,169:INFO:Initializing create_model()
2025-08-19 19:06:29,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:29,170:INFO:Checking exceptions
2025-08-19 19:06:29,171:INFO:Importing libraries
2025-08-19 19:06:29,171:INFO:Copying training dataset
2025-08-19 19:06:29,171:INFO:Defining folds
2025-08-19 19:06:29,171:INFO:Declaring metric variables
2025-08-19 19:06:29,171:INFO:Importing untrained model
2025-08-19 19:06:29,171:INFO:Declaring custom model
2025-08-19 19:06:29,172:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:06:29,172:INFO:Cross validation set to False
2025-08-19 19:06:29,172:INFO:Fitting Model
2025-08-19 19:06:29,943:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:06:29,943:INFO:create_model() successfully completed......................................
2025-08-19 19:06:30,035:INFO:_master_model_container: 19
2025-08-19 19:06:30,035:INFO:_display_container: 7
2025-08-19 19:06:30,041:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:06:30,041:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:30,138:INFO:Initializing predict_model()
2025-08-19 19:06:30,138:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:30,138:INFO:Checking exceptions
2025-08-19 19:06:30,138:INFO:Preloading libraries
2025-08-19 19:06:30,139:INFO:Set up data.
2025-08-19 19:06:30,143:INFO:Set up index.
2025-08-19 19:06:30,249:INFO:Initializing create_model()
2025-08-19 19:06:30,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:30,249:INFO:Checking exceptions
2025-08-19 19:06:30,250:INFO:Importing libraries
2025-08-19 19:06:30,250:INFO:Copying training dataset
2025-08-19 19:06:30,252:INFO:Defining folds
2025-08-19 19:06:30,252:INFO:Declaring metric variables
2025-08-19 19:06:30,252:INFO:Importing untrained model
2025-08-19 19:06:30,252:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:06:30,252:INFO:Starting cross validation
2025-08-19 19:06:30,253:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:30,900:INFO:Calculating mean and std
2025-08-19 19:06:30,901:INFO:Creating metrics dataframe
2025-08-19 19:06:30,903:INFO:Finalizing model
2025-08-19 19:06:31,029:INFO:Uploading results into container
2025-08-19 19:06:31,029:INFO:Uploading model into container now
2025-08-19 19:06:31,030:INFO:_master_model_container: 20
2025-08-19 19:06:31,030:INFO:_display_container: 9
2025-08-19 19:06:31,030:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:06:31,030:INFO:create_model() successfully completed......................................
2025-08-19 19:06:31,118:INFO:Initializing finalize_model()
2025-08-19 19:06:31,118:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:31,118:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:06:31,120:INFO:Initializing create_model()
2025-08-19 19:06:31,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:31,120:INFO:Checking exceptions
2025-08-19 19:06:31,121:INFO:Importing libraries
2025-08-19 19:06:31,121:INFO:Copying training dataset
2025-08-19 19:06:31,122:INFO:Defining folds
2025-08-19 19:06:31,122:INFO:Declaring metric variables
2025-08-19 19:06:31,122:INFO:Importing untrained model
2025-08-19 19:06:31,122:INFO:Declaring custom model
2025-08-19 19:06:31,122:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:06:31,123:INFO:Cross validation set to False
2025-08-19 19:06:31,123:INFO:Fitting Model
2025-08-19 19:06:31,250:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:06:31,252:INFO:create_model() successfully completed......................................
2025-08-19 19:06:31,366:INFO:_master_model_container: 20
2025-08-19 19:06:31,366:INFO:_display_container: 9
2025-08-19 19:06:31,372:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:06:31,372:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:31,460:INFO:Initializing predict_model()
2025-08-19 19:06:31,460:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:31,460:INFO:Checking exceptions
2025-08-19 19:06:31,460:INFO:Preloading libraries
2025-08-19 19:06:31,460:INFO:Set up data.
2025-08-19 19:06:31,465:INFO:Set up index.
2025-08-19 19:06:31,596:INFO:Initializing create_model()
2025-08-19 19:06:31,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:31,596:INFO:Checking exceptions
2025-08-19 19:06:31,598:INFO:Importing libraries
2025-08-19 19:06:31,598:INFO:Copying training dataset
2025-08-19 19:06:31,600:INFO:Defining folds
2025-08-19 19:06:31,600:INFO:Declaring metric variables
2025-08-19 19:06:31,600:INFO:Importing untrained model
2025-08-19 19:06:31,600:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:06:31,601:INFO:Starting cross validation
2025-08-19 19:06:31,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:31,841:INFO:Calculating mean and std
2025-08-19 19:06:31,841:INFO:Creating metrics dataframe
2025-08-19 19:06:31,842:INFO:Finalizing model
2025-08-19 19:06:32,034:INFO:Uploading results into container
2025-08-19 19:06:32,034:INFO:Uploading model into container now
2025-08-19 19:06:32,034:INFO:_master_model_container: 21
2025-08-19 19:06:32,034:INFO:_display_container: 11
2025-08-19 19:06:32,035:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:06:32,035:INFO:create_model() successfully completed......................................
2025-08-19 19:06:32,136:INFO:Initializing finalize_model()
2025-08-19 19:06:32,136:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:32,136:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:06:32,138:INFO:Initializing create_model()
2025-08-19 19:06:32,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:32,138:INFO:Checking exceptions
2025-08-19 19:06:32,140:INFO:Importing libraries
2025-08-19 19:06:32,140:INFO:Copying training dataset
2025-08-19 19:06:32,140:INFO:Defining folds
2025-08-19 19:06:32,140:INFO:Declaring metric variables
2025-08-19 19:06:32,140:INFO:Importing untrained model
2025-08-19 19:06:32,140:INFO:Declaring custom model
2025-08-19 19:06:32,141:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:06:32,142:INFO:Cross validation set to False
2025-08-19 19:06:32,142:INFO:Fitting Model
2025-08-19 19:06:32,344:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:06:32,344:INFO:create_model() successfully completed......................................
2025-08-19 19:06:32,430:INFO:_master_model_container: 21
2025-08-19 19:06:32,430:INFO:_display_container: 11
2025-08-19 19:06:32,436:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:06:32,436:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:32,527:INFO:Initializing predict_model()
2025-08-19 19:06:32,527:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:32,527:INFO:Checking exceptions
2025-08-19 19:06:32,527:INFO:Preloading libraries
2025-08-19 19:06:32,527:INFO:Set up data.
2025-08-19 19:06:32,532:INFO:Set up index.
2025-08-19 19:06:32,639:INFO:Initializing create_model()
2025-08-19 19:06:32,639:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:32,639:INFO:Checking exceptions
2025-08-19 19:06:32,640:INFO:Importing libraries
2025-08-19 19:06:32,640:INFO:Copying training dataset
2025-08-19 19:06:32,642:INFO:Defining folds
2025-08-19 19:06:32,642:INFO:Declaring metric variables
2025-08-19 19:06:32,642:INFO:Importing untrained model
2025-08-19 19:06:32,642:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:06:32,642:INFO:Starting cross validation
2025-08-19 19:06:32,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:32,676:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,680:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,687:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,692:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,694:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,713:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,713:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,746:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,885:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:32,889:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:33,045:INFO:Calculating mean and std
2025-08-19 19:06:33,045:INFO:Creating metrics dataframe
2025-08-19 19:06:33,046:INFO:Finalizing model
2025-08-19 19:06:33,070:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:33,208:INFO:Uploading results into container
2025-08-19 19:06:33,209:INFO:Uploading model into container now
2025-08-19 19:06:33,209:INFO:_master_model_container: 22
2025-08-19 19:06:33,209:INFO:_display_container: 13
2025-08-19 19:06:33,209:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:06:33,209:INFO:create_model() successfully completed......................................
2025-08-19 19:06:33,302:INFO:Initializing finalize_model()
2025-08-19 19:06:33,302:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:33,302:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:06:33,304:INFO:Initializing create_model()
2025-08-19 19:06:33,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:33,304:INFO:Checking exceptions
2025-08-19 19:06:33,305:INFO:Importing libraries
2025-08-19 19:06:33,305:INFO:Copying training dataset
2025-08-19 19:06:33,305:INFO:Defining folds
2025-08-19 19:06:33,305:INFO:Declaring metric variables
2025-08-19 19:06:33,305:INFO:Importing untrained model
2025-08-19 19:06:33,305:INFO:Declaring custom model
2025-08-19 19:06:33,306:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:06:33,306:INFO:Cross validation set to False
2025-08-19 19:06:33,306:INFO:Fitting Model
2025-08-19 19:06:33,331:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:33,512:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:06:33,512:INFO:create_model() successfully completed......................................
2025-08-19 19:06:33,598:INFO:_master_model_container: 22
2025-08-19 19:06:33,598:INFO:_display_container: 13
2025-08-19 19:06:33,603:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:06:33,603:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:33,691:INFO:Initializing predict_model()
2025-08-19 19:06:33,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:33,691:INFO:Checking exceptions
2025-08-19 19:06:33,691:INFO:Preloading libraries
2025-08-19 19:06:33,692:INFO:Set up data.
2025-08-19 19:06:33,696:INFO:Set up index.
2025-08-19 19:06:33,809:INFO:Initializing create_model()
2025-08-19 19:06:33,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:33,809:INFO:Checking exceptions
2025-08-19 19:06:33,810:INFO:Importing libraries
2025-08-19 19:06:33,810:INFO:Copying training dataset
2025-08-19 19:06:33,811:INFO:Defining folds
2025-08-19 19:06:33,811:INFO:Declaring metric variables
2025-08-19 19:06:33,812:INFO:Importing untrained model
2025-08-19 19:06:33,812:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:06:33,812:INFO:Starting cross validation
2025-08-19 19:06:33,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:33,931:INFO:Calculating mean and std
2025-08-19 19:06:33,932:INFO:Creating metrics dataframe
2025-08-19 19:06:33,933:INFO:Finalizing model
2025-08-19 19:06:33,965:INFO:Uploading results into container
2025-08-19 19:06:33,965:INFO:Uploading model into container now
2025-08-19 19:06:33,965:INFO:_master_model_container: 23
2025-08-19 19:06:33,965:INFO:_display_container: 15
2025-08-19 19:06:33,966:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:06:33,966:INFO:create_model() successfully completed......................................
2025-08-19 19:06:34,050:INFO:Initializing finalize_model()
2025-08-19 19:06:34,051:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:34,051:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:06:34,052:INFO:Initializing create_model()
2025-08-19 19:06:34,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:34,052:INFO:Checking exceptions
2025-08-19 19:06:34,053:INFO:Importing libraries
2025-08-19 19:06:34,053:INFO:Copying training dataset
2025-08-19 19:06:34,053:INFO:Defining folds
2025-08-19 19:06:34,053:INFO:Declaring metric variables
2025-08-19 19:06:34,053:INFO:Importing untrained model
2025-08-19 19:06:34,053:INFO:Declaring custom model
2025-08-19 19:06:34,054:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:06:34,054:INFO:Cross validation set to False
2025-08-19 19:06:34,054:INFO:Fitting Model
2025-08-19 19:06:34,096:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:06:34,096:INFO:create_model() successfully completed......................................
2025-08-19 19:06:34,179:INFO:_master_model_container: 23
2025-08-19 19:06:34,179:INFO:_display_container: 15
2025-08-19 19:06:34,185:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:06:34,185:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:34,273:INFO:Initializing predict_model()
2025-08-19 19:06:34,273:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:34,273:INFO:Checking exceptions
2025-08-19 19:06:34,273:INFO:Preloading libraries
2025-08-19 19:06:34,273:INFO:Set up data.
2025-08-19 19:06:34,277:INFO:Set up index.
2025-08-19 19:06:34,382:INFO:Initializing create_model()
2025-08-19 19:06:34,382:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:34,382:INFO:Checking exceptions
2025-08-19 19:06:34,383:INFO:Importing libraries
2025-08-19 19:06:34,383:INFO:Copying training dataset
2025-08-19 19:06:34,385:INFO:Defining folds
2025-08-19 19:06:34,385:INFO:Declaring metric variables
2025-08-19 19:06:34,385:INFO:Importing untrained model
2025-08-19 19:06:34,385:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:06:34,385:INFO:Starting cross validation
2025-08-19 19:06:34,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:34,807:INFO:Calculating mean and std
2025-08-19 19:06:34,808:INFO:Creating metrics dataframe
2025-08-19 19:06:34,809:INFO:Finalizing model
2025-08-19 19:06:34,910:INFO:Uploading results into container
2025-08-19 19:06:34,910:INFO:Uploading model into container now
2025-08-19 19:06:34,910:INFO:_master_model_container: 24
2025-08-19 19:06:34,910:INFO:_display_container: 17
2025-08-19 19:06:34,911:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:06:34,911:INFO:create_model() successfully completed......................................
2025-08-19 19:06:34,996:INFO:Initializing finalize_model()
2025-08-19 19:06:34,996:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:34,996:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:06:34,998:INFO:Initializing create_model()
2025-08-19 19:06:34,998:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:34,998:INFO:Checking exceptions
2025-08-19 19:06:34,999:INFO:Importing libraries
2025-08-19 19:06:34,999:INFO:Copying training dataset
2025-08-19 19:06:34,999:INFO:Defining folds
2025-08-19 19:06:34,999:INFO:Declaring metric variables
2025-08-19 19:06:34,999:INFO:Importing untrained model
2025-08-19 19:06:34,999:INFO:Declaring custom model
2025-08-19 19:06:34,999:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:06:35,000:INFO:Cross validation set to False
2025-08-19 19:06:35,000:INFO:Fitting Model
2025-08-19 19:06:35,111:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:06:35,111:INFO:create_model() successfully completed......................................
2025-08-19 19:06:35,196:INFO:_master_model_container: 24
2025-08-19 19:06:35,196:INFO:_display_container: 17
2025-08-19 19:06:35,201:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:06:35,201:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:35,290:INFO:Initializing predict_model()
2025-08-19 19:06:35,290:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:35,290:INFO:Checking exceptions
2025-08-19 19:06:35,290:INFO:Preloading libraries
2025-08-19 19:06:35,290:INFO:Set up data.
2025-08-19 19:06:35,294:INFO:Set up index.
2025-08-19 19:06:35,424:INFO:Initializing create_model()
2025-08-19 19:06:35,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:35,424:INFO:Checking exceptions
2025-08-19 19:06:35,425:INFO:Importing libraries
2025-08-19 19:06:35,425:INFO:Copying training dataset
2025-08-19 19:06:35,427:INFO:Defining folds
2025-08-19 19:06:35,427:INFO:Declaring metric variables
2025-08-19 19:06:35,427:INFO:Importing untrained model
2025-08-19 19:06:35,427:INFO:Dummy Classifier Imported successfully
2025-08-19 19:06:35,427:INFO:Starting cross validation
2025-08-19 19:06:35,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:35,473:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,482:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,486:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,493:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,501:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,504:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,507:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,509:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,518:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,530:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,544:INFO:Calculating mean and std
2025-08-19 19:06:35,544:INFO:Creating metrics dataframe
2025-08-19 19:06:35,545:INFO:Finalizing model
2025-08-19 19:06:35,571:INFO:Uploading results into container
2025-08-19 19:06:35,571:INFO:Uploading model into container now
2025-08-19 19:06:35,571:INFO:_master_model_container: 25
2025-08-19 19:06:35,571:INFO:_display_container: 19
2025-08-19 19:06:35,572:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:06:35,572:INFO:create_model() successfully completed......................................
2025-08-19 19:06:35,654:INFO:Initializing finalize_model()
2025-08-19 19:06:35,654:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:35,654:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:06:35,656:INFO:Initializing create_model()
2025-08-19 19:06:35,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:35,656:INFO:Checking exceptions
2025-08-19 19:06:35,657:INFO:Importing libraries
2025-08-19 19:06:35,657:INFO:Copying training dataset
2025-08-19 19:06:35,657:INFO:Defining folds
2025-08-19 19:06:35,657:INFO:Declaring metric variables
2025-08-19 19:06:35,657:INFO:Importing untrained model
2025-08-19 19:06:35,657:INFO:Declaring custom model
2025-08-19 19:06:35,657:INFO:Dummy Classifier Imported successfully
2025-08-19 19:06:35,658:INFO:Cross validation set to False
2025-08-19 19:06:35,658:INFO:Fitting Model
2025-08-19 19:06:35,685:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:06:35,685:INFO:create_model() successfully completed......................................
2025-08-19 19:06:35,769:INFO:_master_model_container: 25
2025-08-19 19:06:35,769:INFO:_display_container: 19
2025-08-19 19:06:35,773:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:06:35,773:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:35,865:INFO:Initializing predict_model()
2025-08-19 19:06:35,865:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:35,865:INFO:Checking exceptions
2025-08-19 19:06:35,865:INFO:Preloading libraries
2025-08-19 19:06:35,866:INFO:Set up data.
2025-08-19 19:06:35,870:INFO:Set up index.
2025-08-19 19:06:35,888:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:35,988:INFO:Initializing create_model()
2025-08-19 19:06:35,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:35,988:INFO:Checking exceptions
2025-08-19 19:06:35,989:INFO:Importing libraries
2025-08-19 19:06:35,989:INFO:Copying training dataset
2025-08-19 19:06:35,991:INFO:Defining folds
2025-08-19 19:06:35,991:INFO:Declaring metric variables
2025-08-19 19:06:35,991:INFO:Importing untrained model
2025-08-19 19:06:35,991:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:06:35,991:INFO:Starting cross validation
2025-08-19 19:06:35,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:36,143:INFO:Calculating mean and std
2025-08-19 19:06:36,144:INFO:Creating metrics dataframe
2025-08-19 19:06:36,145:INFO:Finalizing model
2025-08-19 19:06:36,170:INFO:Uploading results into container
2025-08-19 19:06:36,170:INFO:Uploading model into container now
2025-08-19 19:06:36,170:INFO:_master_model_container: 26
2025-08-19 19:06:36,170:INFO:_display_container: 21
2025-08-19 19:06:36,171:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:06:36,171:INFO:create_model() successfully completed......................................
2025-08-19 19:06:36,283:INFO:Initializing finalize_model()
2025-08-19 19:06:36,284:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:36,284:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:06:36,285:INFO:Initializing create_model()
2025-08-19 19:06:36,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:36,285:INFO:Checking exceptions
2025-08-19 19:06:36,286:INFO:Importing libraries
2025-08-19 19:06:36,286:INFO:Copying training dataset
2025-08-19 19:06:36,286:INFO:Defining folds
2025-08-19 19:06:36,286:INFO:Declaring metric variables
2025-08-19 19:06:36,286:INFO:Importing untrained model
2025-08-19 19:06:36,286:INFO:Declaring custom model
2025-08-19 19:06:36,287:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:06:36,287:INFO:Cross validation set to False
2025-08-19 19:06:36,287:INFO:Fitting Model
2025-08-19 19:06:36,316:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:06:36,316:INFO:create_model() successfully completed......................................
2025-08-19 19:06:36,402:INFO:_master_model_container: 26
2025-08-19 19:06:36,402:INFO:_display_container: 21
2025-08-19 19:06:36,407:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:06:36,407:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:36,496:INFO:Initializing predict_model()
2025-08-19 19:06:36,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:36,496:INFO:Checking exceptions
2025-08-19 19:06:36,496:INFO:Preloading libraries
2025-08-19 19:06:36,496:INFO:Set up data.
2025-08-19 19:06:36,501:INFO:Set up index.
2025-08-19 19:06:36,605:INFO:Initializing create_model()
2025-08-19 19:06:36,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:36,606:INFO:Checking exceptions
2025-08-19 19:06:36,606:INFO:Importing libraries
2025-08-19 19:06:36,607:INFO:Copying training dataset
2025-08-19 19:06:36,608:INFO:Defining folds
2025-08-19 19:06:36,608:INFO:Declaring metric variables
2025-08-19 19:06:36,608:INFO:Importing untrained model
2025-08-19 19:06:36,608:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:06:36,609:INFO:Starting cross validation
2025-08-19 19:06:36,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:36,642:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,643:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,646:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,648:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,654:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,671:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,672:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,675:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,701:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,704:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,731:INFO:Calculating mean and std
2025-08-19 19:06:36,731:INFO:Creating metrics dataframe
2025-08-19 19:06:36,732:INFO:Finalizing model
2025-08-19 19:06:36,758:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,760:INFO:Uploading results into container
2025-08-19 19:06:36,761:INFO:Uploading model into container now
2025-08-19 19:06:36,762:INFO:_master_model_container: 27
2025-08-19 19:06:36,762:INFO:_display_container: 23
2025-08-19 19:06:36,763:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:06:36,763:INFO:create_model() successfully completed......................................
2025-08-19 19:06:36,862:INFO:Initializing finalize_model()
2025-08-19 19:06:36,862:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:36,862:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:06:36,864:INFO:Initializing create_model()
2025-08-19 19:06:36,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:36,864:INFO:Checking exceptions
2025-08-19 19:06:36,865:INFO:Importing libraries
2025-08-19 19:06:36,865:INFO:Copying training dataset
2025-08-19 19:06:36,865:INFO:Defining folds
2025-08-19 19:06:36,865:INFO:Declaring metric variables
2025-08-19 19:06:36,865:INFO:Importing untrained model
2025-08-19 19:06:36,865:INFO:Declaring custom model
2025-08-19 19:06:36,865:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:06:36,866:INFO:Cross validation set to False
2025-08-19 19:06:36,866:INFO:Fitting Model
2025-08-19 19:06:36,903:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:36,917:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:06:36,917:INFO:create_model() successfully completed......................................
2025-08-19 19:06:37,020:INFO:_master_model_container: 27
2025-08-19 19:06:37,020:INFO:_display_container: 23
2025-08-19 19:06:37,026:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:06:37,026:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:37,134:INFO:Initializing predict_model()
2025-08-19 19:06:37,134:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:37,134:INFO:Checking exceptions
2025-08-19 19:06:37,134:INFO:Preloading libraries
2025-08-19 19:06:37,134:INFO:Set up data.
2025-08-19 19:06:37,138:INFO:Set up index.
2025-08-19 19:06:37,275:INFO:Initializing create_model()
2025-08-19 19:06:37,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:37,275:INFO:Checking exceptions
2025-08-19 19:06:37,276:INFO:Importing libraries
2025-08-19 19:06:37,276:INFO:Copying training dataset
2025-08-19 19:06:37,278:INFO:Defining folds
2025-08-19 19:06:37,278:INFO:Declaring metric variables
2025-08-19 19:06:37,278:INFO:Importing untrained model
2025-08-19 19:06:37,278:INFO:Logistic Regression Imported successfully
2025-08-19 19:06:37,278:INFO:Starting cross validation
2025-08-19 19:06:37,279:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:37,444:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:37,458:INFO:Calculating mean and std
2025-08-19 19:06:37,458:INFO:Creating metrics dataframe
2025-08-19 19:06:37,459:INFO:Finalizing model
2025-08-19 19:06:37,492:INFO:Uploading results into container
2025-08-19 19:06:37,493:INFO:Uploading model into container now
2025-08-19 19:06:37,494:INFO:_master_model_container: 28
2025-08-19 19:06:37,494:INFO:_display_container: 25
2025-08-19 19:06:37,494:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:06:37,494:INFO:create_model() successfully completed......................................
2025-08-19 19:06:37,605:INFO:Initializing finalize_model()
2025-08-19 19:06:37,605:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:37,605:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:06:37,606:INFO:Initializing create_model()
2025-08-19 19:06:37,606:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:37,606:INFO:Checking exceptions
2025-08-19 19:06:37,607:INFO:Importing libraries
2025-08-19 19:06:37,607:INFO:Copying training dataset
2025-08-19 19:06:37,607:INFO:Defining folds
2025-08-19 19:06:37,607:INFO:Declaring metric variables
2025-08-19 19:06:37,608:INFO:Importing untrained model
2025-08-19 19:06:37,608:INFO:Declaring custom model
2025-08-19 19:06:37,608:INFO:Logistic Regression Imported successfully
2025-08-19 19:06:37,609:INFO:Cross validation set to False
2025-08-19 19:06:37,609:INFO:Fitting Model
2025-08-19 19:06:37,659:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:06:37,659:INFO:create_model() successfully completed......................................
2025-08-19 19:06:37,762:INFO:_master_model_container: 28
2025-08-19 19:06:37,762:INFO:_display_container: 25
2025-08-19 19:06:37,767:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:06:37,767:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:37,897:INFO:Initializing predict_model()
2025-08-19 19:06:37,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:37,897:INFO:Checking exceptions
2025-08-19 19:06:37,898:INFO:Preloading libraries
2025-08-19 19:06:37,898:INFO:Set up data.
2025-08-19 19:06:37,902:INFO:Set up index.
2025-08-19 19:06:37,926:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:38,014:INFO:Initializing create_model()
2025-08-19 19:06:38,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:38,015:INFO:Checking exceptions
2025-08-19 19:06:38,015:INFO:Importing libraries
2025-08-19 19:06:38,015:INFO:Copying training dataset
2025-08-19 19:06:38,017:INFO:Defining folds
2025-08-19 19:06:38,017:INFO:Declaring metric variables
2025-08-19 19:06:38,017:INFO:Importing untrained model
2025-08-19 19:06:38,018:INFO:Ridge Classifier Imported successfully
2025-08-19 19:06:38,018:INFO:Starting cross validation
2025-08-19 19:06:38,018:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:38,128:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:38,135:INFO:Calculating mean and std
2025-08-19 19:06:38,136:INFO:Creating metrics dataframe
2025-08-19 19:06:38,137:INFO:Finalizing model
2025-08-19 19:06:38,163:INFO:Uploading results into container
2025-08-19 19:06:38,164:INFO:Uploading model into container now
2025-08-19 19:06:38,164:INFO:_master_model_container: 29
2025-08-19 19:06:38,165:INFO:_display_container: 27
2025-08-19 19:06:38,165:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:06:38,165:INFO:create_model() successfully completed......................................
2025-08-19 19:06:38,265:INFO:Initializing finalize_model()
2025-08-19 19:06:38,266:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:38,266:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:06:38,267:INFO:Initializing create_model()
2025-08-19 19:06:38,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:38,267:INFO:Checking exceptions
2025-08-19 19:06:38,268:INFO:Importing libraries
2025-08-19 19:06:38,268:INFO:Copying training dataset
2025-08-19 19:06:38,268:INFO:Defining folds
2025-08-19 19:06:38,268:INFO:Declaring metric variables
2025-08-19 19:06:38,268:INFO:Importing untrained model
2025-08-19 19:06:38,268:INFO:Declaring custom model
2025-08-19 19:06:38,269:INFO:Ridge Classifier Imported successfully
2025-08-19 19:06:38,269:INFO:Cross validation set to False
2025-08-19 19:06:38,269:INFO:Fitting Model
2025-08-19 19:06:38,315:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:06:38,315:INFO:create_model() successfully completed......................................
2025-08-19 19:06:38,409:INFO:_master_model_container: 29
2025-08-19 19:06:38,409:INFO:_display_container: 27
2025-08-19 19:06:38,414:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:06:38,414:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:38,537:INFO:Initializing predict_model()
2025-08-19 19:06:38,537:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:38,537:INFO:Checking exceptions
2025-08-19 19:06:38,537:INFO:Preloading libraries
2025-08-19 19:06:38,537:INFO:Set up data.
2025-08-19 19:06:38,542:INFO:Set up index.
2025-08-19 19:06:38,573:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:38,666:INFO:Initializing create_model()
2025-08-19 19:06:38,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:38,667:INFO:Checking exceptions
2025-08-19 19:06:38,667:INFO:Importing libraries
2025-08-19 19:06:38,667:INFO:Copying training dataset
2025-08-19 19:06:38,669:INFO:Defining folds
2025-08-19 19:06:38,669:INFO:Declaring metric variables
2025-08-19 19:06:38,669:INFO:Importing untrained model
2025-08-19 19:06:38,669:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:06:38,670:INFO:Starting cross validation
2025-08-19 19:06:38,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:38,803:INFO:Calculating mean and std
2025-08-19 19:06:38,804:INFO:Creating metrics dataframe
2025-08-19 19:06:38,806:INFO:Finalizing model
2025-08-19 19:06:38,831:INFO:Uploading results into container
2025-08-19 19:06:38,832:INFO:Uploading model into container now
2025-08-19 19:06:38,833:INFO:_master_model_container: 30
2025-08-19 19:06:38,833:INFO:_display_container: 29
2025-08-19 19:06:38,833:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:06:38,833:INFO:create_model() successfully completed......................................
2025-08-19 19:06:38,967:INFO:Initializing finalize_model()
2025-08-19 19:06:38,967:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:38,967:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:06:38,969:INFO:Initializing create_model()
2025-08-19 19:06:38,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:38,969:INFO:Checking exceptions
2025-08-19 19:06:38,970:INFO:Importing libraries
2025-08-19 19:06:38,970:INFO:Copying training dataset
2025-08-19 19:06:38,970:INFO:Defining folds
2025-08-19 19:06:38,970:INFO:Declaring metric variables
2025-08-19 19:06:38,970:INFO:Importing untrained model
2025-08-19 19:06:38,970:INFO:Declaring custom model
2025-08-19 19:06:38,971:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:06:38,971:INFO:Cross validation set to False
2025-08-19 19:06:38,971:INFO:Fitting Model
2025-08-19 19:06:39,027:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:06:39,027:INFO:create_model() successfully completed......................................
2025-08-19 19:06:39,158:INFO:_master_model_container: 30
2025-08-19 19:06:39,158:INFO:_display_container: 29
2025-08-19 19:06:39,164:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:06:39,164:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:39,281:INFO:Initializing predict_model()
2025-08-19 19:06:39,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:39,281:INFO:Checking exceptions
2025-08-19 19:06:39,281:INFO:Preloading libraries
2025-08-19 19:06:39,282:INFO:Set up data.
2025-08-19 19:06:39,293:INFO:Set up index.
2025-08-19 19:06:39,309:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:39,398:INFO:Initializing create_model()
2025-08-19 19:06:39,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:39,398:INFO:Checking exceptions
2025-08-19 19:06:39,399:INFO:Importing libraries
2025-08-19 19:06:39,399:INFO:Copying training dataset
2025-08-19 19:06:39,401:INFO:Defining folds
2025-08-19 19:06:39,401:INFO:Declaring metric variables
2025-08-19 19:06:39,401:INFO:Importing untrained model
2025-08-19 19:06:39,401:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:06:39,401:INFO:Starting cross validation
2025-08-19 19:06:39,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:39,521:INFO:Calculating mean and std
2025-08-19 19:06:39,521:INFO:Creating metrics dataframe
2025-08-19 19:06:39,523:INFO:Finalizing model
2025-08-19 19:06:39,549:INFO:Uploading results into container
2025-08-19 19:06:39,550:INFO:Uploading model into container now
2025-08-19 19:06:39,550:INFO:_master_model_container: 31
2025-08-19 19:06:39,550:INFO:_display_container: 31
2025-08-19 19:06:39,550:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:06:39,550:INFO:create_model() successfully completed......................................
2025-08-19 19:06:39,639:INFO:Initializing finalize_model()
2025-08-19 19:06:39,639:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:39,639:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:06:39,640:INFO:Initializing create_model()
2025-08-19 19:06:39,640:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:39,641:INFO:Checking exceptions
2025-08-19 19:06:39,641:INFO:Importing libraries
2025-08-19 19:06:39,641:INFO:Copying training dataset
2025-08-19 19:06:39,641:INFO:Defining folds
2025-08-19 19:06:39,642:INFO:Declaring metric variables
2025-08-19 19:06:39,642:INFO:Importing untrained model
2025-08-19 19:06:39,642:INFO:Declaring custom model
2025-08-19 19:06:39,642:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:06:39,643:INFO:Cross validation set to False
2025-08-19 19:06:39,643:INFO:Fitting Model
2025-08-19 19:06:39,675:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:06:39,676:INFO:create_model() successfully completed......................................
2025-08-19 19:06:39,759:INFO:_master_model_container: 31
2025-08-19 19:06:39,759:INFO:_display_container: 31
2025-08-19 19:06:39,764:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:06:39,765:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:39,865:INFO:Initializing predict_model()
2025-08-19 19:06:39,865:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:39,865:INFO:Checking exceptions
2025-08-19 19:06:39,865:INFO:Preloading libraries
2025-08-19 19:06:39,865:INFO:Set up data.
2025-08-19 19:06:39,870:INFO:Set up index.
2025-08-19 19:06:39,990:INFO:Initializing create_model()
2025-08-19 19:06:39,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:39,990:INFO:Checking exceptions
2025-08-19 19:06:39,991:INFO:Importing libraries
2025-08-19 19:06:39,991:INFO:Copying training dataset
2025-08-19 19:06:39,993:INFO:Defining folds
2025-08-19 19:06:39,993:INFO:Declaring metric variables
2025-08-19 19:06:39,993:INFO:Importing untrained model
2025-08-19 19:06:39,993:INFO:Naive Bayes Imported successfully
2025-08-19 19:06:39,993:INFO:Starting cross validation
2025-08-19 19:06:39,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:40,159:INFO:Calculating mean and std
2025-08-19 19:06:40,159:INFO:Creating metrics dataframe
2025-08-19 19:06:40,160:INFO:Finalizing model
2025-08-19 19:06:40,186:INFO:Uploading results into container
2025-08-19 19:06:40,186:INFO:Uploading model into container now
2025-08-19 19:06:40,186:INFO:_master_model_container: 32
2025-08-19 19:06:40,186:INFO:_display_container: 33
2025-08-19 19:06:40,186:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:06:40,186:INFO:create_model() successfully completed......................................
2025-08-19 19:06:40,277:INFO:Initializing finalize_model()
2025-08-19 19:06:40,277:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:06:40,277:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:06:40,278:INFO:Initializing create_model()
2025-08-19 19:06:40,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:40,278:INFO:Checking exceptions
2025-08-19 19:06:40,279:INFO:Importing libraries
2025-08-19 19:06:40,279:INFO:Copying training dataset
2025-08-19 19:06:40,279:INFO:Defining folds
2025-08-19 19:06:40,279:INFO:Declaring metric variables
2025-08-19 19:06:40,279:INFO:Importing untrained model
2025-08-19 19:06:40,279:INFO:Declaring custom model
2025-08-19 19:06:40,279:INFO:Naive Bayes Imported successfully
2025-08-19 19:06:40,280:INFO:Cross validation set to False
2025-08-19 19:06:40,280:INFO:Fitting Model
2025-08-19 19:06:40,309:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:06:40,309:INFO:create_model() successfully completed......................................
2025-08-19 19:06:40,397:INFO:_master_model_container: 32
2025-08-19 19:06:40,397:INFO:_display_container: 33
2025-08-19 19:06:40,402:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:06:40,402:INFO:finalize_model() successfully completed......................................
2025-08-19 19:06:40,489:INFO:Initializing predict_model()
2025-08-19 19:06:40,489:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x31ff73ca0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x3075ddf30>)
2025-08-19 19:06:40,489:INFO:Checking exceptions
2025-08-19 19:06:40,489:INFO:Preloading libraries
2025-08-19 19:06:40,489:INFO:Set up data.
2025-08-19 19:06:40,493:INFO:Set up index.
2025-08-19 19:06:40,510:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:40,611:INFO:PyCaret ClassificationExperiment
2025-08-19 19:06:40,611:INFO:Logging name: clf-default-name
2025-08-19 19:06:40,611:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 19:06:40,611:INFO:version 3.3.2
2025-08-19 19:06:40,611:INFO:Initializing setup()
2025-08-19 19:06:40,611:INFO:self.USI: cb09
2025-08-19 19:06:40,612:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 19:06:40,612:INFO:Checking environment
2025-08-19 19:06:40,612:INFO:python_version: 3.10.18
2025-08-19 19:06:40,612:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 19:06:40,612:INFO:machine: arm64
2025-08-19 19:06:40,612:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 19:06:40,612:INFO:Memory: svmem(total=17179869184, available=3196846080, percent=81.4, used=5901156352, free=314408960, active=2810200064, inactive=2863595520, wired=3090956288)
2025-08-19 19:06:40,612:INFO:Physical Core: 8
2025-08-19 19:06:40,612:INFO:Logical Core: 8
2025-08-19 19:06:40,612:INFO:Checking libraries
2025-08-19 19:06:40,612:INFO:System:
2025-08-19 19:06:40,612:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 19:06:40,612:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 19:06:40,612:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 19:06:40,612:INFO:PyCaret required dependencies:
2025-08-19 19:06:40,612:INFO:                 pip: 25.2
2025-08-19 19:06:40,612:INFO:          setuptools: 80.9.0
2025-08-19 19:06:40,612:INFO:             pycaret: 3.3.2
2025-08-19 19:06:40,612:INFO:             IPython: 8.37.0
2025-08-19 19:06:40,612:INFO:          ipywidgets: 8.1.7
2025-08-19 19:06:40,612:INFO:                tqdm: 4.67.1
2025-08-19 19:06:40,612:INFO:               numpy: 1.25.2
2025-08-19 19:06:40,612:INFO:              pandas: 2.1.4
2025-08-19 19:06:40,612:INFO:              jinja2: 3.1.6
2025-08-19 19:06:40,612:INFO:               scipy: 1.9.3
2025-08-19 19:06:40,612:INFO:              joblib: 1.3.2
2025-08-19 19:06:40,612:INFO:             sklearn: 1.4.2
2025-08-19 19:06:40,612:INFO:                pyod: 2.0.5
2025-08-19 19:06:40,612:INFO:            imblearn: 0.12.4
2025-08-19 19:06:40,612:INFO:   category_encoders: 2.7.0
2025-08-19 19:06:40,612:INFO:            lightgbm: 4.6.0
2025-08-19 19:06:40,612:INFO:               numba: 0.61.2
2025-08-19 19:06:40,612:INFO:            requests: 2.32.4
2025-08-19 19:06:40,612:INFO:          matplotlib: 3.7.2
2025-08-19 19:06:40,612:INFO:          scikitplot: 0.3.7
2025-08-19 19:06:40,612:INFO:         yellowbrick: 1.5
2025-08-19 19:06:40,612:INFO:              plotly: 5.24.1
2025-08-19 19:06:40,612:INFO:    plotly-resampler: Not installed
2025-08-19 19:06:40,612:INFO:             kaleido: 1.0.0
2025-08-19 19:06:40,612:INFO:           schemdraw: 0.15
2025-08-19 19:06:40,612:INFO:         statsmodels: 0.14.5
2025-08-19 19:06:40,612:INFO:              sktime: 0.26.0
2025-08-19 19:06:40,612:INFO:               tbats: 1.1.3
2025-08-19 19:06:40,612:INFO:            pmdarima: 2.0.4
2025-08-19 19:06:40,613:INFO:              psutil: 7.0.0
2025-08-19 19:06:40,613:INFO:          markupsafe: 3.0.2
2025-08-19 19:06:40,613:INFO:             pickle5: Not installed
2025-08-19 19:06:40,613:INFO:         cloudpickle: 3.1.1
2025-08-19 19:06:40,613:INFO:         deprecation: 2.1.0
2025-08-19 19:06:40,613:INFO:              xxhash: 3.5.0
2025-08-19 19:06:40,613:INFO:           wurlitzer: 3.1.1
2025-08-19 19:06:40,613:INFO:PyCaret optional dependencies:
2025-08-19 19:06:40,613:INFO:                shap: 0.48.0
2025-08-19 19:06:40,613:INFO:           interpret: Not installed
2025-08-19 19:06:40,613:INFO:                umap: Not installed
2025-08-19 19:06:40,613:INFO:     ydata_profiling: Not installed
2025-08-19 19:06:40,613:INFO:  explainerdashboard: Not installed
2025-08-19 19:06:40,613:INFO:             autoviz: Not installed
2025-08-19 19:06:40,613:INFO:           fairlearn: Not installed
2025-08-19 19:06:40,613:INFO:          deepchecks: Not installed
2025-08-19 19:06:40,613:INFO:             xgboost: 3.0.4
2025-08-19 19:06:40,613:INFO:            catboost: 1.2.8
2025-08-19 19:06:40,613:INFO:              kmodes: Not installed
2025-08-19 19:06:40,613:INFO:             mlxtend: 0.23.4
2025-08-19 19:06:40,613:INFO:       statsforecast: Not installed
2025-08-19 19:06:40,613:INFO:        tune_sklearn: Not installed
2025-08-19 19:06:40,613:INFO:                 ray: Not installed
2025-08-19 19:06:40,613:INFO:            hyperopt: Not installed
2025-08-19 19:06:40,613:INFO:              optuna: 4.4.0
2025-08-19 19:06:40,613:INFO:               skopt: Not installed
2025-08-19 19:06:40,613:INFO:              mlflow: Not installed
2025-08-19 19:06:40,613:INFO:              gradio: Not installed
2025-08-19 19:06:40,613:INFO:             fastapi: Not installed
2025-08-19 19:06:40,613:INFO:             uvicorn: Not installed
2025-08-19 19:06:40,613:INFO:              m2cgen: Not installed
2025-08-19 19:06:40,613:INFO:           evidently: Not installed
2025-08-19 19:06:40,613:INFO:               fugue: Not installed
2025-08-19 19:06:40,613:INFO:           streamlit: Not installed
2025-08-19 19:06:40,613:INFO:             prophet: Not installed
2025-08-19 19:06:40,613:INFO:None
2025-08-19 19:06:40,613:INFO:Set up data.
2025-08-19 19:06:40,618:INFO:Set up folding strategy.
2025-08-19 19:06:40,618:INFO:Set up train/test split.
2025-08-19 19:06:40,618:INFO:Set up data.
2025-08-19 19:06:40,623:INFO:Set up index.
2025-08-19 19:06:40,624:INFO:Assigning column types.
2025-08-19 19:06:40,626:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 19:06:40,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:06:40,652:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:06:40,668:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:06:40,670:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:06:40,695:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:06:40,695:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:06:40,711:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:06:40,713:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:06:40,713:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 19:06:40,738:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:06:40,754:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:06:40,755:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:06:40,781:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:06:40,797:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:06:40,798:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:06:40,798:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 19:06:40,839:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:06:40,841:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:06:40,882:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:06:40,884:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:06:40,885:INFO:Preparing preprocessing pipeline...
2025-08-19 19:06:40,885:INFO:Set up label encoding.
2025-08-19 19:06:40,885:INFO:Set up simple imputation.
2025-08-19 19:06:40,886:INFO:Set up encoding of categorical features.
2025-08-19 19:06:40,937:INFO:Finished creating preprocessing pipeline.
2025-08-19 19:06:40,942:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 19:06:40,942:INFO:Creating final display dataframe.
2025-08-19 19:06:41,082:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              cb09
2025-08-19 19:06:41,123:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:06:41,125:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:06:41,167:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:06:41,169:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:06:41,170:INFO:setup() successfully completed in 0.56s...............
2025-08-19 19:06:41,174:INFO:Initializing compare_models()
2025-08-19 19:06:41,174:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 19:06:41,174:INFO:Checking exceptions
2025-08-19 19:06:41,180:INFO:Preparing display monitor
2025-08-19 19:06:41,182:INFO:Initializing Logistic Regression
2025-08-19 19:06:41,182:INFO:Total runtime is 1.5179316202799478e-06 minutes
2025-08-19 19:06:41,182:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:41,182:INFO:Initializing create_model()
2025-08-19 19:06:41,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:41,182:INFO:Checking exceptions
2025-08-19 19:06:41,182:INFO:Importing libraries
2025-08-19 19:06:41,182:INFO:Copying training dataset
2025-08-19 19:06:41,184:INFO:Defining folds
2025-08-19 19:06:41,185:INFO:Declaring metric variables
2025-08-19 19:06:41,185:INFO:Importing untrained model
2025-08-19 19:06:41,185:INFO:Logistic Regression Imported successfully
2025-08-19 19:06:41,186:INFO:Starting cross validation
2025-08-19 19:06:41,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:41,338:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:06:41,351:INFO:Calculating mean and std
2025-08-19 19:06:41,351:INFO:Creating metrics dataframe
2025-08-19 19:06:41,352:INFO:Uploading results into container
2025-08-19 19:06:41,353:INFO:Uploading model into container now
2025-08-19 19:06:41,353:INFO:_master_model_container: 1
2025-08-19 19:06:41,353:INFO:_display_container: 2
2025-08-19 19:06:41,353:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:06:41,353:INFO:create_model() successfully completed......................................
2025-08-19 19:06:41,449:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:41,449:INFO:Creating metrics dataframe
2025-08-19 19:06:41,451:INFO:Initializing K Neighbors Classifier
2025-08-19 19:06:41,451:INFO:Total runtime is 0.0044813513755798335 minutes
2025-08-19 19:06:41,451:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:41,451:INFO:Initializing create_model()
2025-08-19 19:06:41,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:41,451:INFO:Checking exceptions
2025-08-19 19:06:41,451:INFO:Importing libraries
2025-08-19 19:06:41,451:INFO:Copying training dataset
2025-08-19 19:06:41,453:INFO:Defining folds
2025-08-19 19:06:41,453:INFO:Declaring metric variables
2025-08-19 19:06:41,453:INFO:Importing untrained model
2025-08-19 19:06:41,453:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:06:41,453:INFO:Starting cross validation
2025-08-19 19:06:41,454:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:41,577:INFO:Calculating mean and std
2025-08-19 19:06:41,577:INFO:Creating metrics dataframe
2025-08-19 19:06:41,578:INFO:Uploading results into container
2025-08-19 19:06:41,578:INFO:Uploading model into container now
2025-08-19 19:06:41,579:INFO:_master_model_container: 2
2025-08-19 19:06:41,579:INFO:_display_container: 2
2025-08-19 19:06:41,579:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:06:41,579:INFO:create_model() successfully completed......................................
2025-08-19 19:06:41,663:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:41,663:INFO:Creating metrics dataframe
2025-08-19 19:06:41,665:INFO:Initializing Naive Bayes
2025-08-19 19:06:41,665:INFO:Total runtime is 0.00805131991704305 minutes
2025-08-19 19:06:41,665:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:41,665:INFO:Initializing create_model()
2025-08-19 19:06:41,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:41,665:INFO:Checking exceptions
2025-08-19 19:06:41,665:INFO:Importing libraries
2025-08-19 19:06:41,666:INFO:Copying training dataset
2025-08-19 19:06:41,667:INFO:Defining folds
2025-08-19 19:06:41,667:INFO:Declaring metric variables
2025-08-19 19:06:41,667:INFO:Importing untrained model
2025-08-19 19:06:41,667:INFO:Naive Bayes Imported successfully
2025-08-19 19:06:41,667:INFO:Starting cross validation
2025-08-19 19:06:41,668:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:41,807:INFO:Calculating mean and std
2025-08-19 19:06:41,808:INFO:Creating metrics dataframe
2025-08-19 19:06:41,809:INFO:Uploading results into container
2025-08-19 19:06:41,809:INFO:Uploading model into container now
2025-08-19 19:06:41,809:INFO:_master_model_container: 3
2025-08-19 19:06:41,809:INFO:_display_container: 2
2025-08-19 19:06:41,809:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:06:41,809:INFO:create_model() successfully completed......................................
2025-08-19 19:06:41,894:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:41,894:INFO:Creating metrics dataframe
2025-08-19 19:06:41,896:INFO:Initializing Decision Tree Classifier
2025-08-19 19:06:41,896:INFO:Total runtime is 0.011897635459899903 minutes
2025-08-19 19:06:41,896:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:41,896:INFO:Initializing create_model()
2025-08-19 19:06:41,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:41,896:INFO:Checking exceptions
2025-08-19 19:06:41,896:INFO:Importing libraries
2025-08-19 19:06:41,896:INFO:Copying training dataset
2025-08-19 19:06:41,898:INFO:Defining folds
2025-08-19 19:06:41,898:INFO:Declaring metric variables
2025-08-19 19:06:41,898:INFO:Importing untrained model
2025-08-19 19:06:41,899:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:06:41,899:INFO:Starting cross validation
2025-08-19 19:06:41,899:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:42,016:INFO:Calculating mean and std
2025-08-19 19:06:42,017:INFO:Creating metrics dataframe
2025-08-19 19:06:42,018:INFO:Uploading results into container
2025-08-19 19:06:42,018:INFO:Uploading model into container now
2025-08-19 19:06:42,018:INFO:_master_model_container: 4
2025-08-19 19:06:42,018:INFO:_display_container: 2
2025-08-19 19:06:42,018:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:06:42,018:INFO:create_model() successfully completed......................................
2025-08-19 19:06:42,102:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:42,102:INFO:Creating metrics dataframe
2025-08-19 19:06:42,103:INFO:Initializing SVM - Linear Kernel
2025-08-19 19:06:42,103:INFO:Total runtime is 0.01535343329111735 minutes
2025-08-19 19:06:42,103:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:42,103:INFO:Initializing create_model()
2025-08-19 19:06:42,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:42,104:INFO:Checking exceptions
2025-08-19 19:06:42,104:INFO:Importing libraries
2025-08-19 19:06:42,104:INFO:Copying training dataset
2025-08-19 19:06:42,105:INFO:Defining folds
2025-08-19 19:06:42,105:INFO:Declaring metric variables
2025-08-19 19:06:42,105:INFO:Importing untrained model
2025-08-19 19:06:42,105:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:06:42,106:INFO:Starting cross validation
2025-08-19 19:06:42,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:42,217:INFO:Calculating mean and std
2025-08-19 19:06:42,218:INFO:Creating metrics dataframe
2025-08-19 19:06:42,219:INFO:Uploading results into container
2025-08-19 19:06:42,219:INFO:Uploading model into container now
2025-08-19 19:06:42,219:INFO:_master_model_container: 5
2025-08-19 19:06:42,219:INFO:_display_container: 2
2025-08-19 19:06:42,220:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:06:42,220:INFO:create_model() successfully completed......................................
2025-08-19 19:06:42,302:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:42,302:INFO:Creating metrics dataframe
2025-08-19 19:06:42,304:INFO:Initializing Ridge Classifier
2025-08-19 19:06:42,304:INFO:Total runtime is 0.018697921435038248 minutes
2025-08-19 19:06:42,304:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:42,304:INFO:Initializing create_model()
2025-08-19 19:06:42,304:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:42,304:INFO:Checking exceptions
2025-08-19 19:06:42,304:INFO:Importing libraries
2025-08-19 19:06:42,304:INFO:Copying training dataset
2025-08-19 19:06:42,306:INFO:Defining folds
2025-08-19 19:06:42,306:INFO:Declaring metric variables
2025-08-19 19:06:42,306:INFO:Importing untrained model
2025-08-19 19:06:42,306:INFO:Ridge Classifier Imported successfully
2025-08-19 19:06:42,306:INFO:Starting cross validation
2025-08-19 19:06:42,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:42,420:INFO:Calculating mean and std
2025-08-19 19:06:42,421:INFO:Creating metrics dataframe
2025-08-19 19:06:42,422:INFO:Uploading results into container
2025-08-19 19:06:42,422:INFO:Uploading model into container now
2025-08-19 19:06:42,422:INFO:_master_model_container: 6
2025-08-19 19:06:42,422:INFO:_display_container: 2
2025-08-19 19:06:42,423:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:06:42,423:INFO:create_model() successfully completed......................................
2025-08-19 19:06:42,515:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:42,515:INFO:Creating metrics dataframe
2025-08-19 19:06:42,517:INFO:Initializing Random Forest Classifier
2025-08-19 19:06:42,517:INFO:Total runtime is 0.02224851846694946 minutes
2025-08-19 19:06:42,517:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:42,517:INFO:Initializing create_model()
2025-08-19 19:06:42,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:42,517:INFO:Checking exceptions
2025-08-19 19:06:42,517:INFO:Importing libraries
2025-08-19 19:06:42,517:INFO:Copying training dataset
2025-08-19 19:06:42,519:INFO:Defining folds
2025-08-19 19:06:42,519:INFO:Declaring metric variables
2025-08-19 19:06:42,519:INFO:Importing untrained model
2025-08-19 19:06:42,519:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:06:42,519:INFO:Starting cross validation
2025-08-19 19:06:42,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:43,098:INFO:Calculating mean and std
2025-08-19 19:06:43,099:INFO:Creating metrics dataframe
2025-08-19 19:06:43,100:INFO:Uploading results into container
2025-08-19 19:06:43,100:INFO:Uploading model into container now
2025-08-19 19:06:43,100:INFO:_master_model_container: 7
2025-08-19 19:06:43,100:INFO:_display_container: 2
2025-08-19 19:06:43,101:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:06:43,101:INFO:create_model() successfully completed......................................
2025-08-19 19:06:43,185:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:43,185:INFO:Creating metrics dataframe
2025-08-19 19:06:43,187:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 19:06:43,187:INFO:Total runtime is 0.03341598510742187 minutes
2025-08-19 19:06:43,187:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:43,187:INFO:Initializing create_model()
2025-08-19 19:06:43,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:43,187:INFO:Checking exceptions
2025-08-19 19:06:43,187:INFO:Importing libraries
2025-08-19 19:06:43,187:INFO:Copying training dataset
2025-08-19 19:06:43,189:INFO:Defining folds
2025-08-19 19:06:43,189:INFO:Declaring metric variables
2025-08-19 19:06:43,189:INFO:Importing untrained model
2025-08-19 19:06:43,189:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:06:43,190:INFO:Starting cross validation
2025-08-19 19:06:43,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:43,226:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,228:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,234:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,236:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,242:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,245:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,259:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,270:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,281:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,282:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:06:43,309:INFO:Calculating mean and std
2025-08-19 19:06:43,309:INFO:Creating metrics dataframe
2025-08-19 19:06:43,311:INFO:Uploading results into container
2025-08-19 19:06:43,311:INFO:Uploading model into container now
2025-08-19 19:06:43,312:INFO:_master_model_container: 8
2025-08-19 19:06:43,312:INFO:_display_container: 2
2025-08-19 19:06:43,312:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:06:43,312:INFO:create_model() successfully completed......................................
2025-08-19 19:06:43,402:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:43,402:INFO:Creating metrics dataframe
2025-08-19 19:06:43,403:INFO:Initializing Ada Boost Classifier
2025-08-19 19:06:43,403:INFO:Total runtime is 0.03702021837234497 minutes
2025-08-19 19:06:43,403:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:43,403:INFO:Initializing create_model()
2025-08-19 19:06:43,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:43,404:INFO:Checking exceptions
2025-08-19 19:06:43,404:INFO:Importing libraries
2025-08-19 19:06:43,404:INFO:Copying training dataset
2025-08-19 19:06:43,405:INFO:Defining folds
2025-08-19 19:06:43,405:INFO:Declaring metric variables
2025-08-19 19:06:43,405:INFO:Importing untrained model
2025-08-19 19:06:43,406:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:06:43,406:INFO:Starting cross validation
2025-08-19 19:06:43,406:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:43,440:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,442:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,451:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,455:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,457:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,502:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,513:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,547:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,768:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,781:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:06:43,978:INFO:Calculating mean and std
2025-08-19 19:06:43,978:INFO:Creating metrics dataframe
2025-08-19 19:06:43,979:INFO:Uploading results into container
2025-08-19 19:06:43,979:INFO:Uploading model into container now
2025-08-19 19:06:43,980:INFO:_master_model_container: 9
2025-08-19 19:06:43,980:INFO:_display_container: 2
2025-08-19 19:06:43,980:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:06:43,980:INFO:create_model() successfully completed......................................
2025-08-19 19:06:44,088:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:44,088:INFO:Creating metrics dataframe
2025-08-19 19:06:44,090:INFO:Initializing Gradient Boosting Classifier
2025-08-19 19:06:44,090:INFO:Total runtime is 0.0484674334526062 minutes
2025-08-19 19:06:44,090:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:44,090:INFO:Initializing create_model()
2025-08-19 19:06:44,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:44,091:INFO:Checking exceptions
2025-08-19 19:06:44,091:INFO:Importing libraries
2025-08-19 19:06:44,091:INFO:Copying training dataset
2025-08-19 19:06:44,098:INFO:Defining folds
2025-08-19 19:06:44,098:INFO:Declaring metric variables
2025-08-19 19:06:44,098:INFO:Importing untrained model
2025-08-19 19:06:44,099:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:06:44,099:INFO:Starting cross validation
2025-08-19 19:06:44,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:45,660:INFO:Calculating mean and std
2025-08-19 19:06:45,661:INFO:Creating metrics dataframe
2025-08-19 19:06:45,662:INFO:Uploading results into container
2025-08-19 19:06:45,663:INFO:Uploading model into container now
2025-08-19 19:06:45,663:INFO:_master_model_container: 10
2025-08-19 19:06:45,663:INFO:_display_container: 2
2025-08-19 19:06:45,663:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:06:45,663:INFO:create_model() successfully completed......................................
2025-08-19 19:06:45,781:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:45,781:INFO:Creating metrics dataframe
2025-08-19 19:06:45,783:INFO:Initializing Linear Discriminant Analysis
2025-08-19 19:06:45,783:INFO:Total runtime is 0.07667905489603678 minutes
2025-08-19 19:06:45,783:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:45,783:INFO:Initializing create_model()
2025-08-19 19:06:45,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:45,783:INFO:Checking exceptions
2025-08-19 19:06:45,783:INFO:Importing libraries
2025-08-19 19:06:45,783:INFO:Copying training dataset
2025-08-19 19:06:45,785:INFO:Defining folds
2025-08-19 19:06:45,786:INFO:Declaring metric variables
2025-08-19 19:06:45,786:INFO:Importing untrained model
2025-08-19 19:06:45,786:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:06:45,786:INFO:Starting cross validation
2025-08-19 19:06:45,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:45,947:INFO:Calculating mean and std
2025-08-19 19:06:45,948:INFO:Creating metrics dataframe
2025-08-19 19:06:45,950:INFO:Uploading results into container
2025-08-19 19:06:45,950:INFO:Uploading model into container now
2025-08-19 19:06:45,951:INFO:_master_model_container: 11
2025-08-19 19:06:45,951:INFO:_display_container: 2
2025-08-19 19:06:45,951:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:06:45,951:INFO:create_model() successfully completed......................................
2025-08-19 19:06:46,037:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:46,037:INFO:Creating metrics dataframe
2025-08-19 19:06:46,039:INFO:Initializing Extra Trees Classifier
2025-08-19 19:06:46,039:INFO:Total runtime is 0.08094425201416015 minutes
2025-08-19 19:06:46,039:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:46,039:INFO:Initializing create_model()
2025-08-19 19:06:46,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:46,039:INFO:Checking exceptions
2025-08-19 19:06:46,039:INFO:Importing libraries
2025-08-19 19:06:46,039:INFO:Copying training dataset
2025-08-19 19:06:46,041:INFO:Defining folds
2025-08-19 19:06:46,041:INFO:Declaring metric variables
2025-08-19 19:06:46,041:INFO:Importing untrained model
2025-08-19 19:06:46,041:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:06:46,041:INFO:Starting cross validation
2025-08-19 19:06:46,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:46,435:INFO:Calculating mean and std
2025-08-19 19:06:46,435:INFO:Creating metrics dataframe
2025-08-19 19:06:46,436:INFO:Uploading results into container
2025-08-19 19:06:46,436:INFO:Uploading model into container now
2025-08-19 19:06:46,437:INFO:_master_model_container: 12
2025-08-19 19:06:46,437:INFO:_display_container: 2
2025-08-19 19:06:46,437:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:06:46,437:INFO:create_model() successfully completed......................................
2025-08-19 19:06:46,520:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:46,520:INFO:Creating metrics dataframe
2025-08-19 19:06:46,521:INFO:Initializing Extreme Gradient Boosting
2025-08-19 19:06:46,521:INFO:Total runtime is 0.08898648420969645 minutes
2025-08-19 19:06:46,521:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:46,521:INFO:Initializing create_model()
2025-08-19 19:06:46,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:46,522:INFO:Checking exceptions
2025-08-19 19:06:46,522:INFO:Importing libraries
2025-08-19 19:06:46,522:INFO:Copying training dataset
2025-08-19 19:06:46,523:INFO:Defining folds
2025-08-19 19:06:46,523:INFO:Declaring metric variables
2025-08-19 19:06:46,523:INFO:Importing untrained model
2025-08-19 19:06:46,524:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:06:46,524:INFO:Starting cross validation
2025-08-19 19:06:46,525:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:46,741:INFO:Calculating mean and std
2025-08-19 19:06:46,741:INFO:Creating metrics dataframe
2025-08-19 19:06:46,742:INFO:Uploading results into container
2025-08-19 19:06:46,742:INFO:Uploading model into container now
2025-08-19 19:06:46,742:INFO:_master_model_container: 13
2025-08-19 19:06:46,742:INFO:_display_container: 2
2025-08-19 19:06:46,743:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:06:46,743:INFO:create_model() successfully completed......................................
2025-08-19 19:06:46,828:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:46,828:INFO:Creating metrics dataframe
2025-08-19 19:06:46,829:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 19:06:46,829:INFO:Total runtime is 0.09412360191345215 minutes
2025-08-19 19:06:46,830:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:46,830:INFO:Initializing create_model()
2025-08-19 19:06:46,830:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:46,830:INFO:Checking exceptions
2025-08-19 19:06:46,830:INFO:Importing libraries
2025-08-19 19:06:46,830:INFO:Copying training dataset
2025-08-19 19:06:46,832:INFO:Defining folds
2025-08-19 19:06:46,832:INFO:Declaring metric variables
2025-08-19 19:06:46,832:INFO:Importing untrained model
2025-08-19 19:06:46,833:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:06:46,833:INFO:Starting cross validation
2025-08-19 19:06:46,834:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:06:50,540:INFO:Calculating mean and std
2025-08-19 19:06:50,542:INFO:Creating metrics dataframe
2025-08-19 19:06:50,547:INFO:Uploading results into container
2025-08-19 19:06:50,547:INFO:Uploading model into container now
2025-08-19 19:06:50,548:INFO:_master_model_container: 14
2025-08-19 19:06:50,548:INFO:_display_container: 2
2025-08-19 19:06:50,549:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:06:50,549:INFO:create_model() successfully completed......................................
2025-08-19 19:06:50,730:INFO:SubProcess create_model() end ==================================
2025-08-19 19:06:50,731:INFO:Creating metrics dataframe
2025-08-19 19:06:50,733:INFO:Initializing CatBoost Classifier
2025-08-19 19:06:50,733:INFO:Total runtime is 0.15917525291442872 minutes
2025-08-19 19:06:50,733:INFO:SubProcess create_model() called ==================================
2025-08-19 19:06:50,733:INFO:Initializing create_model()
2025-08-19 19:06:50,733:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:06:50,733:INFO:Checking exceptions
2025-08-19 19:06:50,733:INFO:Importing libraries
2025-08-19 19:06:50,733:INFO:Copying training dataset
2025-08-19 19:06:50,735:INFO:Defining folds
2025-08-19 19:06:50,735:INFO:Declaring metric variables
2025-08-19 19:06:50,735:INFO:Importing untrained model
2025-08-19 19:06:50,735:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:06:50,735:INFO:Starting cross validation
2025-08-19 19:06:50,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:01,504:INFO:Calculating mean and std
2025-08-19 19:07:01,506:INFO:Creating metrics dataframe
2025-08-19 19:07:01,511:INFO:Uploading results into container
2025-08-19 19:07:01,511:INFO:Uploading model into container now
2025-08-19 19:07:01,512:INFO:_master_model_container: 15
2025-08-19 19:07:01,512:INFO:_display_container: 2
2025-08-19 19:07:01,512:INFO:<catboost.core.CatBoostClassifier object at 0x321242020>
2025-08-19 19:07:01,512:INFO:create_model() successfully completed......................................
2025-08-19 19:07:01,689:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:01,689:INFO:Creating metrics dataframe
2025-08-19 19:07:01,691:INFO:Initializing Dummy Classifier
2025-08-19 19:07:01,691:INFO:Total runtime is 0.3418182373046875 minutes
2025-08-19 19:07:01,691:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:01,691:INFO:Initializing create_model()
2025-08-19 19:07:01,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3212433d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:01,692:INFO:Checking exceptions
2025-08-19 19:07:01,692:INFO:Importing libraries
2025-08-19 19:07:01,692:INFO:Copying training dataset
2025-08-19 19:07:01,694:INFO:Defining folds
2025-08-19 19:07:01,694:INFO:Declaring metric variables
2025-08-19 19:07:01,694:INFO:Importing untrained model
2025-08-19 19:07:01,694:INFO:Dummy Classifier Imported successfully
2025-08-19 19:07:01,694:INFO:Starting cross validation
2025-08-19 19:07:01,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:01,775:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,795:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,797:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,798:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,799:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,809:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,813:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,815:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,829:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,836:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:01,848:INFO:Calculating mean and std
2025-08-19 19:07:01,849:INFO:Creating metrics dataframe
2025-08-19 19:07:01,850:INFO:Uploading results into container
2025-08-19 19:07:01,850:INFO:Uploading model into container now
2025-08-19 19:07:01,850:INFO:_master_model_container: 16
2025-08-19 19:07:01,850:INFO:_display_container: 2
2025-08-19 19:07:01,850:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:07:01,850:INFO:create_model() successfully completed......................................
2025-08-19 19:07:01,938:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:01,938:INFO:Creating metrics dataframe
2025-08-19 19:07:01,940:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 19:07:01,941:INFO:Initializing create_model()
2025-08-19 19:07:01,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:01,941:INFO:Checking exceptions
2025-08-19 19:07:01,942:INFO:Importing libraries
2025-08-19 19:07:01,942:INFO:Copying training dataset
2025-08-19 19:07:01,944:INFO:Defining folds
2025-08-19 19:07:01,944:INFO:Declaring metric variables
2025-08-19 19:07:01,944:INFO:Importing untrained model
2025-08-19 19:07:01,944:INFO:Declaring custom model
2025-08-19 19:07:01,944:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:07:01,945:INFO:Cross validation set to False
2025-08-19 19:07:01,945:INFO:Fitting Model
2025-08-19 19:07:02,538:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:07:02,538:INFO:create_model() successfully completed......................................
2025-08-19 19:07:02,634:INFO:_master_model_container: 16
2025-08-19 19:07:02,635:INFO:_display_container: 2
2025-08-19 19:07:02,635:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:07:02,635:INFO:compare_models() successfully completed......................................
2025-08-19 19:07:02,636:INFO:Initializing create_model()
2025-08-19 19:07:02,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:02,636:INFO:Checking exceptions
2025-08-19 19:07:02,637:INFO:Importing libraries
2025-08-19 19:07:02,637:INFO:Copying training dataset
2025-08-19 19:07:02,640:INFO:Defining folds
2025-08-19 19:07:02,640:INFO:Declaring metric variables
2025-08-19 19:07:02,641:INFO:Importing untrained model
2025-08-19 19:07:02,641:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:07:02,641:INFO:Starting cross validation
2025-08-19 19:07:02,642:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:03,906:INFO:Calculating mean and std
2025-08-19 19:07:03,907:INFO:Creating metrics dataframe
2025-08-19 19:07:03,910:INFO:Finalizing model
2025-08-19 19:07:04,689:INFO:Uploading results into container
2025-08-19 19:07:04,689:INFO:Uploading model into container now
2025-08-19 19:07:04,690:INFO:_master_model_container: 17
2025-08-19 19:07:04,690:INFO:_display_container: 3
2025-08-19 19:07:04,690:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:07:04,690:INFO:create_model() successfully completed......................................
2025-08-19 19:07:04,787:INFO:Initializing finalize_model()
2025-08-19 19:07:04,787:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:04,788:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:07:04,790:INFO:Initializing create_model()
2025-08-19 19:07:04,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:04,790:INFO:Checking exceptions
2025-08-19 19:07:04,791:INFO:Importing libraries
2025-08-19 19:07:04,791:INFO:Copying training dataset
2025-08-19 19:07:04,791:INFO:Defining folds
2025-08-19 19:07:04,791:INFO:Declaring metric variables
2025-08-19 19:07:04,791:INFO:Importing untrained model
2025-08-19 19:07:04,791:INFO:Declaring custom model
2025-08-19 19:07:04,792:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:07:04,792:INFO:Cross validation set to False
2025-08-19 19:07:04,792:INFO:Fitting Model
2025-08-19 19:07:05,715:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:07:05,716:INFO:create_model() successfully completed......................................
2025-08-19 19:07:05,873:INFO:_master_model_container: 17
2025-08-19 19:07:05,873:INFO:_display_container: 3
2025-08-19 19:07:05,900:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:07:05,901:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:06,012:INFO:Initializing predict_model()
2025-08-19 19:07:06,012:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fd181f0>)
2025-08-19 19:07:06,012:INFO:Checking exceptions
2025-08-19 19:07:06,013:INFO:Preloading libraries
2025-08-19 19:07:06,013:INFO:Set up data.
2025-08-19 19:07:06,018:INFO:Set up index.
2025-08-19 19:07:06,132:INFO:Initializing create_model()
2025-08-19 19:07:06,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:06,132:INFO:Checking exceptions
2025-08-19 19:07:06,134:INFO:Importing libraries
2025-08-19 19:07:06,134:INFO:Copying training dataset
2025-08-19 19:07:06,135:INFO:Defining folds
2025-08-19 19:07:06,135:INFO:Declaring metric variables
2025-08-19 19:07:06,136:INFO:Importing untrained model
2025-08-19 19:07:06,136:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:07:06,136:INFO:Starting cross validation
2025-08-19 19:07:06,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:06,398:INFO:Calculating mean and std
2025-08-19 19:07:06,398:INFO:Creating metrics dataframe
2025-08-19 19:07:06,399:INFO:Finalizing model
2025-08-19 19:07:06,658:INFO:Uploading results into container
2025-08-19 19:07:06,659:INFO:Uploading model into container now
2025-08-19 19:07:06,659:INFO:_master_model_container: 18
2025-08-19 19:07:06,660:INFO:_display_container: 5
2025-08-19 19:07:06,660:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:07:06,660:INFO:create_model() successfully completed......................................
2025-08-19 19:07:06,748:INFO:Initializing finalize_model()
2025-08-19 19:07:06,748:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:06,748:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:07:06,750:INFO:Initializing create_model()
2025-08-19 19:07:06,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:06,750:INFO:Checking exceptions
2025-08-19 19:07:06,751:INFO:Importing libraries
2025-08-19 19:07:06,751:INFO:Copying training dataset
2025-08-19 19:07:06,751:INFO:Defining folds
2025-08-19 19:07:06,751:INFO:Declaring metric variables
2025-08-19 19:07:06,751:INFO:Importing untrained model
2025-08-19 19:07:06,752:INFO:Declaring custom model
2025-08-19 19:07:06,752:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:07:06,753:INFO:Cross validation set to False
2025-08-19 19:07:06,753:INFO:Fitting Model
2025-08-19 19:07:06,925:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:07:06,925:INFO:create_model() successfully completed......................................
2025-08-19 19:07:07,010:INFO:_master_model_container: 18
2025-08-19 19:07:07,010:INFO:_display_container: 5
2025-08-19 19:07:07,017:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:07:07,017:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:07,113:INFO:Initializing predict_model()
2025-08-19 19:07:07,113:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:07,113:INFO:Checking exceptions
2025-08-19 19:07:07,114:INFO:Preloading libraries
2025-08-19 19:07:07,114:INFO:Set up data.
2025-08-19 19:07:07,118:INFO:Set up index.
2025-08-19 19:07:07,240:INFO:Initializing create_model()
2025-08-19 19:07:07,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:07,240:INFO:Checking exceptions
2025-08-19 19:07:07,241:INFO:Importing libraries
2025-08-19 19:07:07,241:INFO:Copying training dataset
2025-08-19 19:07:07,243:INFO:Defining folds
2025-08-19 19:07:07,243:INFO:Declaring metric variables
2025-08-19 19:07:07,243:INFO:Importing untrained model
2025-08-19 19:07:07,243:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:07:07,243:INFO:Starting cross validation
2025-08-19 19:07:07,244:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:21,157:INFO:Calculating mean and std
2025-08-19 19:07:21,158:INFO:Creating metrics dataframe
2025-08-19 19:07:21,161:INFO:Finalizing model
2025-08-19 19:07:22,825:INFO:Uploading results into container
2025-08-19 19:07:22,825:INFO:Uploading model into container now
2025-08-19 19:07:22,825:INFO:_master_model_container: 19
2025-08-19 19:07:22,826:INFO:_display_container: 7
2025-08-19 19:07:22,826:INFO:<catboost.core.CatBoostClassifier object at 0x309985360>
2025-08-19 19:07:22,826:INFO:create_model() successfully completed......................................
2025-08-19 19:07:22,956:INFO:Initializing finalize_model()
2025-08-19 19:07:22,956:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=<catboost.core.CatBoostClassifier object at 0x309985360>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:22,956:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x309985360>
2025-08-19 19:07:22,958:INFO:Initializing create_model()
2025-08-19 19:07:22,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=<catboost.core.CatBoostClassifier object at 0x309985360>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:22,958:INFO:Checking exceptions
2025-08-19 19:07:22,959:INFO:Importing libraries
2025-08-19 19:07:22,959:INFO:Copying training dataset
2025-08-19 19:07:22,959:INFO:Defining folds
2025-08-19 19:07:22,959:INFO:Declaring metric variables
2025-08-19 19:07:22,959:INFO:Importing untrained model
2025-08-19 19:07:22,959:INFO:Declaring custom model
2025-08-19 19:07:22,959:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:07:22,960:INFO:Cross validation set to False
2025-08-19 19:07:22,960:INFO:Fitting Model
2025-08-19 19:07:24,754:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x321240ac0>)],
         verbose=False)
2025-08-19 19:07:24,754:INFO:create_model() successfully completed......................................
2025-08-19 19:07:24,843:INFO:_master_model_container: 19
2025-08-19 19:07:24,843:INFO:_display_container: 7
2025-08-19 19:07:24,848:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x321240ac0>)],
         verbose=False)
2025-08-19 19:07:24,848:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:24,936:INFO:Initializing predict_model()
2025-08-19 19:07:24,937:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x321240ac0>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:24,937:INFO:Checking exceptions
2025-08-19 19:07:24,937:INFO:Preloading libraries
2025-08-19 19:07:24,937:INFO:Set up data.
2025-08-19 19:07:24,941:INFO:Set up index.
2025-08-19 19:07:25,086:INFO:Initializing create_model()
2025-08-19 19:07:25,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:25,086:INFO:Checking exceptions
2025-08-19 19:07:25,087:INFO:Importing libraries
2025-08-19 19:07:25,087:INFO:Copying training dataset
2025-08-19 19:07:25,089:INFO:Defining folds
2025-08-19 19:07:25,089:INFO:Declaring metric variables
2025-08-19 19:07:25,089:INFO:Importing untrained model
2025-08-19 19:07:25,089:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:07:25,089:INFO:Starting cross validation
2025-08-19 19:07:25,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:28,922:INFO:Calculating mean and std
2025-08-19 19:07:28,923:INFO:Creating metrics dataframe
2025-08-19 19:07:28,925:INFO:Finalizing model
2025-08-19 19:07:28,953:INFO:[LightGBM] [Info] Number of positive: 462, number of negative: 306
2025-08-19 19:07:28,953:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000479 seconds.
2025-08-19 19:07:28,953:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:07:28,954:INFO:[LightGBM] [Info] Total Bins 6376
2025-08-19 19:07:28,954:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 19:07:28,954:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.601562 -> initscore=0.411980
2025-08-19 19:07:28,954:INFO:[LightGBM] [Info] Start training from score 0.411980
2025-08-19 19:07:28,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:28,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:28,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:28,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:28,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:28,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:28,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:28,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:29,465:INFO:Uploading results into container
2025-08-19 19:07:29,466:INFO:Uploading model into container now
2025-08-19 19:07:29,466:INFO:_master_model_container: 20
2025-08-19 19:07:29,466:INFO:_display_container: 9
2025-08-19 19:07:29,467:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:07:29,467:INFO:create_model() successfully completed......................................
2025-08-19 19:07:29,551:INFO:Initializing finalize_model()
2025-08-19 19:07:29,551:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:29,551:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:07:29,553:INFO:Initializing create_model()
2025-08-19 19:07:29,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:29,553:INFO:Checking exceptions
2025-08-19 19:07:29,554:INFO:Importing libraries
2025-08-19 19:07:29,554:INFO:Copying training dataset
2025-08-19 19:07:29,554:INFO:Defining folds
2025-08-19 19:07:29,554:INFO:Declaring metric variables
2025-08-19 19:07:29,554:INFO:Importing untrained model
2025-08-19 19:07:29,554:INFO:Declaring custom model
2025-08-19 19:07:29,555:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:07:29,555:INFO:Cross validation set to False
2025-08-19 19:07:29,555:INFO:Fitting Model
2025-08-19 19:07:29,582:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 19:07:29,583:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000460 seconds.
2025-08-19 19:07:29,583:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:07:29,583:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 19:07:29,583:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 19:07:29,583:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 19:07:29,584:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 19:07:29,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:29,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:29,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:29,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:29,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:29,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:07:30,111:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:07:30,111:INFO:create_model() successfully completed......................................
2025-08-19 19:07:30,196:INFO:_master_model_container: 20
2025-08-19 19:07:30,196:INFO:_display_container: 9
2025-08-19 19:07:30,202:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:07:30,203:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:30,292:INFO:Initializing predict_model()
2025-08-19 19:07:30,293:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:30,293:INFO:Checking exceptions
2025-08-19 19:07:30,293:INFO:Preloading libraries
2025-08-19 19:07:30,293:INFO:Set up data.
2025-08-19 19:07:30,297:INFO:Set up index.
2025-08-19 19:07:30,406:INFO:Initializing create_model()
2025-08-19 19:07:30,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:30,406:INFO:Checking exceptions
2025-08-19 19:07:30,407:INFO:Importing libraries
2025-08-19 19:07:30,407:INFO:Copying training dataset
2025-08-19 19:07:30,409:INFO:Defining folds
2025-08-19 19:07:30,409:INFO:Declaring metric variables
2025-08-19 19:07:30,409:INFO:Importing untrained model
2025-08-19 19:07:30,409:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:07:30,409:INFO:Starting cross validation
2025-08-19 19:07:30,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:30,536:INFO:Calculating mean and std
2025-08-19 19:07:30,537:INFO:Creating metrics dataframe
2025-08-19 19:07:30,538:INFO:Finalizing model
2025-08-19 19:07:30,569:INFO:Uploading results into container
2025-08-19 19:07:30,569:INFO:Uploading model into container now
2025-08-19 19:07:30,570:INFO:_master_model_container: 21
2025-08-19 19:07:30,570:INFO:_display_container: 11
2025-08-19 19:07:30,570:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:07:30,570:INFO:create_model() successfully completed......................................
2025-08-19 19:07:30,653:INFO:Initializing finalize_model()
2025-08-19 19:07:30,654:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:30,654:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:07:30,655:INFO:Initializing create_model()
2025-08-19 19:07:30,655:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:30,655:INFO:Checking exceptions
2025-08-19 19:07:30,656:INFO:Importing libraries
2025-08-19 19:07:30,656:INFO:Copying training dataset
2025-08-19 19:07:30,656:INFO:Defining folds
2025-08-19 19:07:30,656:INFO:Declaring metric variables
2025-08-19 19:07:30,656:INFO:Importing untrained model
2025-08-19 19:07:30,656:INFO:Declaring custom model
2025-08-19 19:07:30,657:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:07:30,657:INFO:Cross validation set to False
2025-08-19 19:07:30,657:INFO:Fitting Model
2025-08-19 19:07:30,699:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:07:30,699:INFO:create_model() successfully completed......................................
2025-08-19 19:07:30,782:INFO:_master_model_container: 21
2025-08-19 19:07:30,783:INFO:_display_container: 11
2025-08-19 19:07:30,787:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:07:30,787:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:30,878:INFO:Initializing predict_model()
2025-08-19 19:07:30,878:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:30,878:INFO:Checking exceptions
2025-08-19 19:07:30,878:INFO:Preloading libraries
2025-08-19 19:07:30,878:INFO:Set up data.
2025-08-19 19:07:30,882:INFO:Set up index.
2025-08-19 19:07:30,986:INFO:Initializing create_model()
2025-08-19 19:07:30,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:30,986:INFO:Checking exceptions
2025-08-19 19:07:30,987:INFO:Importing libraries
2025-08-19 19:07:30,987:INFO:Copying training dataset
2025-08-19 19:07:30,988:INFO:Defining folds
2025-08-19 19:07:30,989:INFO:Declaring metric variables
2025-08-19 19:07:30,989:INFO:Importing untrained model
2025-08-19 19:07:30,989:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:07:30,989:INFO:Starting cross validation
2025-08-19 19:07:30,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:31,562:INFO:Calculating mean and std
2025-08-19 19:07:31,562:INFO:Creating metrics dataframe
2025-08-19 19:07:31,564:INFO:Finalizing model
2025-08-19 19:07:31,692:INFO:Uploading results into container
2025-08-19 19:07:31,692:INFO:Uploading model into container now
2025-08-19 19:07:31,692:INFO:_master_model_container: 22
2025-08-19 19:07:31,692:INFO:_display_container: 13
2025-08-19 19:07:31,693:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:07:31,693:INFO:create_model() successfully completed......................................
2025-08-19 19:07:31,777:INFO:Initializing finalize_model()
2025-08-19 19:07:31,778:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:31,778:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:07:31,779:INFO:Initializing create_model()
2025-08-19 19:07:31,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:31,779:INFO:Checking exceptions
2025-08-19 19:07:31,780:INFO:Importing libraries
2025-08-19 19:07:31,780:INFO:Copying training dataset
2025-08-19 19:07:31,780:INFO:Defining folds
2025-08-19 19:07:31,780:INFO:Declaring metric variables
2025-08-19 19:07:31,780:INFO:Importing untrained model
2025-08-19 19:07:31,780:INFO:Declaring custom model
2025-08-19 19:07:31,781:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:07:31,782:INFO:Cross validation set to False
2025-08-19 19:07:31,782:INFO:Fitting Model
2025-08-19 19:07:31,918:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:07:31,918:INFO:create_model() successfully completed......................................
2025-08-19 19:07:32,002:INFO:_master_model_container: 22
2025-08-19 19:07:32,002:INFO:_display_container: 13
2025-08-19 19:07:32,008:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:07:32,008:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:32,096:INFO:Initializing predict_model()
2025-08-19 19:07:32,097:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:32,097:INFO:Checking exceptions
2025-08-19 19:07:32,097:INFO:Preloading libraries
2025-08-19 19:07:32,097:INFO:Set up data.
2025-08-19 19:07:32,102:INFO:Set up index.
2025-08-19 19:07:32,233:INFO:Initializing create_model()
2025-08-19 19:07:32,233:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:32,233:INFO:Checking exceptions
2025-08-19 19:07:32,234:INFO:Importing libraries
2025-08-19 19:07:32,234:INFO:Copying training dataset
2025-08-19 19:07:32,236:INFO:Defining folds
2025-08-19 19:07:32,236:INFO:Declaring metric variables
2025-08-19 19:07:32,236:INFO:Importing untrained model
2025-08-19 19:07:32,236:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:07:32,236:INFO:Starting cross validation
2025-08-19 19:07:32,237:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:32,270:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,276:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,286:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,290:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,293:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,312:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,319:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,342:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,473:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,481:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,639:INFO:Calculating mean and std
2025-08-19 19:07:32,639:INFO:Creating metrics dataframe
2025-08-19 19:07:32,640:INFO:Finalizing model
2025-08-19 19:07:32,665:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:32,806:INFO:Uploading results into container
2025-08-19 19:07:32,806:INFO:Uploading model into container now
2025-08-19 19:07:32,806:INFO:_master_model_container: 23
2025-08-19 19:07:32,806:INFO:_display_container: 15
2025-08-19 19:07:32,806:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:07:32,806:INFO:create_model() successfully completed......................................
2025-08-19 19:07:32,893:INFO:Initializing finalize_model()
2025-08-19 19:07:32,893:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:32,894:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:07:32,895:INFO:Initializing create_model()
2025-08-19 19:07:32,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:32,895:INFO:Checking exceptions
2025-08-19 19:07:32,896:INFO:Importing libraries
2025-08-19 19:07:32,896:INFO:Copying training dataset
2025-08-19 19:07:32,896:INFO:Defining folds
2025-08-19 19:07:32,896:INFO:Declaring metric variables
2025-08-19 19:07:32,896:INFO:Importing untrained model
2025-08-19 19:07:32,896:INFO:Declaring custom model
2025-08-19 19:07:32,897:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:07:32,897:INFO:Cross validation set to False
2025-08-19 19:07:32,898:INFO:Fitting Model
2025-08-19 19:07:32,997:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:33,430:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:07:33,430:INFO:create_model() successfully completed......................................
2025-08-19 19:07:33,526:INFO:_master_model_container: 23
2025-08-19 19:07:33,526:INFO:_display_container: 15
2025-08-19 19:07:33,530:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:07:33,531:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:33,620:INFO:Initializing predict_model()
2025-08-19 19:07:33,620:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:33,620:INFO:Checking exceptions
2025-08-19 19:07:33,620:INFO:Preloading libraries
2025-08-19 19:07:33,620:INFO:Set up data.
2025-08-19 19:07:33,625:INFO:Set up index.
2025-08-19 19:07:33,738:INFO:Initializing create_model()
2025-08-19 19:07:33,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:33,738:INFO:Checking exceptions
2025-08-19 19:07:33,739:INFO:Importing libraries
2025-08-19 19:07:33,739:INFO:Copying training dataset
2025-08-19 19:07:33,740:INFO:Defining folds
2025-08-19 19:07:33,740:INFO:Declaring metric variables
2025-08-19 19:07:33,741:INFO:Importing untrained model
2025-08-19 19:07:33,741:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:07:33,741:INFO:Starting cross validation
2025-08-19 19:07:33,742:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:34,237:INFO:Calculating mean and std
2025-08-19 19:07:34,237:INFO:Creating metrics dataframe
2025-08-19 19:07:34,238:INFO:Finalizing model
2025-08-19 19:07:34,342:INFO:Uploading results into container
2025-08-19 19:07:34,343:INFO:Uploading model into container now
2025-08-19 19:07:34,343:INFO:_master_model_container: 24
2025-08-19 19:07:34,343:INFO:_display_container: 17
2025-08-19 19:07:34,343:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:07:34,343:INFO:create_model() successfully completed......................................
2025-08-19 19:07:34,430:INFO:Initializing finalize_model()
2025-08-19 19:07:34,430:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:34,430:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:07:34,432:INFO:Initializing create_model()
2025-08-19 19:07:34,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:34,432:INFO:Checking exceptions
2025-08-19 19:07:34,433:INFO:Importing libraries
2025-08-19 19:07:34,433:INFO:Copying training dataset
2025-08-19 19:07:34,434:INFO:Defining folds
2025-08-19 19:07:34,434:INFO:Declaring metric variables
2025-08-19 19:07:34,434:INFO:Importing untrained model
2025-08-19 19:07:34,434:INFO:Declaring custom model
2025-08-19 19:07:34,434:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:07:34,435:INFO:Cross validation set to False
2025-08-19 19:07:34,435:INFO:Fitting Model
2025-08-19 19:07:34,534:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:07:34,534:INFO:create_model() successfully completed......................................
2025-08-19 19:07:34,617:INFO:_master_model_container: 24
2025-08-19 19:07:34,617:INFO:_display_container: 17
2025-08-19 19:07:34,622:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:07:34,622:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:34,711:INFO:Initializing predict_model()
2025-08-19 19:07:34,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:34,711:INFO:Checking exceptions
2025-08-19 19:07:34,711:INFO:Preloading libraries
2025-08-19 19:07:34,711:INFO:Set up data.
2025-08-19 19:07:34,716:INFO:Set up index.
2025-08-19 19:07:34,849:INFO:Initializing create_model()
2025-08-19 19:07:34,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:34,850:INFO:Checking exceptions
2025-08-19 19:07:34,851:INFO:Importing libraries
2025-08-19 19:07:34,851:INFO:Copying training dataset
2025-08-19 19:07:34,852:INFO:Defining folds
2025-08-19 19:07:34,852:INFO:Declaring metric variables
2025-08-19 19:07:34,852:INFO:Importing untrained model
2025-08-19 19:07:34,853:INFO:Dummy Classifier Imported successfully
2025-08-19 19:07:34,853:INFO:Starting cross validation
2025-08-19 19:07:34,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:34,902:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,908:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,928:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,930:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,930:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,946:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,951:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,953:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,956:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,961:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:34,972:INFO:Calculating mean and std
2025-08-19 19:07:34,973:INFO:Creating metrics dataframe
2025-08-19 19:07:34,974:INFO:Finalizing model
2025-08-19 19:07:34,997:INFO:Uploading results into container
2025-08-19 19:07:34,997:INFO:Uploading model into container now
2025-08-19 19:07:34,998:INFO:_master_model_container: 25
2025-08-19 19:07:34,998:INFO:_display_container: 19
2025-08-19 19:07:34,998:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:07:34,998:INFO:create_model() successfully completed......................................
2025-08-19 19:07:35,082:INFO:Initializing finalize_model()
2025-08-19 19:07:35,082:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:35,082:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:07:35,084:INFO:Initializing create_model()
2025-08-19 19:07:35,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:35,084:INFO:Checking exceptions
2025-08-19 19:07:35,086:INFO:Importing libraries
2025-08-19 19:07:35,086:INFO:Copying training dataset
2025-08-19 19:07:35,086:INFO:Defining folds
2025-08-19 19:07:35,086:INFO:Declaring metric variables
2025-08-19 19:07:35,086:INFO:Importing untrained model
2025-08-19 19:07:35,086:INFO:Declaring custom model
2025-08-19 19:07:35,086:INFO:Dummy Classifier Imported successfully
2025-08-19 19:07:35,087:INFO:Cross validation set to False
2025-08-19 19:07:35,087:INFO:Fitting Model
2025-08-19 19:07:35,117:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:07:35,117:INFO:create_model() successfully completed......................................
2025-08-19 19:07:35,204:INFO:_master_model_container: 25
2025-08-19 19:07:35,204:INFO:_display_container: 19
2025-08-19 19:07:35,208:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:07:35,209:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:35,309:INFO:Initializing predict_model()
2025-08-19 19:07:35,309:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:35,309:INFO:Checking exceptions
2025-08-19 19:07:35,309:INFO:Preloading libraries
2025-08-19 19:07:35,309:INFO:Set up data.
2025-08-19 19:07:35,314:INFO:Set up index.
2025-08-19 19:07:35,331:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:35,440:INFO:Initializing create_model()
2025-08-19 19:07:35,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:35,440:INFO:Checking exceptions
2025-08-19 19:07:35,441:INFO:Importing libraries
2025-08-19 19:07:35,441:INFO:Copying training dataset
2025-08-19 19:07:35,443:INFO:Defining folds
2025-08-19 19:07:35,444:INFO:Declaring metric variables
2025-08-19 19:07:35,444:INFO:Importing untrained model
2025-08-19 19:07:35,444:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:07:35,444:INFO:Starting cross validation
2025-08-19 19:07:35,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:35,489:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,492:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,495:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,506:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,507:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,509:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,515:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,542:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,551:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,552:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,577:INFO:Calculating mean and std
2025-08-19 19:07:35,577:INFO:Creating metrics dataframe
2025-08-19 19:07:35,578:INFO:Finalizing model
2025-08-19 19:07:35,602:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,608:INFO:Uploading results into container
2025-08-19 19:07:35,609:INFO:Uploading model into container now
2025-08-19 19:07:35,609:INFO:_master_model_container: 26
2025-08-19 19:07:35,609:INFO:_display_container: 21
2025-08-19 19:07:35,610:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:07:35,610:INFO:create_model() successfully completed......................................
2025-08-19 19:07:35,758:INFO:Initializing finalize_model()
2025-08-19 19:07:35,758:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:35,758:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:07:35,760:INFO:Initializing create_model()
2025-08-19 19:07:35,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:35,760:INFO:Checking exceptions
2025-08-19 19:07:35,761:INFO:Importing libraries
2025-08-19 19:07:35,761:INFO:Copying training dataset
2025-08-19 19:07:35,761:INFO:Defining folds
2025-08-19 19:07:35,761:INFO:Declaring metric variables
2025-08-19 19:07:35,761:INFO:Importing untrained model
2025-08-19 19:07:35,761:INFO:Declaring custom model
2025-08-19 19:07:35,761:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:07:35,762:INFO:Cross validation set to False
2025-08-19 19:07:35,762:INFO:Fitting Model
2025-08-19 19:07:35,796:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:35,809:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:07:35,809:INFO:create_model() successfully completed......................................
2025-08-19 19:07:35,904:INFO:_master_model_container: 26
2025-08-19 19:07:35,904:INFO:_display_container: 21
2025-08-19 19:07:35,909:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:07:35,909:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:36,034:INFO:Initializing predict_model()
2025-08-19 19:07:36,034:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:36,034:INFO:Checking exceptions
2025-08-19 19:07:36,034:INFO:Preloading libraries
2025-08-19 19:07:36,034:INFO:Set up data.
2025-08-19 19:07:36,038:INFO:Set up index.
2025-08-19 19:07:36,155:INFO:Initializing create_model()
2025-08-19 19:07:36,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:36,155:INFO:Checking exceptions
2025-08-19 19:07:36,156:INFO:Importing libraries
2025-08-19 19:07:36,156:INFO:Copying training dataset
2025-08-19 19:07:36,158:INFO:Defining folds
2025-08-19 19:07:36,158:INFO:Declaring metric variables
2025-08-19 19:07:36,158:INFO:Importing untrained model
2025-08-19 19:07:36,159:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:07:36,159:INFO:Starting cross validation
2025-08-19 19:07:36,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:36,339:INFO:Calculating mean and std
2025-08-19 19:07:36,340:INFO:Creating metrics dataframe
2025-08-19 19:07:36,341:INFO:Finalizing model
2025-08-19 19:07:36,368:INFO:Uploading results into container
2025-08-19 19:07:36,368:INFO:Uploading model into container now
2025-08-19 19:07:36,368:INFO:_master_model_container: 27
2025-08-19 19:07:36,368:INFO:_display_container: 23
2025-08-19 19:07:36,368:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:07:36,368:INFO:create_model() successfully completed......................................
2025-08-19 19:07:36,457:INFO:Initializing finalize_model()
2025-08-19 19:07:36,457:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:36,458:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:07:36,459:INFO:Initializing create_model()
2025-08-19 19:07:36,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:36,459:INFO:Checking exceptions
2025-08-19 19:07:36,460:INFO:Importing libraries
2025-08-19 19:07:36,460:INFO:Copying training dataset
2025-08-19 19:07:36,460:INFO:Defining folds
2025-08-19 19:07:36,460:INFO:Declaring metric variables
2025-08-19 19:07:36,460:INFO:Importing untrained model
2025-08-19 19:07:36,460:INFO:Declaring custom model
2025-08-19 19:07:36,461:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:07:36,461:INFO:Cross validation set to False
2025-08-19 19:07:36,461:INFO:Fitting Model
2025-08-19 19:07:36,492:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:07:36,492:INFO:create_model() successfully completed......................................
2025-08-19 19:07:36,582:INFO:_master_model_container: 27
2025-08-19 19:07:36,582:INFO:_display_container: 23
2025-08-19 19:07:36,587:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:07:36,588:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:36,912:INFO:Initializing predict_model()
2025-08-19 19:07:36,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:36,912:INFO:Checking exceptions
2025-08-19 19:07:36,912:INFO:Preloading libraries
2025-08-19 19:07:36,913:INFO:Set up data.
2025-08-19 19:07:36,926:INFO:Set up index.
2025-08-19 19:07:37,142:INFO:Initializing create_model()
2025-08-19 19:07:37,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:37,142:INFO:Checking exceptions
2025-08-19 19:07:37,143:INFO:Importing libraries
2025-08-19 19:07:37,143:INFO:Copying training dataset
2025-08-19 19:07:37,145:INFO:Defining folds
2025-08-19 19:07:37,145:INFO:Declaring metric variables
2025-08-19 19:07:37,145:INFO:Importing untrained model
2025-08-19 19:07:37,145:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:07:37,145:INFO:Starting cross validation
2025-08-19 19:07:37,146:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:37,380:INFO:Calculating mean and std
2025-08-19 19:07:37,380:INFO:Creating metrics dataframe
2025-08-19 19:07:37,381:INFO:Finalizing model
2025-08-19 19:07:37,430:INFO:Uploading results into container
2025-08-19 19:07:37,430:INFO:Uploading model into container now
2025-08-19 19:07:37,430:INFO:_master_model_container: 28
2025-08-19 19:07:37,430:INFO:_display_container: 25
2025-08-19 19:07:37,431:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:07:37,431:INFO:create_model() successfully completed......................................
2025-08-19 19:07:37,523:INFO:Initializing finalize_model()
2025-08-19 19:07:37,523:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:37,523:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:07:37,525:INFO:Initializing create_model()
2025-08-19 19:07:37,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:37,525:INFO:Checking exceptions
2025-08-19 19:07:37,526:INFO:Importing libraries
2025-08-19 19:07:37,526:INFO:Copying training dataset
2025-08-19 19:07:37,526:INFO:Defining folds
2025-08-19 19:07:37,526:INFO:Declaring metric variables
2025-08-19 19:07:37,526:INFO:Importing untrained model
2025-08-19 19:07:37,526:INFO:Declaring custom model
2025-08-19 19:07:37,527:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:07:37,527:INFO:Cross validation set to False
2025-08-19 19:07:37,527:INFO:Fitting Model
2025-08-19 19:07:37,561:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:07:37,561:INFO:create_model() successfully completed......................................
2025-08-19 19:07:37,645:INFO:_master_model_container: 28
2025-08-19 19:07:37,645:INFO:_display_container: 25
2025-08-19 19:07:37,651:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:07:37,651:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:37,741:INFO:Initializing predict_model()
2025-08-19 19:07:37,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:37,741:INFO:Checking exceptions
2025-08-19 19:07:37,741:INFO:Preloading libraries
2025-08-19 19:07:37,741:INFO:Set up data.
2025-08-19 19:07:37,745:INFO:Set up index.
2025-08-19 19:07:37,849:INFO:Initializing create_model()
2025-08-19 19:07:37,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:37,849:INFO:Checking exceptions
2025-08-19 19:07:37,850:INFO:Importing libraries
2025-08-19 19:07:37,850:INFO:Copying training dataset
2025-08-19 19:07:37,852:INFO:Defining folds
2025-08-19 19:07:37,853:INFO:Declaring metric variables
2025-08-19 19:07:37,854:INFO:Importing untrained model
2025-08-19 19:07:37,854:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:07:37,854:INFO:Starting cross validation
2025-08-19 19:07:37,855:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:37,981:INFO:Calculating mean and std
2025-08-19 19:07:37,981:INFO:Creating metrics dataframe
2025-08-19 19:07:37,982:INFO:Finalizing model
2025-08-19 19:07:38,009:INFO:Uploading results into container
2025-08-19 19:07:38,010:INFO:Uploading model into container now
2025-08-19 19:07:38,010:INFO:_master_model_container: 29
2025-08-19 19:07:38,010:INFO:_display_container: 27
2025-08-19 19:07:38,010:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:07:38,010:INFO:create_model() successfully completed......................................
2025-08-19 19:07:38,134:INFO:Initializing finalize_model()
2025-08-19 19:07:38,134:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:38,134:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:07:38,135:INFO:Initializing create_model()
2025-08-19 19:07:38,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:38,135:INFO:Checking exceptions
2025-08-19 19:07:38,136:INFO:Importing libraries
2025-08-19 19:07:38,136:INFO:Copying training dataset
2025-08-19 19:07:38,136:INFO:Defining folds
2025-08-19 19:07:38,136:INFO:Declaring metric variables
2025-08-19 19:07:38,136:INFO:Importing untrained model
2025-08-19 19:07:38,136:INFO:Declaring custom model
2025-08-19 19:07:38,137:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:07:38,137:INFO:Cross validation set to False
2025-08-19 19:07:38,137:INFO:Fitting Model
2025-08-19 19:07:38,297:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:07:38,298:INFO:create_model() successfully completed......................................
2025-08-19 19:07:38,393:INFO:_master_model_container: 29
2025-08-19 19:07:38,393:INFO:_display_container: 27
2025-08-19 19:07:38,399:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:07:38,399:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:38,491:INFO:Initializing predict_model()
2025-08-19 19:07:38,491:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:38,491:INFO:Checking exceptions
2025-08-19 19:07:38,491:INFO:Preloading libraries
2025-08-19 19:07:38,491:INFO:Set up data.
2025-08-19 19:07:38,495:INFO:Set up index.
2025-08-19 19:07:38,625:INFO:Initializing create_model()
2025-08-19 19:07:38,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:38,625:INFO:Checking exceptions
2025-08-19 19:07:38,626:INFO:Importing libraries
2025-08-19 19:07:38,626:INFO:Copying training dataset
2025-08-19 19:07:38,628:INFO:Defining folds
2025-08-19 19:07:38,628:INFO:Declaring metric variables
2025-08-19 19:07:38,628:INFO:Importing untrained model
2025-08-19 19:07:38,628:INFO:Ridge Classifier Imported successfully
2025-08-19 19:07:38,628:INFO:Starting cross validation
2025-08-19 19:07:38,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:38,777:INFO:Calculating mean and std
2025-08-19 19:07:38,777:INFO:Creating metrics dataframe
2025-08-19 19:07:38,778:INFO:Finalizing model
2025-08-19 19:07:38,828:INFO:Uploading results into container
2025-08-19 19:07:38,830:INFO:Uploading model into container now
2025-08-19 19:07:38,831:INFO:_master_model_container: 30
2025-08-19 19:07:38,837:INFO:_display_container: 29
2025-08-19 19:07:38,838:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:07:38,838:INFO:create_model() successfully completed......................................
2025-08-19 19:07:39,125:INFO:Initializing finalize_model()
2025-08-19 19:07:39,125:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:39,125:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:07:39,127:INFO:Initializing create_model()
2025-08-19 19:07:39,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:39,127:INFO:Checking exceptions
2025-08-19 19:07:39,128:INFO:Importing libraries
2025-08-19 19:07:39,128:INFO:Copying training dataset
2025-08-19 19:07:39,128:INFO:Defining folds
2025-08-19 19:07:39,128:INFO:Declaring metric variables
2025-08-19 19:07:39,128:INFO:Importing untrained model
2025-08-19 19:07:39,129:INFO:Declaring custom model
2025-08-19 19:07:39,129:INFO:Ridge Classifier Imported successfully
2025-08-19 19:07:39,130:INFO:Cross validation set to False
2025-08-19 19:07:39,130:INFO:Fitting Model
2025-08-19 19:07:39,161:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:07:39,162:INFO:create_model() successfully completed......................................
2025-08-19 19:07:39,269:INFO:_master_model_container: 30
2025-08-19 19:07:39,269:INFO:_display_container: 29
2025-08-19 19:07:39,273:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:07:39,274:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:39,391:INFO:Initializing predict_model()
2025-08-19 19:07:39,391:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:39,391:INFO:Checking exceptions
2025-08-19 19:07:39,391:INFO:Preloading libraries
2025-08-19 19:07:39,391:INFO:Set up data.
2025-08-19 19:07:39,395:INFO:Set up index.
2025-08-19 19:07:39,512:INFO:Initializing create_model()
2025-08-19 19:07:39,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:39,512:INFO:Checking exceptions
2025-08-19 19:07:39,513:INFO:Importing libraries
2025-08-19 19:07:39,513:INFO:Copying training dataset
2025-08-19 19:07:39,515:INFO:Defining folds
2025-08-19 19:07:39,515:INFO:Declaring metric variables
2025-08-19 19:07:39,515:INFO:Importing untrained model
2025-08-19 19:07:39,515:INFO:Logistic Regression Imported successfully
2025-08-19 19:07:39,515:INFO:Starting cross validation
2025-08-19 19:07:39,516:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:39,620:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:39,629:INFO:Calculating mean and std
2025-08-19 19:07:39,629:INFO:Creating metrics dataframe
2025-08-19 19:07:39,630:INFO:Finalizing model
2025-08-19 19:07:39,668:INFO:Uploading results into container
2025-08-19 19:07:39,669:INFO:Uploading model into container now
2025-08-19 19:07:39,670:INFO:_master_model_container: 31
2025-08-19 19:07:39,670:INFO:_display_container: 31
2025-08-19 19:07:39,670:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:07:39,670:INFO:create_model() successfully completed......................................
2025-08-19 19:07:39,787:INFO:Initializing finalize_model()
2025-08-19 19:07:39,787:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:39,787:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:07:39,789:INFO:Initializing create_model()
2025-08-19 19:07:39,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:39,789:INFO:Checking exceptions
2025-08-19 19:07:39,789:INFO:Importing libraries
2025-08-19 19:07:39,790:INFO:Copying training dataset
2025-08-19 19:07:39,790:INFO:Defining folds
2025-08-19 19:07:39,790:INFO:Declaring metric variables
2025-08-19 19:07:39,790:INFO:Importing untrained model
2025-08-19 19:07:39,790:INFO:Declaring custom model
2025-08-19 19:07:39,790:INFO:Logistic Regression Imported successfully
2025-08-19 19:07:39,791:INFO:Cross validation set to False
2025-08-19 19:07:39,791:INFO:Fitting Model
2025-08-19 19:07:39,860:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:07:39,860:INFO:create_model() successfully completed......................................
2025-08-19 19:07:39,973:INFO:_master_model_container: 31
2025-08-19 19:07:39,973:INFO:_display_container: 31
2025-08-19 19:07:39,985:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:07:39,985:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:40,092:INFO:Initializing predict_model()
2025-08-19 19:07:40,092:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:40,092:INFO:Checking exceptions
2025-08-19 19:07:40,092:INFO:Preloading libraries
2025-08-19 19:07:40,093:INFO:Set up data.
2025-08-19 19:07:40,096:INFO:Set up index.
2025-08-19 19:07:40,240:INFO:Initializing create_model()
2025-08-19 19:07:40,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:40,240:INFO:Checking exceptions
2025-08-19 19:07:40,242:INFO:Importing libraries
2025-08-19 19:07:40,242:INFO:Copying training dataset
2025-08-19 19:07:40,244:INFO:Defining folds
2025-08-19 19:07:40,244:INFO:Declaring metric variables
2025-08-19 19:07:40,244:INFO:Importing untrained model
2025-08-19 19:07:40,244:INFO:Naive Bayes Imported successfully
2025-08-19 19:07:40,244:INFO:Starting cross validation
2025-08-19 19:07:40,245:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:40,368:INFO:Calculating mean and std
2025-08-19 19:07:40,368:INFO:Creating metrics dataframe
2025-08-19 19:07:40,369:INFO:Finalizing model
2025-08-19 19:07:40,394:INFO:Uploading results into container
2025-08-19 19:07:40,394:INFO:Uploading model into container now
2025-08-19 19:07:40,394:INFO:_master_model_container: 32
2025-08-19 19:07:40,394:INFO:_display_container: 33
2025-08-19 19:07:40,394:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:07:40,394:INFO:create_model() successfully completed......................................
2025-08-19 19:07:40,481:INFO:Initializing finalize_model()
2025-08-19 19:07:40,481:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:07:40,481:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:07:40,482:INFO:Initializing create_model()
2025-08-19 19:07:40,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:40,482:INFO:Checking exceptions
2025-08-19 19:07:40,483:INFO:Importing libraries
2025-08-19 19:07:40,483:INFO:Copying training dataset
2025-08-19 19:07:40,484:INFO:Defining folds
2025-08-19 19:07:40,484:INFO:Declaring metric variables
2025-08-19 19:07:40,484:INFO:Importing untrained model
2025-08-19 19:07:40,484:INFO:Declaring custom model
2025-08-19 19:07:40,484:INFO:Naive Bayes Imported successfully
2025-08-19 19:07:40,485:INFO:Cross validation set to False
2025-08-19 19:07:40,485:INFO:Fitting Model
2025-08-19 19:07:40,512:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:07:40,512:INFO:create_model() successfully completed......................................
2025-08-19 19:07:40,595:INFO:_master_model_container: 32
2025-08-19 19:07:40,595:INFO:_display_container: 33
2025-08-19 19:07:40,599:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:07:40,599:INFO:finalize_model() successfully completed......................................
2025-08-19 19:07:40,686:INFO:Initializing predict_model()
2025-08-19 19:07:40,686:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3200eb460>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x30bfb2dd0>)
2025-08-19 19:07:40,686:INFO:Checking exceptions
2025-08-19 19:07:40,686:INFO:Preloading libraries
2025-08-19 19:07:40,686:INFO:Set up data.
2025-08-19 19:07:40,691:INFO:Set up index.
2025-08-19 19:07:40,813:INFO:PyCaret ClassificationExperiment
2025-08-19 19:07:40,814:INFO:Logging name: clf-default-name
2025-08-19 19:07:40,814:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 19:07:40,814:INFO:version 3.3.2
2025-08-19 19:07:40,814:INFO:Initializing setup()
2025-08-19 19:07:40,814:INFO:self.USI: f993
2025-08-19 19:07:40,814:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 19:07:40,814:INFO:Checking environment
2025-08-19 19:07:40,814:INFO:python_version: 3.10.18
2025-08-19 19:07:40,814:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 19:07:40,814:INFO:machine: arm64
2025-08-19 19:07:40,814:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 19:07:40,814:INFO:Memory: svmem(total=17179869184, available=3108470784, percent=81.9, used=6043041792, free=344276992, active=2780332032, inactive=2741960704, wired=3262709760)
2025-08-19 19:07:40,814:INFO:Physical Core: 8
2025-08-19 19:07:40,814:INFO:Logical Core: 8
2025-08-19 19:07:40,814:INFO:Checking libraries
2025-08-19 19:07:40,814:INFO:System:
2025-08-19 19:07:40,814:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 19:07:40,814:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 19:07:40,814:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 19:07:40,814:INFO:PyCaret required dependencies:
2025-08-19 19:07:40,814:INFO:                 pip: 25.2
2025-08-19 19:07:40,814:INFO:          setuptools: 80.9.0
2025-08-19 19:07:40,814:INFO:             pycaret: 3.3.2
2025-08-19 19:07:40,814:INFO:             IPython: 8.37.0
2025-08-19 19:07:40,814:INFO:          ipywidgets: 8.1.7
2025-08-19 19:07:40,814:INFO:                tqdm: 4.67.1
2025-08-19 19:07:40,814:INFO:               numpy: 1.25.2
2025-08-19 19:07:40,814:INFO:              pandas: 2.1.4
2025-08-19 19:07:40,814:INFO:              jinja2: 3.1.6
2025-08-19 19:07:40,814:INFO:               scipy: 1.9.3
2025-08-19 19:07:40,814:INFO:              joblib: 1.3.2
2025-08-19 19:07:40,814:INFO:             sklearn: 1.4.2
2025-08-19 19:07:40,814:INFO:                pyod: 2.0.5
2025-08-19 19:07:40,814:INFO:            imblearn: 0.12.4
2025-08-19 19:07:40,814:INFO:   category_encoders: 2.7.0
2025-08-19 19:07:40,814:INFO:            lightgbm: 4.6.0
2025-08-19 19:07:40,814:INFO:               numba: 0.61.2
2025-08-19 19:07:40,814:INFO:            requests: 2.32.4
2025-08-19 19:07:40,814:INFO:          matplotlib: 3.7.2
2025-08-19 19:07:40,814:INFO:          scikitplot: 0.3.7
2025-08-19 19:07:40,814:INFO:         yellowbrick: 1.5
2025-08-19 19:07:40,815:INFO:              plotly: 5.24.1
2025-08-19 19:07:40,815:INFO:    plotly-resampler: Not installed
2025-08-19 19:07:40,815:INFO:             kaleido: 1.0.0
2025-08-19 19:07:40,815:INFO:           schemdraw: 0.15
2025-08-19 19:07:40,815:INFO:         statsmodels: 0.14.5
2025-08-19 19:07:40,815:INFO:              sktime: 0.26.0
2025-08-19 19:07:40,815:INFO:               tbats: 1.1.3
2025-08-19 19:07:40,815:INFO:            pmdarima: 2.0.4
2025-08-19 19:07:40,815:INFO:              psutil: 7.0.0
2025-08-19 19:07:40,815:INFO:          markupsafe: 3.0.2
2025-08-19 19:07:40,815:INFO:             pickle5: Not installed
2025-08-19 19:07:40,815:INFO:         cloudpickle: 3.1.1
2025-08-19 19:07:40,815:INFO:         deprecation: 2.1.0
2025-08-19 19:07:40,815:INFO:              xxhash: 3.5.0
2025-08-19 19:07:40,815:INFO:           wurlitzer: 3.1.1
2025-08-19 19:07:40,815:INFO:PyCaret optional dependencies:
2025-08-19 19:07:40,815:INFO:                shap: 0.48.0
2025-08-19 19:07:40,815:INFO:           interpret: Not installed
2025-08-19 19:07:40,815:INFO:                umap: Not installed
2025-08-19 19:07:40,815:INFO:     ydata_profiling: Not installed
2025-08-19 19:07:40,815:INFO:  explainerdashboard: Not installed
2025-08-19 19:07:40,815:INFO:             autoviz: Not installed
2025-08-19 19:07:40,815:INFO:           fairlearn: Not installed
2025-08-19 19:07:40,815:INFO:          deepchecks: Not installed
2025-08-19 19:07:40,815:INFO:             xgboost: 3.0.4
2025-08-19 19:07:40,815:INFO:            catboost: 1.2.8
2025-08-19 19:07:40,815:INFO:              kmodes: Not installed
2025-08-19 19:07:40,815:INFO:             mlxtend: 0.23.4
2025-08-19 19:07:40,815:INFO:       statsforecast: Not installed
2025-08-19 19:07:40,815:INFO:        tune_sklearn: Not installed
2025-08-19 19:07:40,815:INFO:                 ray: Not installed
2025-08-19 19:07:40,815:INFO:            hyperopt: Not installed
2025-08-19 19:07:40,815:INFO:              optuna: 4.4.0
2025-08-19 19:07:40,815:INFO:               skopt: Not installed
2025-08-19 19:07:40,815:INFO:              mlflow: Not installed
2025-08-19 19:07:40,815:INFO:              gradio: Not installed
2025-08-19 19:07:40,815:INFO:             fastapi: Not installed
2025-08-19 19:07:40,815:INFO:             uvicorn: Not installed
2025-08-19 19:07:40,815:INFO:              m2cgen: Not installed
2025-08-19 19:07:40,815:INFO:           evidently: Not installed
2025-08-19 19:07:40,815:INFO:               fugue: Not installed
2025-08-19 19:07:40,815:INFO:           streamlit: Not installed
2025-08-19 19:07:40,815:INFO:             prophet: Not installed
2025-08-19 19:07:40,815:INFO:None
2025-08-19 19:07:40,815:INFO:Set up data.
2025-08-19 19:07:40,820:INFO:Set up folding strategy.
2025-08-19 19:07:40,820:INFO:Set up train/test split.
2025-08-19 19:07:40,820:INFO:Set up data.
2025-08-19 19:07:40,824:INFO:Set up index.
2025-08-19 19:07:40,825:INFO:Assigning column types.
2025-08-19 19:07:40,827:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 19:07:40,852:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:07:40,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:07:40,868:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:07:40,870:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:07:40,895:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:07:40,896:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:07:40,912:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:07:40,913:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:07:40,913:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 19:07:40,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:07:40,954:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:07:40,956:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:07:40,981:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:07:40,997:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:07:40,998:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:07:40,999:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 19:07:41,040:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:07:41,041:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:07:41,082:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:07:41,084:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:07:41,085:INFO:Preparing preprocessing pipeline...
2025-08-19 19:07:41,085:INFO:Set up label encoding.
2025-08-19 19:07:41,085:INFO:Set up simple imputation.
2025-08-19 19:07:41,086:INFO:Set up encoding of categorical features.
2025-08-19 19:07:41,136:INFO:Finished creating preprocessing pipeline.
2025-08-19 19:07:41,140:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 19:07:41,140:INFO:Creating final display dataframe.
2025-08-19 19:07:41,282:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              f993
2025-08-19 19:07:41,322:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:07:41,324:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:07:41,365:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:07:41,366:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:07:41,367:INFO:setup() successfully completed in 0.56s...............
2025-08-19 19:07:41,370:INFO:Initializing compare_models()
2025-08-19 19:07:41,370:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 19:07:41,370:INFO:Checking exceptions
2025-08-19 19:07:41,372:INFO:Preparing display monitor
2025-08-19 19:07:41,373:INFO:Initializing Logistic Regression
2025-08-19 19:07:41,373:INFO:Total runtime is 7.351239522298177e-07 minutes
2025-08-19 19:07:41,373:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:41,373:INFO:Initializing create_model()
2025-08-19 19:07:41,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:41,373:INFO:Checking exceptions
2025-08-19 19:07:41,373:INFO:Importing libraries
2025-08-19 19:07:41,373:INFO:Copying training dataset
2025-08-19 19:07:41,375:INFO:Defining folds
2025-08-19 19:07:41,375:INFO:Declaring metric variables
2025-08-19 19:07:41,375:INFO:Importing untrained model
2025-08-19 19:07:41,375:INFO:Logistic Regression Imported successfully
2025-08-19 19:07:41,375:INFO:Starting cross validation
2025-08-19 19:07:41,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:41,940:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:42,006:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:42,019:INFO:Calculating mean and std
2025-08-19 19:07:42,020:INFO:Creating metrics dataframe
2025-08-19 19:07:42,021:INFO:Uploading results into container
2025-08-19 19:07:42,021:INFO:Uploading model into container now
2025-08-19 19:07:42,021:INFO:_master_model_container: 1
2025-08-19 19:07:42,021:INFO:_display_container: 2
2025-08-19 19:07:42,022:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:07:42,022:INFO:create_model() successfully completed......................................
2025-08-19 19:07:42,116:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:42,116:INFO:Creating metrics dataframe
2025-08-19 19:07:42,118:INFO:Initializing K Neighbors Classifier
2025-08-19 19:07:42,118:INFO:Total runtime is 0.012411952018737793 minutes
2025-08-19 19:07:42,118:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:42,118:INFO:Initializing create_model()
2025-08-19 19:07:42,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:42,118:INFO:Checking exceptions
2025-08-19 19:07:42,118:INFO:Importing libraries
2025-08-19 19:07:42,118:INFO:Copying training dataset
2025-08-19 19:07:42,120:INFO:Defining folds
2025-08-19 19:07:42,120:INFO:Declaring metric variables
2025-08-19 19:07:42,120:INFO:Importing untrained model
2025-08-19 19:07:42,120:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:07:42,120:INFO:Starting cross validation
2025-08-19 19:07:42,121:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:42,243:INFO:Calculating mean and std
2025-08-19 19:07:42,243:INFO:Creating metrics dataframe
2025-08-19 19:07:42,244:INFO:Uploading results into container
2025-08-19 19:07:42,244:INFO:Uploading model into container now
2025-08-19 19:07:42,244:INFO:_master_model_container: 2
2025-08-19 19:07:42,244:INFO:_display_container: 2
2025-08-19 19:07:42,245:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:07:42,245:INFO:create_model() successfully completed......................................
2025-08-19 19:07:42,328:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:42,328:INFO:Creating metrics dataframe
2025-08-19 19:07:42,330:INFO:Initializing Naive Bayes
2025-08-19 19:07:42,330:INFO:Total runtime is 0.015943185488382975 minutes
2025-08-19 19:07:42,330:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:42,330:INFO:Initializing create_model()
2025-08-19 19:07:42,330:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:42,330:INFO:Checking exceptions
2025-08-19 19:07:42,330:INFO:Importing libraries
2025-08-19 19:07:42,330:INFO:Copying training dataset
2025-08-19 19:07:42,331:INFO:Defining folds
2025-08-19 19:07:42,332:INFO:Declaring metric variables
2025-08-19 19:07:42,332:INFO:Importing untrained model
2025-08-19 19:07:42,332:INFO:Naive Bayes Imported successfully
2025-08-19 19:07:42,332:INFO:Starting cross validation
2025-08-19 19:07:42,333:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:42,440:INFO:Calculating mean and std
2025-08-19 19:07:42,440:INFO:Creating metrics dataframe
2025-08-19 19:07:42,441:INFO:Uploading results into container
2025-08-19 19:07:42,442:INFO:Uploading model into container now
2025-08-19 19:07:42,442:INFO:_master_model_container: 3
2025-08-19 19:07:42,442:INFO:_display_container: 2
2025-08-19 19:07:42,442:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:07:42,442:INFO:create_model() successfully completed......................................
2025-08-19 19:07:42,525:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:42,525:INFO:Creating metrics dataframe
2025-08-19 19:07:42,527:INFO:Initializing Decision Tree Classifier
2025-08-19 19:07:42,527:INFO:Total runtime is 0.01922850211461385 minutes
2025-08-19 19:07:42,527:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:42,527:INFO:Initializing create_model()
2025-08-19 19:07:42,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:42,527:INFO:Checking exceptions
2025-08-19 19:07:42,527:INFO:Importing libraries
2025-08-19 19:07:42,527:INFO:Copying training dataset
2025-08-19 19:07:42,529:INFO:Defining folds
2025-08-19 19:07:42,529:INFO:Declaring metric variables
2025-08-19 19:07:42,529:INFO:Importing untrained model
2025-08-19 19:07:42,529:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:07:42,529:INFO:Starting cross validation
2025-08-19 19:07:42,530:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:42,654:INFO:Calculating mean and std
2025-08-19 19:07:42,655:INFO:Creating metrics dataframe
2025-08-19 19:07:42,656:INFO:Uploading results into container
2025-08-19 19:07:42,656:INFO:Uploading model into container now
2025-08-19 19:07:42,656:INFO:_master_model_container: 4
2025-08-19 19:07:42,656:INFO:_display_container: 2
2025-08-19 19:07:42,657:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:07:42,657:INFO:create_model() successfully completed......................................
2025-08-19 19:07:42,742:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:42,743:INFO:Creating metrics dataframe
2025-08-19 19:07:42,744:INFO:Initializing SVM - Linear Kernel
2025-08-19 19:07:42,744:INFO:Total runtime is 0.02285605271657308 minutes
2025-08-19 19:07:42,744:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:42,745:INFO:Initializing create_model()
2025-08-19 19:07:42,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:42,745:INFO:Checking exceptions
2025-08-19 19:07:42,745:INFO:Importing libraries
2025-08-19 19:07:42,745:INFO:Copying training dataset
2025-08-19 19:07:42,747:INFO:Defining folds
2025-08-19 19:07:42,747:INFO:Declaring metric variables
2025-08-19 19:07:42,747:INFO:Importing untrained model
2025-08-19 19:07:42,747:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:07:42,747:INFO:Starting cross validation
2025-08-19 19:07:42,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:42,870:INFO:Calculating mean and std
2025-08-19 19:07:42,870:INFO:Creating metrics dataframe
2025-08-19 19:07:42,871:INFO:Uploading results into container
2025-08-19 19:07:42,872:INFO:Uploading model into container now
2025-08-19 19:07:42,872:INFO:_master_model_container: 5
2025-08-19 19:07:42,872:INFO:_display_container: 2
2025-08-19 19:07:42,872:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:07:42,872:INFO:create_model() successfully completed......................................
2025-08-19 19:07:42,956:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:42,956:INFO:Creating metrics dataframe
2025-08-19 19:07:42,958:INFO:Initializing Ridge Classifier
2025-08-19 19:07:42,958:INFO:Total runtime is 0.026410317420959475 minutes
2025-08-19 19:07:42,958:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:42,958:INFO:Initializing create_model()
2025-08-19 19:07:42,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:42,958:INFO:Checking exceptions
2025-08-19 19:07:42,958:INFO:Importing libraries
2025-08-19 19:07:42,958:INFO:Copying training dataset
2025-08-19 19:07:42,960:INFO:Defining folds
2025-08-19 19:07:42,960:INFO:Declaring metric variables
2025-08-19 19:07:42,960:INFO:Importing untrained model
2025-08-19 19:07:42,960:INFO:Ridge Classifier Imported successfully
2025-08-19 19:07:42,960:INFO:Starting cross validation
2025-08-19 19:07:42,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:43,066:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:07:43,086:INFO:Calculating mean and std
2025-08-19 19:07:43,086:INFO:Creating metrics dataframe
2025-08-19 19:07:43,088:INFO:Uploading results into container
2025-08-19 19:07:43,088:INFO:Uploading model into container now
2025-08-19 19:07:43,089:INFO:_master_model_container: 6
2025-08-19 19:07:43,089:INFO:_display_container: 2
2025-08-19 19:07:43,089:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:07:43,089:INFO:create_model() successfully completed......................................
2025-08-19 19:07:43,176:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:43,176:INFO:Creating metrics dataframe
2025-08-19 19:07:43,177:INFO:Initializing Random Forest Classifier
2025-08-19 19:07:43,177:INFO:Total runtime is 0.030073400338490805 minutes
2025-08-19 19:07:43,177:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:43,178:INFO:Initializing create_model()
2025-08-19 19:07:43,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:43,178:INFO:Checking exceptions
2025-08-19 19:07:43,178:INFO:Importing libraries
2025-08-19 19:07:43,178:INFO:Copying training dataset
2025-08-19 19:07:43,180:INFO:Defining folds
2025-08-19 19:07:43,180:INFO:Declaring metric variables
2025-08-19 19:07:43,180:INFO:Importing untrained model
2025-08-19 19:07:43,180:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:07:43,180:INFO:Starting cross validation
2025-08-19 19:07:43,181:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:43,925:INFO:Calculating mean and std
2025-08-19 19:07:43,926:INFO:Creating metrics dataframe
2025-08-19 19:07:43,928:INFO:Uploading results into container
2025-08-19 19:07:43,928:INFO:Uploading model into container now
2025-08-19 19:07:43,928:INFO:_master_model_container: 7
2025-08-19 19:07:43,928:INFO:_display_container: 2
2025-08-19 19:07:43,929:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:07:43,929:INFO:create_model() successfully completed......................................
2025-08-19 19:07:44,026:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:44,026:INFO:Creating metrics dataframe
2025-08-19 19:07:44,028:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 19:07:44,028:INFO:Total runtime is 0.04424730141957601 minutes
2025-08-19 19:07:44,028:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:44,028:INFO:Initializing create_model()
2025-08-19 19:07:44,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:44,028:INFO:Checking exceptions
2025-08-19 19:07:44,028:INFO:Importing libraries
2025-08-19 19:07:44,028:INFO:Copying training dataset
2025-08-19 19:07:44,030:INFO:Defining folds
2025-08-19 19:07:44,030:INFO:Declaring metric variables
2025-08-19 19:07:44,031:INFO:Importing untrained model
2025-08-19 19:07:44,031:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:07:44,031:INFO:Starting cross validation
2025-08-19 19:07:44,032:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:44,064:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,071:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,073:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,079:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,080:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,082:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,086:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,097:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,536:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,584:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:07:44,685:INFO:Calculating mean and std
2025-08-19 19:07:44,686:INFO:Creating metrics dataframe
2025-08-19 19:07:44,687:INFO:Uploading results into container
2025-08-19 19:07:44,687:INFO:Uploading model into container now
2025-08-19 19:07:44,687:INFO:_master_model_container: 8
2025-08-19 19:07:44,687:INFO:_display_container: 2
2025-08-19 19:07:44,687:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:07:44,687:INFO:create_model() successfully completed......................................
2025-08-19 19:07:44,786:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:44,786:INFO:Creating metrics dataframe
2025-08-19 19:07:44,788:INFO:Initializing Ada Boost Classifier
2025-08-19 19:07:44,788:INFO:Total runtime is 0.056922101974487306 minutes
2025-08-19 19:07:44,788:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:44,789:INFO:Initializing create_model()
2025-08-19 19:07:44,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:44,789:INFO:Checking exceptions
2025-08-19 19:07:44,789:INFO:Importing libraries
2025-08-19 19:07:44,789:INFO:Copying training dataset
2025-08-19 19:07:44,791:INFO:Defining folds
2025-08-19 19:07:44,791:INFO:Declaring metric variables
2025-08-19 19:07:44,791:INFO:Importing untrained model
2025-08-19 19:07:44,791:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:07:44,792:INFO:Starting cross validation
2025-08-19 19:07:44,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:44,830:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:44,833:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:44,863:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:44,866:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:44,897:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:44,913:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:44,915:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:44,922:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:45,157:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:45,221:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:07:45,427:INFO:Calculating mean and std
2025-08-19 19:07:45,428:INFO:Creating metrics dataframe
2025-08-19 19:07:45,429:INFO:Uploading results into container
2025-08-19 19:07:45,429:INFO:Uploading model into container now
2025-08-19 19:07:45,430:INFO:_master_model_container: 9
2025-08-19 19:07:45,430:INFO:_display_container: 2
2025-08-19 19:07:45,430:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:07:45,430:INFO:create_model() successfully completed......................................
2025-08-19 19:07:45,517:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:45,517:INFO:Creating metrics dataframe
2025-08-19 19:07:45,518:INFO:Initializing Gradient Boosting Classifier
2025-08-19 19:07:45,518:INFO:Total runtime is 0.06909029881159465 minutes
2025-08-19 19:07:45,518:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:45,519:INFO:Initializing create_model()
2025-08-19 19:07:45,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:45,519:INFO:Checking exceptions
2025-08-19 19:07:45,519:INFO:Importing libraries
2025-08-19 19:07:45,519:INFO:Copying training dataset
2025-08-19 19:07:45,520:INFO:Defining folds
2025-08-19 19:07:45,520:INFO:Declaring metric variables
2025-08-19 19:07:45,520:INFO:Importing untrained model
2025-08-19 19:07:45,521:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:07:45,521:INFO:Starting cross validation
2025-08-19 19:07:45,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:47,054:INFO:Calculating mean and std
2025-08-19 19:07:47,055:INFO:Creating metrics dataframe
2025-08-19 19:07:47,057:INFO:Uploading results into container
2025-08-19 19:07:47,057:INFO:Uploading model into container now
2025-08-19 19:07:47,057:INFO:_master_model_container: 10
2025-08-19 19:07:47,057:INFO:_display_container: 2
2025-08-19 19:07:47,057:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:07:47,057:INFO:create_model() successfully completed......................................
2025-08-19 19:07:47,144:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:47,144:INFO:Creating metrics dataframe
2025-08-19 19:07:47,146:INFO:Initializing Linear Discriminant Analysis
2025-08-19 19:07:47,146:INFO:Total runtime is 0.09621049960454306 minutes
2025-08-19 19:07:47,146:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:47,146:INFO:Initializing create_model()
2025-08-19 19:07:47,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:47,146:INFO:Checking exceptions
2025-08-19 19:07:47,146:INFO:Importing libraries
2025-08-19 19:07:47,146:INFO:Copying training dataset
2025-08-19 19:07:47,148:INFO:Defining folds
2025-08-19 19:07:47,148:INFO:Declaring metric variables
2025-08-19 19:07:47,148:INFO:Importing untrained model
2025-08-19 19:07:47,148:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:07:47,149:INFO:Starting cross validation
2025-08-19 19:07:47,149:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:47,310:INFO:Calculating mean and std
2025-08-19 19:07:47,310:INFO:Creating metrics dataframe
2025-08-19 19:07:47,311:INFO:Uploading results into container
2025-08-19 19:07:47,311:INFO:Uploading model into container now
2025-08-19 19:07:47,312:INFO:_master_model_container: 11
2025-08-19 19:07:47,312:INFO:_display_container: 2
2025-08-19 19:07:47,312:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:07:47,312:INFO:create_model() successfully completed......................................
2025-08-19 19:07:47,398:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:47,398:INFO:Creating metrics dataframe
2025-08-19 19:07:47,400:INFO:Initializing Extra Trees Classifier
2025-08-19 19:07:47,400:INFO:Total runtime is 0.10044613281885784 minutes
2025-08-19 19:07:47,400:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:47,400:INFO:Initializing create_model()
2025-08-19 19:07:47,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:47,400:INFO:Checking exceptions
2025-08-19 19:07:47,400:INFO:Importing libraries
2025-08-19 19:07:47,400:INFO:Copying training dataset
2025-08-19 19:07:47,402:INFO:Defining folds
2025-08-19 19:07:47,402:INFO:Declaring metric variables
2025-08-19 19:07:47,402:INFO:Importing untrained model
2025-08-19 19:07:47,402:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:07:47,402:INFO:Starting cross validation
2025-08-19 19:07:47,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:47,993:INFO:Calculating mean and std
2025-08-19 19:07:47,994:INFO:Creating metrics dataframe
2025-08-19 19:07:47,996:INFO:Uploading results into container
2025-08-19 19:07:47,996:INFO:Uploading model into container now
2025-08-19 19:07:47,996:INFO:_master_model_container: 12
2025-08-19 19:07:47,996:INFO:_display_container: 2
2025-08-19 19:07:47,996:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:07:47,997:INFO:create_model() successfully completed......................................
2025-08-19 19:07:48,126:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:48,126:INFO:Creating metrics dataframe
2025-08-19 19:07:48,128:INFO:Initializing Extreme Gradient Boosting
2025-08-19 19:07:48,128:INFO:Total runtime is 0.11258300145467123 minutes
2025-08-19 19:07:48,128:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:48,128:INFO:Initializing create_model()
2025-08-19 19:07:48,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:48,128:INFO:Checking exceptions
2025-08-19 19:07:48,128:INFO:Importing libraries
2025-08-19 19:07:48,128:INFO:Copying training dataset
2025-08-19 19:07:48,130:INFO:Defining folds
2025-08-19 19:07:48,130:INFO:Declaring metric variables
2025-08-19 19:07:48,131:INFO:Importing untrained model
2025-08-19 19:07:48,131:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:07:48,131:INFO:Starting cross validation
2025-08-19 19:07:48,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:48,428:INFO:Calculating mean and std
2025-08-19 19:07:48,428:INFO:Creating metrics dataframe
2025-08-19 19:07:48,429:INFO:Uploading results into container
2025-08-19 19:07:48,430:INFO:Uploading model into container now
2025-08-19 19:07:48,430:INFO:_master_model_container: 13
2025-08-19 19:07:48,430:INFO:_display_container: 2
2025-08-19 19:07:48,431:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:07:48,431:INFO:create_model() successfully completed......................................
2025-08-19 19:07:48,518:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:48,518:INFO:Creating metrics dataframe
2025-08-19 19:07:48,520:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 19:07:48,520:INFO:Total runtime is 0.1191215991973877 minutes
2025-08-19 19:07:48,520:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:48,521:INFO:Initializing create_model()
2025-08-19 19:07:48,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:48,521:INFO:Checking exceptions
2025-08-19 19:07:48,521:INFO:Importing libraries
2025-08-19 19:07:48,521:INFO:Copying training dataset
2025-08-19 19:07:48,523:INFO:Defining folds
2025-08-19 19:07:48,523:INFO:Declaring metric variables
2025-08-19 19:07:48,523:INFO:Importing untrained model
2025-08-19 19:07:48,523:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:07:48,523:INFO:Starting cross validation
2025-08-19 19:07:48,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:07:52,802:INFO:Calculating mean and std
2025-08-19 19:07:52,802:INFO:Creating metrics dataframe
2025-08-19 19:07:52,805:INFO:Uploading results into container
2025-08-19 19:07:52,806:INFO:Uploading model into container now
2025-08-19 19:07:52,806:INFO:_master_model_container: 14
2025-08-19 19:07:52,806:INFO:_display_container: 2
2025-08-19 19:07:52,807:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:07:52,807:INFO:create_model() successfully completed......................................
2025-08-19 19:07:52,930:INFO:SubProcess create_model() end ==================================
2025-08-19 19:07:52,931:INFO:Creating metrics dataframe
2025-08-19 19:07:52,934:INFO:Initializing CatBoost Classifier
2025-08-19 19:07:52,934:INFO:Total runtime is 0.19268091917037966 minutes
2025-08-19 19:07:52,934:INFO:SubProcess create_model() called ==================================
2025-08-19 19:07:52,934:INFO:Initializing create_model()
2025-08-19 19:07:52,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:07:52,934:INFO:Checking exceptions
2025-08-19 19:07:52,934:INFO:Importing libraries
2025-08-19 19:07:52,935:INFO:Copying training dataset
2025-08-19 19:07:52,938:INFO:Defining folds
2025-08-19 19:07:52,938:INFO:Declaring metric variables
2025-08-19 19:07:52,938:INFO:Importing untrained model
2025-08-19 19:07:52,939:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:07:52,939:INFO:Starting cross validation
2025-08-19 19:07:52,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:03,127:INFO:Calculating mean and std
2025-08-19 19:08:03,128:INFO:Creating metrics dataframe
2025-08-19 19:08:03,132:INFO:Uploading results into container
2025-08-19 19:08:03,132:INFO:Uploading model into container now
2025-08-19 19:08:03,133:INFO:_master_model_container: 15
2025-08-19 19:08:03,133:INFO:_display_container: 2
2025-08-19 19:08:03,133:INFO:<catboost.core.CatBoostClassifier object at 0x307e5c490>
2025-08-19 19:08:03,133:INFO:create_model() successfully completed......................................
2025-08-19 19:08:03,261:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:03,261:INFO:Creating metrics dataframe
2025-08-19 19:08:03,263:INFO:Initializing Dummy Classifier
2025-08-19 19:08:03,263:INFO:Total runtime is 0.3648360331853231 minutes
2025-08-19 19:08:03,263:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:03,263:INFO:Initializing create_model()
2025-08-19 19:08:03,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x3099180a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:03,264:INFO:Checking exceptions
2025-08-19 19:08:03,264:INFO:Importing libraries
2025-08-19 19:08:03,264:INFO:Copying training dataset
2025-08-19 19:08:03,266:INFO:Defining folds
2025-08-19 19:08:03,266:INFO:Declaring metric variables
2025-08-19 19:08:03,266:INFO:Importing untrained model
2025-08-19 19:08:03,266:INFO:Dummy Classifier Imported successfully
2025-08-19 19:08:03,266:INFO:Starting cross validation
2025-08-19 19:08:03,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:03,326:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,338:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,340:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,343:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,354:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,356:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,361:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,362:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,377:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,383:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:03,396:INFO:Calculating mean and std
2025-08-19 19:08:03,397:INFO:Creating metrics dataframe
2025-08-19 19:08:03,398:INFO:Uploading results into container
2025-08-19 19:08:03,398:INFO:Uploading model into container now
2025-08-19 19:08:03,399:INFO:_master_model_container: 16
2025-08-19 19:08:03,399:INFO:_display_container: 2
2025-08-19 19:08:03,399:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:08:03,399:INFO:create_model() successfully completed......................................
2025-08-19 19:08:03,486:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:03,486:INFO:Creating metrics dataframe
2025-08-19 19:08:03,488:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 19:08:03,489:INFO:Initializing create_model()
2025-08-19 19:08:03,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:03,489:INFO:Checking exceptions
2025-08-19 19:08:03,490:INFO:Importing libraries
2025-08-19 19:08:03,490:INFO:Copying training dataset
2025-08-19 19:08:03,492:INFO:Defining folds
2025-08-19 19:08:03,492:INFO:Declaring metric variables
2025-08-19 19:08:03,493:INFO:Importing untrained model
2025-08-19 19:08:03,493:INFO:Declaring custom model
2025-08-19 19:08:03,493:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:08:03,494:INFO:Cross validation set to False
2025-08-19 19:08:03,494:INFO:Fitting Model
2025-08-19 19:08:03,527:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:03,527:INFO:create_model() successfully completed......................................
2025-08-19 19:08:03,616:INFO:_master_model_container: 16
2025-08-19 19:08:03,616:INFO:_display_container: 2
2025-08-19 19:08:03,616:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:03,617:INFO:compare_models() successfully completed......................................
2025-08-19 19:08:03,617:INFO:Initializing create_model()
2025-08-19 19:08:03,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:03,617:INFO:Checking exceptions
2025-08-19 19:08:03,618:INFO:Importing libraries
2025-08-19 19:08:03,618:INFO:Copying training dataset
2025-08-19 19:08:03,620:INFO:Defining folds
2025-08-19 19:08:03,620:INFO:Declaring metric variables
2025-08-19 19:08:03,620:INFO:Importing untrained model
2025-08-19 19:08:03,621:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:08:03,621:INFO:Starting cross validation
2025-08-19 19:08:03,622:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:03,742:INFO:Calculating mean and std
2025-08-19 19:08:03,742:INFO:Creating metrics dataframe
2025-08-19 19:08:03,745:INFO:Finalizing model
2025-08-19 19:08:03,777:INFO:Uploading results into container
2025-08-19 19:08:03,777:INFO:Uploading model into container now
2025-08-19 19:08:03,777:INFO:_master_model_container: 17
2025-08-19 19:08:03,777:INFO:_display_container: 3
2025-08-19 19:08:03,778:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:03,778:INFO:create_model() successfully completed......................................
2025-08-19 19:08:03,859:INFO:Initializing finalize_model()
2025-08-19 19:08:03,859:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:03,859:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:03,861:INFO:Initializing create_model()
2025-08-19 19:08:03,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:03,861:INFO:Checking exceptions
2025-08-19 19:08:03,862:INFO:Importing libraries
2025-08-19 19:08:03,862:INFO:Copying training dataset
2025-08-19 19:08:03,862:INFO:Defining folds
2025-08-19 19:08:03,862:INFO:Declaring metric variables
2025-08-19 19:08:03,862:INFO:Importing untrained model
2025-08-19 19:08:03,862:INFO:Declaring custom model
2025-08-19 19:08:03,863:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:08:03,863:INFO:Cross validation set to False
2025-08-19 19:08:03,863:INFO:Fitting Model
2025-08-19 19:08:03,917:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:08:03,917:INFO:create_model() successfully completed......................................
2025-08-19 19:08:04,005:INFO:_master_model_container: 17
2025-08-19 19:08:04,006:INFO:_display_container: 3
2025-08-19 19:08:04,011:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:08:04,011:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:04,105:INFO:Initializing predict_model()
2025-08-19 19:08:04,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:04,105:INFO:Checking exceptions
2025-08-19 19:08:04,105:INFO:Preloading libraries
2025-08-19 19:08:04,105:INFO:Set up data.
2025-08-19 19:08:04,109:INFO:Set up index.
2025-08-19 19:08:04,217:INFO:Initializing create_model()
2025-08-19 19:08:04,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:04,217:INFO:Checking exceptions
2025-08-19 19:08:04,218:INFO:Importing libraries
2025-08-19 19:08:04,218:INFO:Copying training dataset
2025-08-19 19:08:04,220:INFO:Defining folds
2025-08-19 19:08:04,220:INFO:Declaring metric variables
2025-08-19 19:08:04,220:INFO:Importing untrained model
2025-08-19 19:08:04,220:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:08:04,220:INFO:Starting cross validation
2025-08-19 19:08:04,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:13,512:INFO:Calculating mean and std
2025-08-19 19:08:13,512:INFO:Creating metrics dataframe
2025-08-19 19:08:13,513:INFO:Finalizing model
2025-08-19 19:08:14,905:INFO:Uploading results into container
2025-08-19 19:08:14,905:INFO:Uploading model into container now
2025-08-19 19:08:14,906:INFO:_master_model_container: 18
2025-08-19 19:08:14,906:INFO:_display_container: 5
2025-08-19 19:08:14,906:INFO:<catboost.core.CatBoostClassifier object at 0x3202bb610>
2025-08-19 19:08:14,906:INFO:create_model() successfully completed......................................
2025-08-19 19:08:14,988:INFO:Initializing finalize_model()
2025-08-19 19:08:14,988:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=<catboost.core.CatBoostClassifier object at 0x3202bb610>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:14,988:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x3202bb610>
2025-08-19 19:08:14,989:INFO:Initializing create_model()
2025-08-19 19:08:14,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=<catboost.core.CatBoostClassifier object at 0x3202bb610>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:14,989:INFO:Checking exceptions
2025-08-19 19:08:14,991:INFO:Importing libraries
2025-08-19 19:08:14,991:INFO:Copying training dataset
2025-08-19 19:08:14,991:INFO:Defining folds
2025-08-19 19:08:14,991:INFO:Declaring metric variables
2025-08-19 19:08:14,991:INFO:Importing untrained model
2025-08-19 19:08:14,991:INFO:Declaring custom model
2025-08-19 19:08:14,991:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:08:14,992:INFO:Cross validation set to False
2025-08-19 19:08:14,992:INFO:Fitting Model
2025-08-19 19:08:16,562:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x31ff73f10>)],
         verbose=False)
2025-08-19 19:08:16,562:INFO:create_model() successfully completed......................................
2025-08-19 19:08:16,657:INFO:_master_model_container: 18
2025-08-19 19:08:16,657:INFO:_display_container: 5
2025-08-19 19:08:16,662:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x31ff73f10>)],
         verbose=False)
2025-08-19 19:08:16,662:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:16,750:INFO:Initializing predict_model()
2025-08-19 19:08:16,750:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x31ff73f10>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:16,750:INFO:Checking exceptions
2025-08-19 19:08:16,750:INFO:Preloading libraries
2025-08-19 19:08:16,750:INFO:Set up data.
2025-08-19 19:08:16,755:INFO:Set up index.
2025-08-19 19:08:16,858:INFO:Initializing create_model()
2025-08-19 19:08:16,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:16,858:INFO:Checking exceptions
2025-08-19 19:08:16,859:INFO:Importing libraries
2025-08-19 19:08:16,859:INFO:Copying training dataset
2025-08-19 19:08:16,861:INFO:Defining folds
2025-08-19 19:08:16,861:INFO:Declaring metric variables
2025-08-19 19:08:16,861:INFO:Importing untrained model
2025-08-19 19:08:16,861:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:08:16,861:INFO:Starting cross validation
2025-08-19 19:08:16,862:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:17,427:INFO:Calculating mean and std
2025-08-19 19:08:17,427:INFO:Creating metrics dataframe
2025-08-19 19:08:17,428:INFO:Finalizing model
2025-08-19 19:08:17,547:INFO:Uploading results into container
2025-08-19 19:08:17,548:INFO:Uploading model into container now
2025-08-19 19:08:17,548:INFO:_master_model_container: 19
2025-08-19 19:08:17,548:INFO:_display_container: 7
2025-08-19 19:08:17,548:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:08:17,548:INFO:create_model() successfully completed......................................
2025-08-19 19:08:17,633:INFO:Initializing finalize_model()
2025-08-19 19:08:17,633:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:17,633:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:08:17,635:INFO:Initializing create_model()
2025-08-19 19:08:17,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:17,635:INFO:Checking exceptions
2025-08-19 19:08:17,636:INFO:Importing libraries
2025-08-19 19:08:17,636:INFO:Copying training dataset
2025-08-19 19:08:17,636:INFO:Defining folds
2025-08-19 19:08:17,636:INFO:Declaring metric variables
2025-08-19 19:08:17,636:INFO:Importing untrained model
2025-08-19 19:08:17,636:INFO:Declaring custom model
2025-08-19 19:08:17,637:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:08:17,637:INFO:Cross validation set to False
2025-08-19 19:08:17,637:INFO:Fitting Model
2025-08-19 19:08:17,773:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:08:17,773:INFO:create_model() successfully completed......................................
2025-08-19 19:08:17,854:INFO:_master_model_container: 19
2025-08-19 19:08:17,855:INFO:_display_container: 7
2025-08-19 19:08:17,860:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:08:17,860:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:17,950:INFO:Initializing predict_model()
2025-08-19 19:08:17,950:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:17,950:INFO:Checking exceptions
2025-08-19 19:08:17,950:INFO:Preloading libraries
2025-08-19 19:08:17,950:INFO:Set up data.
2025-08-19 19:08:17,954:INFO:Set up index.
2025-08-19 19:08:18,085:INFO:Initializing create_model()
2025-08-19 19:08:18,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:18,085:INFO:Checking exceptions
2025-08-19 19:08:18,086:INFO:Importing libraries
2025-08-19 19:08:18,086:INFO:Copying training dataset
2025-08-19 19:08:18,088:INFO:Defining folds
2025-08-19 19:08:18,088:INFO:Declaring metric variables
2025-08-19 19:08:18,088:INFO:Importing untrained model
2025-08-19 19:08:18,088:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:08:18,088:INFO:Starting cross validation
2025-08-19 19:08:18,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:18,121:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,124:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,129:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,145:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,146:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,158:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,167:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,203:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,319:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,319:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,490:INFO:Calculating mean and std
2025-08-19 19:08:18,491:INFO:Creating metrics dataframe
2025-08-19 19:08:18,492:INFO:Finalizing model
2025-08-19 19:08:18,519:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,658:INFO:Uploading results into container
2025-08-19 19:08:18,659:INFO:Uploading model into container now
2025-08-19 19:08:18,659:INFO:_master_model_container: 20
2025-08-19 19:08:18,659:INFO:_display_container: 9
2025-08-19 19:08:18,659:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:08:18,659:INFO:create_model() successfully completed......................................
2025-08-19 19:08:18,743:INFO:Initializing finalize_model()
2025-08-19 19:08:18,743:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:18,743:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:08:18,744:INFO:Initializing create_model()
2025-08-19 19:08:18,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:18,744:INFO:Checking exceptions
2025-08-19 19:08:18,745:INFO:Importing libraries
2025-08-19 19:08:18,745:INFO:Copying training dataset
2025-08-19 19:08:18,745:INFO:Defining folds
2025-08-19 19:08:18,745:INFO:Declaring metric variables
2025-08-19 19:08:18,745:INFO:Importing untrained model
2025-08-19 19:08:18,745:INFO:Declaring custom model
2025-08-19 19:08:18,746:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:08:18,746:INFO:Cross validation set to False
2025-08-19 19:08:18,746:INFO:Fitting Model
2025-08-19 19:08:18,768:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:18,936:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:08:18,936:INFO:create_model() successfully completed......................................
2025-08-19 19:08:19,019:INFO:_master_model_container: 20
2025-08-19 19:08:19,019:INFO:_display_container: 9
2025-08-19 19:08:19,024:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:08:19,024:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:19,112:INFO:Initializing predict_model()
2025-08-19 19:08:19,113:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:19,113:INFO:Checking exceptions
2025-08-19 19:08:19,113:INFO:Preloading libraries
2025-08-19 19:08:19,113:INFO:Set up data.
2025-08-19 19:08:19,117:INFO:Set up index.
2025-08-19 19:08:19,228:INFO:Initializing create_model()
2025-08-19 19:08:19,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:19,228:INFO:Checking exceptions
2025-08-19 19:08:19,229:INFO:Importing libraries
2025-08-19 19:08:19,229:INFO:Copying training dataset
2025-08-19 19:08:19,231:INFO:Defining folds
2025-08-19 19:08:19,231:INFO:Declaring metric variables
2025-08-19 19:08:19,231:INFO:Importing untrained model
2025-08-19 19:08:19,232:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:08:19,232:INFO:Starting cross validation
2025-08-19 19:08:19,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:22,783:INFO:Calculating mean and std
2025-08-19 19:08:22,783:INFO:Creating metrics dataframe
2025-08-19 19:08:22,785:INFO:Finalizing model
2025-08-19 19:08:22,811:INFO:[LightGBM] [Info] Number of positive: 480, number of negative: 288
2025-08-19 19:08:22,812:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000350 seconds.
2025-08-19 19:08:22,812:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:08:22,812:INFO:[LightGBM] [Info] Total Bins 6375
2025-08-19 19:08:22,812:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 19:08:22,812:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.625000 -> initscore=0.510826
2025-08-19 19:08:22,812:INFO:[LightGBM] [Info] Start training from score 0.510826
2025-08-19 19:08:22,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:22,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,293:INFO:Uploading results into container
2025-08-19 19:08:23,293:INFO:Uploading model into container now
2025-08-19 19:08:23,293:INFO:_master_model_container: 21
2025-08-19 19:08:23,293:INFO:_display_container: 11
2025-08-19 19:08:23,294:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:08:23,294:INFO:create_model() successfully completed......................................
2025-08-19 19:08:23,376:INFO:Initializing finalize_model()
2025-08-19 19:08:23,376:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:23,377:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:08:23,378:INFO:Initializing create_model()
2025-08-19 19:08:23,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:23,378:INFO:Checking exceptions
2025-08-19 19:08:23,379:INFO:Importing libraries
2025-08-19 19:08:23,379:INFO:Copying training dataset
2025-08-19 19:08:23,379:INFO:Defining folds
2025-08-19 19:08:23,379:INFO:Declaring metric variables
2025-08-19 19:08:23,379:INFO:Importing untrained model
2025-08-19 19:08:23,379:INFO:Declaring custom model
2025-08-19 19:08:23,380:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:08:23,381:INFO:Cross validation set to False
2025-08-19 19:08:23,381:INFO:Fitting Model
2025-08-19 19:08:23,407:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 19:08:23,407:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000383 seconds.
2025-08-19 19:08:23,407:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:08:23,407:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 19:08:23,407:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 19:08:23,408:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 19:08:23,408:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 19:08:23,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:08:23,904:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:08:23,904:INFO:create_model() successfully completed......................................
2025-08-19 19:08:23,985:INFO:_master_model_container: 21
2025-08-19 19:08:23,985:INFO:_display_container: 11
2025-08-19 19:08:23,991:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:08:23,991:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:24,078:INFO:Initializing predict_model()
2025-08-19 19:08:24,078:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:24,078:INFO:Checking exceptions
2025-08-19 19:08:24,078:INFO:Preloading libraries
2025-08-19 19:08:24,079:INFO:Set up data.
2025-08-19 19:08:24,083:INFO:Set up index.
2025-08-19 19:08:24,186:INFO:Initializing create_model()
2025-08-19 19:08:24,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:24,186:INFO:Checking exceptions
2025-08-19 19:08:24,187:INFO:Importing libraries
2025-08-19 19:08:24,187:INFO:Copying training dataset
2025-08-19 19:08:24,189:INFO:Defining folds
2025-08-19 19:08:24,189:INFO:Declaring metric variables
2025-08-19 19:08:24,189:INFO:Importing untrained model
2025-08-19 19:08:24,189:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:08:24,190:INFO:Starting cross validation
2025-08-19 19:08:24,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:25,427:INFO:Calculating mean and std
2025-08-19 19:08:25,428:INFO:Creating metrics dataframe
2025-08-19 19:08:25,429:INFO:Finalizing model
2025-08-19 19:08:26,022:INFO:Uploading results into container
2025-08-19 19:08:26,022:INFO:Uploading model into container now
2025-08-19 19:08:26,024:INFO:_master_model_container: 22
2025-08-19 19:08:26,024:INFO:_display_container: 13
2025-08-19 19:08:26,024:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:08:26,024:INFO:create_model() successfully completed......................................
2025-08-19 19:08:26,107:INFO:Initializing finalize_model()
2025-08-19 19:08:26,107:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:26,108:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:08:26,109:INFO:Initializing create_model()
2025-08-19 19:08:26,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:26,109:INFO:Checking exceptions
2025-08-19 19:08:26,110:INFO:Importing libraries
2025-08-19 19:08:26,110:INFO:Copying training dataset
2025-08-19 19:08:26,110:INFO:Defining folds
2025-08-19 19:08:26,110:INFO:Declaring metric variables
2025-08-19 19:08:26,110:INFO:Importing untrained model
2025-08-19 19:08:26,110:INFO:Declaring custom model
2025-08-19 19:08:26,111:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:08:26,111:INFO:Cross validation set to False
2025-08-19 19:08:26,111:INFO:Fitting Model
2025-08-19 19:08:26,829:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:08:26,830:INFO:create_model() successfully completed......................................
2025-08-19 19:08:26,917:INFO:_master_model_container: 22
2025-08-19 19:08:26,918:INFO:_display_container: 13
2025-08-19 19:08:26,923:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:08:26,923:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:27,016:INFO:Initializing predict_model()
2025-08-19 19:08:27,016:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:27,016:INFO:Checking exceptions
2025-08-19 19:08:27,016:INFO:Preloading libraries
2025-08-19 19:08:27,017:INFO:Set up data.
2025-08-19 19:08:27,021:INFO:Set up index.
2025-08-19 19:08:27,125:INFO:Initializing create_model()
2025-08-19 19:08:27,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:27,125:INFO:Checking exceptions
2025-08-19 19:08:27,126:INFO:Importing libraries
2025-08-19 19:08:27,126:INFO:Copying training dataset
2025-08-19 19:08:27,128:INFO:Defining folds
2025-08-19 19:08:27,128:INFO:Declaring metric variables
2025-08-19 19:08:27,128:INFO:Importing untrained model
2025-08-19 19:08:27,129:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:08:27,129:INFO:Starting cross validation
2025-08-19 19:08:27,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:27,324:INFO:Calculating mean and std
2025-08-19 19:08:27,325:INFO:Creating metrics dataframe
2025-08-19 19:08:27,326:INFO:Finalizing model
2025-08-19 19:08:27,471:INFO:Uploading results into container
2025-08-19 19:08:27,472:INFO:Uploading model into container now
2025-08-19 19:08:27,472:INFO:_master_model_container: 23
2025-08-19 19:08:27,472:INFO:_display_container: 15
2025-08-19 19:08:27,473:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:08:27,473:INFO:create_model() successfully completed......................................
2025-08-19 19:08:27,555:INFO:Initializing finalize_model()
2025-08-19 19:08:27,555:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:27,556:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:08:27,557:INFO:Initializing create_model()
2025-08-19 19:08:27,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:27,558:INFO:Checking exceptions
2025-08-19 19:08:27,558:INFO:Importing libraries
2025-08-19 19:08:27,558:INFO:Copying training dataset
2025-08-19 19:08:27,559:INFO:Defining folds
2025-08-19 19:08:27,559:INFO:Declaring metric variables
2025-08-19 19:08:27,559:INFO:Importing untrained model
2025-08-19 19:08:27,559:INFO:Declaring custom model
2025-08-19 19:08:27,559:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:08:27,560:INFO:Cross validation set to False
2025-08-19 19:08:27,560:INFO:Fitting Model
2025-08-19 19:08:27,723:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:08:27,723:INFO:create_model() successfully completed......................................
2025-08-19 19:08:27,807:INFO:_master_model_container: 23
2025-08-19 19:08:27,807:INFO:_display_container: 15
2025-08-19 19:08:27,814:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:08:27,814:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:27,902:INFO:Initializing predict_model()
2025-08-19 19:08:27,903:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:27,903:INFO:Checking exceptions
2025-08-19 19:08:27,903:INFO:Preloading libraries
2025-08-19 19:08:27,903:INFO:Set up data.
2025-08-19 19:08:27,907:INFO:Set up index.
2025-08-19 19:08:28,012:INFO:Initializing create_model()
2025-08-19 19:08:28,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:28,012:INFO:Checking exceptions
2025-08-19 19:08:28,013:INFO:Importing libraries
2025-08-19 19:08:28,013:INFO:Copying training dataset
2025-08-19 19:08:28,015:INFO:Defining folds
2025-08-19 19:08:28,015:INFO:Declaring metric variables
2025-08-19 19:08:28,015:INFO:Importing untrained model
2025-08-19 19:08:28,016:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:08:28,016:INFO:Starting cross validation
2025-08-19 19:08:28,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:28,441:INFO:Calculating mean and std
2025-08-19 19:08:28,442:INFO:Creating metrics dataframe
2025-08-19 19:08:28,443:INFO:Finalizing model
2025-08-19 19:08:28,536:INFO:Uploading results into container
2025-08-19 19:08:28,537:INFO:Uploading model into container now
2025-08-19 19:08:28,537:INFO:_master_model_container: 24
2025-08-19 19:08:28,537:INFO:_display_container: 17
2025-08-19 19:08:28,537:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:08:28,537:INFO:create_model() successfully completed......................................
2025-08-19 19:08:28,621:INFO:Initializing finalize_model()
2025-08-19 19:08:28,621:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:28,621:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:08:28,622:INFO:Initializing create_model()
2025-08-19 19:08:28,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:28,622:INFO:Checking exceptions
2025-08-19 19:08:28,623:INFO:Importing libraries
2025-08-19 19:08:28,623:INFO:Copying training dataset
2025-08-19 19:08:28,623:INFO:Defining folds
2025-08-19 19:08:28,624:INFO:Declaring metric variables
2025-08-19 19:08:28,624:INFO:Importing untrained model
2025-08-19 19:08:28,624:INFO:Declaring custom model
2025-08-19 19:08:28,624:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:08:28,625:INFO:Cross validation set to False
2025-08-19 19:08:28,625:INFO:Fitting Model
2025-08-19 19:08:28,725:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:08:28,725:INFO:create_model() successfully completed......................................
2025-08-19 19:08:28,806:INFO:_master_model_container: 24
2025-08-19 19:08:28,806:INFO:_display_container: 17
2025-08-19 19:08:28,811:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:08:28,811:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:28,898:INFO:Initializing predict_model()
2025-08-19 19:08:28,898:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:28,898:INFO:Checking exceptions
2025-08-19 19:08:28,898:INFO:Preloading libraries
2025-08-19 19:08:28,898:INFO:Set up data.
2025-08-19 19:08:28,902:INFO:Set up index.
2025-08-19 19:08:29,038:INFO:Initializing create_model()
2025-08-19 19:08:29,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:29,038:INFO:Checking exceptions
2025-08-19 19:08:29,039:INFO:Importing libraries
2025-08-19 19:08:29,039:INFO:Copying training dataset
2025-08-19 19:08:29,040:INFO:Defining folds
2025-08-19 19:08:29,040:INFO:Declaring metric variables
2025-08-19 19:08:29,041:INFO:Importing untrained model
2025-08-19 19:08:29,041:INFO:Dummy Classifier Imported successfully
2025-08-19 19:08:29,041:INFO:Starting cross validation
2025-08-19 19:08:29,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:29,087:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,095:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,100:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,102:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,105:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,110:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,128:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,134:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,135:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,139:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,147:INFO:Calculating mean and std
2025-08-19 19:08:29,147:INFO:Creating metrics dataframe
2025-08-19 19:08:29,148:INFO:Finalizing model
2025-08-19 19:08:29,169:INFO:Uploading results into container
2025-08-19 19:08:29,169:INFO:Uploading model into container now
2025-08-19 19:08:29,170:INFO:_master_model_container: 25
2025-08-19 19:08:29,170:INFO:_display_container: 19
2025-08-19 19:08:29,170:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:08:29,170:INFO:create_model() successfully completed......................................
2025-08-19 19:08:29,252:INFO:Initializing finalize_model()
2025-08-19 19:08:29,252:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:29,252:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:08:29,253:INFO:Initializing create_model()
2025-08-19 19:08:29,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:29,253:INFO:Checking exceptions
2025-08-19 19:08:29,254:INFO:Importing libraries
2025-08-19 19:08:29,255:INFO:Copying training dataset
2025-08-19 19:08:29,255:INFO:Defining folds
2025-08-19 19:08:29,255:INFO:Declaring metric variables
2025-08-19 19:08:29,255:INFO:Importing untrained model
2025-08-19 19:08:29,255:INFO:Declaring custom model
2025-08-19 19:08:29,255:INFO:Dummy Classifier Imported successfully
2025-08-19 19:08:29,256:INFO:Cross validation set to False
2025-08-19 19:08:29,256:INFO:Fitting Model
2025-08-19 19:08:29,283:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:08:29,283:INFO:create_model() successfully completed......................................
2025-08-19 19:08:29,364:INFO:_master_model_container: 25
2025-08-19 19:08:29,364:INFO:_display_container: 19
2025-08-19 19:08:29,369:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:08:29,369:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:29,462:INFO:Initializing predict_model()
2025-08-19 19:08:29,462:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:29,462:INFO:Checking exceptions
2025-08-19 19:08:29,462:INFO:Preloading libraries
2025-08-19 19:08:29,462:INFO:Set up data.
2025-08-19 19:08:29,467:INFO:Set up index.
2025-08-19 19:08:29,482:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:29,573:INFO:Initializing create_model()
2025-08-19 19:08:29,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:29,573:INFO:Checking exceptions
2025-08-19 19:08:29,574:INFO:Importing libraries
2025-08-19 19:08:29,575:INFO:Copying training dataset
2025-08-19 19:08:29,577:INFO:Defining folds
2025-08-19 19:08:29,577:INFO:Declaring metric variables
2025-08-19 19:08:29,577:INFO:Importing untrained model
2025-08-19 19:08:29,577:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:08:29,578:INFO:Starting cross validation
2025-08-19 19:08:29,578:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:29,699:INFO:Calculating mean and std
2025-08-19 19:08:29,699:INFO:Creating metrics dataframe
2025-08-19 19:08:29,700:INFO:Finalizing model
2025-08-19 19:08:29,721:INFO:Uploading results into container
2025-08-19 19:08:29,721:INFO:Uploading model into container now
2025-08-19 19:08:29,722:INFO:_master_model_container: 26
2025-08-19 19:08:29,722:INFO:_display_container: 21
2025-08-19 19:08:29,722:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:08:29,722:INFO:create_model() successfully completed......................................
2025-08-19 19:08:29,803:INFO:Initializing finalize_model()
2025-08-19 19:08:29,803:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:29,803:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:08:29,805:INFO:Initializing create_model()
2025-08-19 19:08:29,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:29,805:INFO:Checking exceptions
2025-08-19 19:08:29,805:INFO:Importing libraries
2025-08-19 19:08:29,805:INFO:Copying training dataset
2025-08-19 19:08:29,806:INFO:Defining folds
2025-08-19 19:08:29,806:INFO:Declaring metric variables
2025-08-19 19:08:29,806:INFO:Importing untrained model
2025-08-19 19:08:29,806:INFO:Declaring custom model
2025-08-19 19:08:29,806:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:08:29,807:INFO:Cross validation set to False
2025-08-19 19:08:29,807:INFO:Fitting Model
2025-08-19 19:08:29,832:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:08:29,832:INFO:create_model() successfully completed......................................
2025-08-19 19:08:29,913:INFO:_master_model_container: 26
2025-08-19 19:08:29,914:INFO:_display_container: 21
2025-08-19 19:08:29,918:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:08:29,918:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:30,005:INFO:Initializing predict_model()
2025-08-19 19:08:30,005:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:30,005:INFO:Checking exceptions
2025-08-19 19:08:30,005:INFO:Preloading libraries
2025-08-19 19:08:30,005:INFO:Set up data.
2025-08-19 19:08:30,009:INFO:Set up index.
2025-08-19 19:08:30,116:INFO:Initializing create_model()
2025-08-19 19:08:30,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:30,116:INFO:Checking exceptions
2025-08-19 19:08:30,117:INFO:Importing libraries
2025-08-19 19:08:30,117:INFO:Copying training dataset
2025-08-19 19:08:30,119:INFO:Defining folds
2025-08-19 19:08:30,119:INFO:Declaring metric variables
2025-08-19 19:08:30,119:INFO:Importing untrained model
2025-08-19 19:08:30,119:INFO:Logistic Regression Imported successfully
2025-08-19 19:08:30,119:INFO:Starting cross validation
2025-08-19 19:08:30,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:30,195:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:30,226:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:30,234:INFO:Calculating mean and std
2025-08-19 19:08:30,235:INFO:Creating metrics dataframe
2025-08-19 19:08:30,236:INFO:Finalizing model
2025-08-19 19:08:30,274:INFO:Uploading results into container
2025-08-19 19:08:30,275:INFO:Uploading model into container now
2025-08-19 19:08:30,275:INFO:_master_model_container: 27
2025-08-19 19:08:30,275:INFO:_display_container: 23
2025-08-19 19:08:30,276:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:08:30,276:INFO:create_model() successfully completed......................................
2025-08-19 19:08:30,370:INFO:Initializing finalize_model()
2025-08-19 19:08:30,370:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:30,370:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:08:30,372:INFO:Initializing create_model()
2025-08-19 19:08:30,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:30,372:INFO:Checking exceptions
2025-08-19 19:08:30,372:INFO:Importing libraries
2025-08-19 19:08:30,373:INFO:Copying training dataset
2025-08-19 19:08:30,373:INFO:Defining folds
2025-08-19 19:08:30,373:INFO:Declaring metric variables
2025-08-19 19:08:30,373:INFO:Importing untrained model
2025-08-19 19:08:30,373:INFO:Declaring custom model
2025-08-19 19:08:30,373:INFO:Logistic Regression Imported successfully
2025-08-19 19:08:30,377:INFO:Cross validation set to False
2025-08-19 19:08:30,377:INFO:Fitting Model
2025-08-19 19:08:30,441:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:08:30,441:INFO:create_model() successfully completed......................................
2025-08-19 19:08:30,547:INFO:_master_model_container: 27
2025-08-19 19:08:30,548:INFO:_display_container: 23
2025-08-19 19:08:30,559:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:08:30,559:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:30,662:INFO:Initializing predict_model()
2025-08-19 19:08:30,662:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:30,662:INFO:Checking exceptions
2025-08-19 19:08:30,662:INFO:Preloading libraries
2025-08-19 19:08:30,662:INFO:Set up data.
2025-08-19 19:08:30,666:INFO:Set up index.
2025-08-19 19:08:30,807:INFO:Initializing create_model()
2025-08-19 19:08:30,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:30,808:INFO:Checking exceptions
2025-08-19 19:08:30,809:INFO:Importing libraries
2025-08-19 19:08:30,809:INFO:Copying training dataset
2025-08-19 19:08:30,811:INFO:Defining folds
2025-08-19 19:08:30,811:INFO:Declaring metric variables
2025-08-19 19:08:30,811:INFO:Importing untrained model
2025-08-19 19:08:30,811:INFO:Ridge Classifier Imported successfully
2025-08-19 19:08:30,811:INFO:Starting cross validation
2025-08-19 19:08:30,812:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:30,923:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:30,936:INFO:Calculating mean and std
2025-08-19 19:08:30,936:INFO:Creating metrics dataframe
2025-08-19 19:08:30,937:INFO:Finalizing model
2025-08-19 19:08:30,974:INFO:Uploading results into container
2025-08-19 19:08:30,974:INFO:Uploading model into container now
2025-08-19 19:08:30,975:INFO:_master_model_container: 28
2025-08-19 19:08:30,975:INFO:_display_container: 25
2025-08-19 19:08:30,975:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:08:30,975:INFO:create_model() successfully completed......................................
2025-08-19 19:08:31,114:INFO:Initializing finalize_model()
2025-08-19 19:08:31,114:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:31,114:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:08:31,115:INFO:Initializing create_model()
2025-08-19 19:08:31,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:31,116:INFO:Checking exceptions
2025-08-19 19:08:31,116:INFO:Importing libraries
2025-08-19 19:08:31,116:INFO:Copying training dataset
2025-08-19 19:08:31,116:INFO:Defining folds
2025-08-19 19:08:31,117:INFO:Declaring metric variables
2025-08-19 19:08:31,117:INFO:Importing untrained model
2025-08-19 19:08:31,117:INFO:Declaring custom model
2025-08-19 19:08:31,117:INFO:Ridge Classifier Imported successfully
2025-08-19 19:08:31,118:INFO:Cross validation set to False
2025-08-19 19:08:31,118:INFO:Fitting Model
2025-08-19 19:08:31,163:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:08:31,163:INFO:create_model() successfully completed......................................
2025-08-19 19:08:31,262:INFO:_master_model_container: 28
2025-08-19 19:08:31,262:INFO:_display_container: 25
2025-08-19 19:08:31,266:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:08:31,266:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:31,380:INFO:Initializing predict_model()
2025-08-19 19:08:31,380:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:31,380:INFO:Checking exceptions
2025-08-19 19:08:31,380:INFO:Preloading libraries
2025-08-19 19:08:31,380:INFO:Set up data.
2025-08-19 19:08:31,384:INFO:Set up index.
2025-08-19 19:08:31,509:INFO:Initializing create_model()
2025-08-19 19:08:31,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:31,509:INFO:Checking exceptions
2025-08-19 19:08:31,510:INFO:Importing libraries
2025-08-19 19:08:31,510:INFO:Copying training dataset
2025-08-19 19:08:31,512:INFO:Defining folds
2025-08-19 19:08:31,512:INFO:Declaring metric variables
2025-08-19 19:08:31,512:INFO:Importing untrained model
2025-08-19 19:08:31,512:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:08:31,512:INFO:Starting cross validation
2025-08-19 19:08:31,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:31,619:INFO:Calculating mean and std
2025-08-19 19:08:31,619:INFO:Creating metrics dataframe
2025-08-19 19:08:31,620:INFO:Finalizing model
2025-08-19 19:08:31,645:INFO:Uploading results into container
2025-08-19 19:08:31,646:INFO:Uploading model into container now
2025-08-19 19:08:31,647:INFO:_master_model_container: 29
2025-08-19 19:08:31,647:INFO:_display_container: 27
2025-08-19 19:08:31,648:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:08:31,648:INFO:create_model() successfully completed......................................
2025-08-19 19:08:31,763:INFO:Initializing finalize_model()
2025-08-19 19:08:31,763:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:31,763:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:08:31,765:INFO:Initializing create_model()
2025-08-19 19:08:31,765:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:31,765:INFO:Checking exceptions
2025-08-19 19:08:31,766:INFO:Importing libraries
2025-08-19 19:08:31,766:INFO:Copying training dataset
2025-08-19 19:08:31,766:INFO:Defining folds
2025-08-19 19:08:31,766:INFO:Declaring metric variables
2025-08-19 19:08:31,766:INFO:Importing untrained model
2025-08-19 19:08:31,766:INFO:Declaring custom model
2025-08-19 19:08:31,766:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:08:31,767:INFO:Cross validation set to False
2025-08-19 19:08:31,767:INFO:Fitting Model
2025-08-19 19:08:31,818:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:08:31,818:INFO:create_model() successfully completed......................................
2025-08-19 19:08:31,924:INFO:_master_model_container: 29
2025-08-19 19:08:31,925:INFO:_display_container: 27
2025-08-19 19:08:31,935:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:08:31,935:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:32,074:INFO:Initializing predict_model()
2025-08-19 19:08:32,074:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:32,074:INFO:Checking exceptions
2025-08-19 19:08:32,074:INFO:Preloading libraries
2025-08-19 19:08:32,074:INFO:Set up data.
2025-08-19 19:08:32,079:INFO:Set up index.
2025-08-19 19:08:32,199:INFO:Initializing create_model()
2025-08-19 19:08:32,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:32,199:INFO:Checking exceptions
2025-08-19 19:08:32,200:INFO:Importing libraries
2025-08-19 19:08:32,200:INFO:Copying training dataset
2025-08-19 19:08:32,202:INFO:Defining folds
2025-08-19 19:08:32,202:INFO:Declaring metric variables
2025-08-19 19:08:32,203:INFO:Importing untrained model
2025-08-19 19:08:32,203:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:08:32,203:INFO:Starting cross validation
2025-08-19 19:08:32,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:32,352:INFO:Calculating mean and std
2025-08-19 19:08:32,353:INFO:Creating metrics dataframe
2025-08-19 19:08:32,354:INFO:Finalizing model
2025-08-19 19:08:32,379:INFO:Uploading results into container
2025-08-19 19:08:32,379:INFO:Uploading model into container now
2025-08-19 19:08:32,380:INFO:_master_model_container: 30
2025-08-19 19:08:32,380:INFO:_display_container: 29
2025-08-19 19:08:32,380:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:08:32,380:INFO:create_model() successfully completed......................................
2025-08-19 19:08:32,473:INFO:Initializing finalize_model()
2025-08-19 19:08:32,473:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:32,474:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:08:32,475:INFO:Initializing create_model()
2025-08-19 19:08:32,475:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:32,475:INFO:Checking exceptions
2025-08-19 19:08:32,476:INFO:Importing libraries
2025-08-19 19:08:32,476:INFO:Copying training dataset
2025-08-19 19:08:32,476:INFO:Defining folds
2025-08-19 19:08:32,476:INFO:Declaring metric variables
2025-08-19 19:08:32,476:INFO:Importing untrained model
2025-08-19 19:08:32,476:INFO:Declaring custom model
2025-08-19 19:08:32,477:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:08:32,478:INFO:Cross validation set to False
2025-08-19 19:08:32,478:INFO:Fitting Model
2025-08-19 19:08:32,508:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:08:32,508:INFO:create_model() successfully completed......................................
2025-08-19 19:08:32,589:INFO:_master_model_container: 30
2025-08-19 19:08:32,590:INFO:_display_container: 29
2025-08-19 19:08:32,594:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:08:32,594:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:32,681:INFO:Initializing predict_model()
2025-08-19 19:08:32,681:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:32,681:INFO:Checking exceptions
2025-08-19 19:08:32,681:INFO:Preloading libraries
2025-08-19 19:08:32,682:INFO:Set up data.
2025-08-19 19:08:32,686:INFO:Set up index.
2025-08-19 19:08:32,787:INFO:Initializing create_model()
2025-08-19 19:08:32,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:32,787:INFO:Checking exceptions
2025-08-19 19:08:32,788:INFO:Importing libraries
2025-08-19 19:08:32,788:INFO:Copying training dataset
2025-08-19 19:08:32,789:INFO:Defining folds
2025-08-19 19:08:32,789:INFO:Declaring metric variables
2025-08-19 19:08:32,790:INFO:Importing untrained model
2025-08-19 19:08:32,790:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:08:32,790:INFO:Starting cross validation
2025-08-19 19:08:32,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:32,822:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,824:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,831:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,835:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,838:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,844:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,863:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,864:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,872:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,877:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,903:INFO:Calculating mean and std
2025-08-19 19:08:32,904:INFO:Creating metrics dataframe
2025-08-19 19:08:32,905:INFO:Finalizing model
2025-08-19 19:08:32,926:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:32,929:INFO:Uploading results into container
2025-08-19 19:08:32,930:INFO:Uploading model into container now
2025-08-19 19:08:32,931:INFO:_master_model_container: 31
2025-08-19 19:08:32,931:INFO:_display_container: 31
2025-08-19 19:08:32,931:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:08:32,931:INFO:create_model() successfully completed......................................
2025-08-19 19:08:33,020:INFO:Initializing finalize_model()
2025-08-19 19:08:33,020:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:33,020:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:08:33,021:INFO:Initializing create_model()
2025-08-19 19:08:33,022:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:33,022:INFO:Checking exceptions
2025-08-19 19:08:33,022:INFO:Importing libraries
2025-08-19 19:08:33,022:INFO:Copying training dataset
2025-08-19 19:08:33,023:INFO:Defining folds
2025-08-19 19:08:33,023:INFO:Declaring metric variables
2025-08-19 19:08:33,023:INFO:Importing untrained model
2025-08-19 19:08:33,023:INFO:Declaring custom model
2025-08-19 19:08:33,023:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:08:33,024:INFO:Cross validation set to False
2025-08-19 19:08:33,024:INFO:Fitting Model
2025-08-19 19:08:33,066:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:33,079:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:08:33,079:INFO:create_model() successfully completed......................................
2025-08-19 19:08:33,175:INFO:_master_model_container: 31
2025-08-19 19:08:33,175:INFO:_display_container: 31
2025-08-19 19:08:33,181:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:08:33,181:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:33,276:INFO:Initializing predict_model()
2025-08-19 19:08:33,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:33,276:INFO:Checking exceptions
2025-08-19 19:08:33,276:INFO:Preloading libraries
2025-08-19 19:08:33,276:INFO:Set up data.
2025-08-19 19:08:33,280:INFO:Set up index.
2025-08-19 19:08:33,472:INFO:Initializing create_model()
2025-08-19 19:08:33,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:33,472:INFO:Checking exceptions
2025-08-19 19:08:33,473:INFO:Importing libraries
2025-08-19 19:08:33,473:INFO:Copying training dataset
2025-08-19 19:08:33,475:INFO:Defining folds
2025-08-19 19:08:33,475:INFO:Declaring metric variables
2025-08-19 19:08:33,475:INFO:Importing untrained model
2025-08-19 19:08:33,475:INFO:Naive Bayes Imported successfully
2025-08-19 19:08:33,475:INFO:Starting cross validation
2025-08-19 19:08:33,476:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:33,626:INFO:Calculating mean and std
2025-08-19 19:08:33,627:INFO:Creating metrics dataframe
2025-08-19 19:08:33,628:INFO:Finalizing model
2025-08-19 19:08:33,656:INFO:Uploading results into container
2025-08-19 19:08:33,657:INFO:Uploading model into container now
2025-08-19 19:08:33,657:INFO:_master_model_container: 32
2025-08-19 19:08:33,657:INFO:_display_container: 33
2025-08-19 19:08:33,657:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:08:33,657:INFO:create_model() successfully completed......................................
2025-08-19 19:08:33,743:INFO:Initializing finalize_model()
2025-08-19 19:08:33,743:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:33,743:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:08:33,745:INFO:Initializing create_model()
2025-08-19 19:08:33,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:33,745:INFO:Checking exceptions
2025-08-19 19:08:33,746:INFO:Importing libraries
2025-08-19 19:08:33,746:INFO:Copying training dataset
2025-08-19 19:08:33,746:INFO:Defining folds
2025-08-19 19:08:33,746:INFO:Declaring metric variables
2025-08-19 19:08:33,746:INFO:Importing untrained model
2025-08-19 19:08:33,746:INFO:Declaring custom model
2025-08-19 19:08:33,747:INFO:Naive Bayes Imported successfully
2025-08-19 19:08:33,747:INFO:Cross validation set to False
2025-08-19 19:08:33,747:INFO:Fitting Model
2025-08-19 19:08:33,777:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:08:33,777:INFO:create_model() successfully completed......................................
2025-08-19 19:08:33,860:INFO:_master_model_container: 32
2025-08-19 19:08:33,860:INFO:_display_container: 33
2025-08-19 19:08:33,864:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:08:33,864:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:33,952:INFO:Initializing predict_model()
2025-08-19 19:08:33,952:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3203edd50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x307a496c0>)
2025-08-19 19:08:33,952:INFO:Checking exceptions
2025-08-19 19:08:33,952:INFO:Preloading libraries
2025-08-19 19:08:33,952:INFO:Set up data.
2025-08-19 19:08:33,956:INFO:Set up index.
2025-08-19 19:08:34,074:INFO:PyCaret ClassificationExperiment
2025-08-19 19:08:34,075:INFO:Logging name: clf-default-name
2025-08-19 19:08:34,075:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-19 19:08:34,075:INFO:version 3.3.2
2025-08-19 19:08:34,075:INFO:Initializing setup()
2025-08-19 19:08:34,075:INFO:self.USI: 7773
2025-08-19 19:08:34,075:INFO:self._variable_keys: {'X_train', 'fold_groups_param', 'memory', 'fold_generator', 'gpu_param', 'exp_name_log', 'fold_shuffle_param', 'y', '_ml_usecase', 'y_train', 'y_test', 'idx', 'USI', 'fix_imbalance', 'n_jobs_param', 'log_plots_param', 'exp_id', 'html_param', 'is_multiclass', 'pipeline', 'seed', 'X_test', 'target_param', 'logging_param', 'gpu_n_jobs_param', 'X', '_available_plots', 'data'}
2025-08-19 19:08:34,075:INFO:Checking environment
2025-08-19 19:08:34,075:INFO:python_version: 3.10.18
2025-08-19 19:08:34,075:INFO:python_build: ('main', 'Jun  4 2025 14:46:00')
2025-08-19 19:08:34,075:INFO:machine: arm64
2025-08-19 19:08:34,075:INFO:platform: macOS-15.6-arm64-arm-64bit
2025-08-19 19:08:34,075:INFO:Memory: svmem(total=17179869184, available=3258957824, percent=81.0, used=6099337216, free=309346304, active=2964881408, inactive=2917498880, wired=3134455808)
2025-08-19 19:08:34,075:INFO:Physical Core: 8
2025-08-19 19:08:34,075:INFO:Logical Core: 8
2025-08-19 19:08:34,075:INFO:Checking libraries
2025-08-19 19:08:34,075:INFO:System:
2025-08-19 19:08:34,075:INFO:    python: 3.10.18 | packaged by conda-forge | (main, Jun  4 2025, 14:46:00) [Clang 18.1.8 ]
2025-08-19 19:08:34,075:INFO:executable: /opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/bin/python
2025-08-19 19:08:34,075:INFO:   machine: macOS-15.6-arm64-arm-64bit
2025-08-19 19:08:34,075:INFO:PyCaret required dependencies:
2025-08-19 19:08:34,075:INFO:                 pip: 25.2
2025-08-19 19:08:34,075:INFO:          setuptools: 80.9.0
2025-08-19 19:08:34,075:INFO:             pycaret: 3.3.2
2025-08-19 19:08:34,075:INFO:             IPython: 8.37.0
2025-08-19 19:08:34,075:INFO:          ipywidgets: 8.1.7
2025-08-19 19:08:34,075:INFO:                tqdm: 4.67.1
2025-08-19 19:08:34,075:INFO:               numpy: 1.25.2
2025-08-19 19:08:34,075:INFO:              pandas: 2.1.4
2025-08-19 19:08:34,075:INFO:              jinja2: 3.1.6
2025-08-19 19:08:34,075:INFO:               scipy: 1.9.3
2025-08-19 19:08:34,075:INFO:              joblib: 1.3.2
2025-08-19 19:08:34,075:INFO:             sklearn: 1.4.2
2025-08-19 19:08:34,075:INFO:                pyod: 2.0.5
2025-08-19 19:08:34,075:INFO:            imblearn: 0.12.4
2025-08-19 19:08:34,075:INFO:   category_encoders: 2.7.0
2025-08-19 19:08:34,075:INFO:            lightgbm: 4.6.0
2025-08-19 19:08:34,075:INFO:               numba: 0.61.2
2025-08-19 19:08:34,075:INFO:            requests: 2.32.4
2025-08-19 19:08:34,075:INFO:          matplotlib: 3.7.2
2025-08-19 19:08:34,076:INFO:          scikitplot: 0.3.7
2025-08-19 19:08:34,076:INFO:         yellowbrick: 1.5
2025-08-19 19:08:34,076:INFO:              plotly: 5.24.1
2025-08-19 19:08:34,076:INFO:    plotly-resampler: Not installed
2025-08-19 19:08:34,076:INFO:             kaleido: 1.0.0
2025-08-19 19:08:34,076:INFO:           schemdraw: 0.15
2025-08-19 19:08:34,076:INFO:         statsmodels: 0.14.5
2025-08-19 19:08:34,076:INFO:              sktime: 0.26.0
2025-08-19 19:08:34,076:INFO:               tbats: 1.1.3
2025-08-19 19:08:34,076:INFO:            pmdarima: 2.0.4
2025-08-19 19:08:34,076:INFO:              psutil: 7.0.0
2025-08-19 19:08:34,076:INFO:          markupsafe: 3.0.2
2025-08-19 19:08:34,076:INFO:             pickle5: Not installed
2025-08-19 19:08:34,076:INFO:         cloudpickle: 3.1.1
2025-08-19 19:08:34,076:INFO:         deprecation: 2.1.0
2025-08-19 19:08:34,076:INFO:              xxhash: 3.5.0
2025-08-19 19:08:34,076:INFO:           wurlitzer: 3.1.1
2025-08-19 19:08:34,076:INFO:PyCaret optional dependencies:
2025-08-19 19:08:34,076:INFO:                shap: 0.48.0
2025-08-19 19:08:34,076:INFO:           interpret: Not installed
2025-08-19 19:08:34,076:INFO:                umap: Not installed
2025-08-19 19:08:34,076:INFO:     ydata_profiling: Not installed
2025-08-19 19:08:34,076:INFO:  explainerdashboard: Not installed
2025-08-19 19:08:34,076:INFO:             autoviz: Not installed
2025-08-19 19:08:34,076:INFO:           fairlearn: Not installed
2025-08-19 19:08:34,076:INFO:          deepchecks: Not installed
2025-08-19 19:08:34,076:INFO:             xgboost: 3.0.4
2025-08-19 19:08:34,076:INFO:            catboost: 1.2.8
2025-08-19 19:08:34,076:INFO:              kmodes: Not installed
2025-08-19 19:08:34,076:INFO:             mlxtend: 0.23.4
2025-08-19 19:08:34,076:INFO:       statsforecast: Not installed
2025-08-19 19:08:34,076:INFO:        tune_sklearn: Not installed
2025-08-19 19:08:34,076:INFO:                 ray: Not installed
2025-08-19 19:08:34,076:INFO:            hyperopt: Not installed
2025-08-19 19:08:34,076:INFO:              optuna: 4.4.0
2025-08-19 19:08:34,076:INFO:               skopt: Not installed
2025-08-19 19:08:34,076:INFO:              mlflow: Not installed
2025-08-19 19:08:34,076:INFO:              gradio: Not installed
2025-08-19 19:08:34,076:INFO:             fastapi: Not installed
2025-08-19 19:08:34,076:INFO:             uvicorn: Not installed
2025-08-19 19:08:34,076:INFO:              m2cgen: Not installed
2025-08-19 19:08:34,076:INFO:           evidently: Not installed
2025-08-19 19:08:34,076:INFO:               fugue: Not installed
2025-08-19 19:08:34,076:INFO:           streamlit: Not installed
2025-08-19 19:08:34,076:INFO:             prophet: Not installed
2025-08-19 19:08:34,076:INFO:None
2025-08-19 19:08:34,076:INFO:Set up data.
2025-08-19 19:08:34,082:INFO:Set up folding strategy.
2025-08-19 19:08:34,082:INFO:Set up train/test split.
2025-08-19 19:08:34,082:INFO:Set up data.
2025-08-19 19:08:34,086:INFO:Set up index.
2025-08-19 19:08:34,086:INFO:Assigning column types.
2025-08-19 19:08:34,088:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-19 19:08:34,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:08:34,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:08:34,129:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:08:34,131:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:08:34,156:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-19 19:08:34,157:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:08:34,173:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:08:34,174:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:08:34,175:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-19 19:08:34,200:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:08:34,215:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:08:34,217:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:08:34,243:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-19 19:08:34,258:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:08:34,260:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:08:34,260:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-19 19:08:34,301:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:08:34,303:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:08:34,344:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:08:34,346:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:08:34,347:INFO:Preparing preprocessing pipeline...
2025-08-19 19:08:34,347:INFO:Set up label encoding.
2025-08-19 19:08:34,347:INFO:Set up simple imputation.
2025-08-19 19:08:34,348:INFO:Set up encoding of categorical features.
2025-08-19 19:08:34,404:INFO:Finished creating preprocessing pipeline.
2025-08-19 19:08:34,409:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/dl/67z9yf312kv3dl30bp_61f4r0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-08-19 19:08:34,409:INFO:Creating final display dataframe.
2025-08-19 19:08:34,547:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             label
2                   Target type            Binary
3                Target mapping       -1: 0, 1: 1
4           Original data shape         (960, 28)
5        Transformed data shape         (960, 28)
6   Transformed train set shape         (768, 28)
7    Transformed test set shape         (192, 28)
8              Numeric features                25
9          Categorical features                 2
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              7773
2025-08-19 19:08:34,587:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:08:34,589:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:08:34,630:INFO:Soft dependency imported: xgboost: 3.0.4
2025-08-19 19:08:34,631:INFO:Soft dependency imported: catboost: 1.2.8
2025-08-19 19:08:34,632:INFO:setup() successfully completed in 0.56s...............
2025-08-19 19:08:34,634:INFO:Initializing compare_models()
2025-08-19 19:08:34,634:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=False, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': False, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-19 19:08:34,634:INFO:Checking exceptions
2025-08-19 19:08:34,636:INFO:Preparing display monitor
2025-08-19 19:08:34,637:INFO:Initializing Logistic Regression
2025-08-19 19:08:34,638:INFO:Total runtime is 1.2159347534179687e-06 minutes
2025-08-19 19:08:34,638:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:34,638:INFO:Initializing create_model()
2025-08-19 19:08:34,638:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:34,638:INFO:Checking exceptions
2025-08-19 19:08:34,638:INFO:Importing libraries
2025-08-19 19:08:34,638:INFO:Copying training dataset
2025-08-19 19:08:34,639:INFO:Defining folds
2025-08-19 19:08:34,639:INFO:Declaring metric variables
2025-08-19 19:08:34,640:INFO:Importing untrained model
2025-08-19 19:08:34,640:INFO:Logistic Regression Imported successfully
2025-08-19 19:08:34,640:INFO:Starting cross validation
2025-08-19 19:08:34,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:34,783:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:34,797:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:34,814:INFO:Calculating mean and std
2025-08-19 19:08:34,814:INFO:Creating metrics dataframe
2025-08-19 19:08:34,816:INFO:Uploading results into container
2025-08-19 19:08:34,816:INFO:Uploading model into container now
2025-08-19 19:08:34,816:INFO:_master_model_container: 1
2025-08-19 19:08:34,816:INFO:_display_container: 2
2025-08-19 19:08:34,816:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:08:34,816:INFO:create_model() successfully completed......................................
2025-08-19 19:08:34,908:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:34,908:INFO:Creating metrics dataframe
2025-08-19 19:08:34,910:INFO:Initializing K Neighbors Classifier
2025-08-19 19:08:34,910:INFO:Total runtime is 0.004538265864054362 minutes
2025-08-19 19:08:34,910:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:34,910:INFO:Initializing create_model()
2025-08-19 19:08:34,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:34,910:INFO:Checking exceptions
2025-08-19 19:08:34,910:INFO:Importing libraries
2025-08-19 19:08:34,910:INFO:Copying training dataset
2025-08-19 19:08:34,912:INFO:Defining folds
2025-08-19 19:08:34,912:INFO:Declaring metric variables
2025-08-19 19:08:34,912:INFO:Importing untrained model
2025-08-19 19:08:34,912:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:08:34,913:INFO:Starting cross validation
2025-08-19 19:08:34,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:35,031:INFO:Calculating mean and std
2025-08-19 19:08:35,032:INFO:Creating metrics dataframe
2025-08-19 19:08:35,033:INFO:Uploading results into container
2025-08-19 19:08:35,033:INFO:Uploading model into container now
2025-08-19 19:08:35,033:INFO:_master_model_container: 2
2025-08-19 19:08:35,033:INFO:_display_container: 2
2025-08-19 19:08:35,033:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:08:35,033:INFO:create_model() successfully completed......................................
2025-08-19 19:08:35,116:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:35,116:INFO:Creating metrics dataframe
2025-08-19 19:08:35,118:INFO:Initializing Naive Bayes
2025-08-19 19:08:35,118:INFO:Total runtime is 0.00800406535466512 minutes
2025-08-19 19:08:35,118:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:35,118:INFO:Initializing create_model()
2025-08-19 19:08:35,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:35,118:INFO:Checking exceptions
2025-08-19 19:08:35,118:INFO:Importing libraries
2025-08-19 19:08:35,118:INFO:Copying training dataset
2025-08-19 19:08:35,120:INFO:Defining folds
2025-08-19 19:08:35,120:INFO:Declaring metric variables
2025-08-19 19:08:35,120:INFO:Importing untrained model
2025-08-19 19:08:35,120:INFO:Naive Bayes Imported successfully
2025-08-19 19:08:35,120:INFO:Starting cross validation
2025-08-19 19:08:35,121:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:35,226:INFO:Calculating mean and std
2025-08-19 19:08:35,226:INFO:Creating metrics dataframe
2025-08-19 19:08:35,227:INFO:Uploading results into container
2025-08-19 19:08:35,228:INFO:Uploading model into container now
2025-08-19 19:08:35,228:INFO:_master_model_container: 3
2025-08-19 19:08:35,228:INFO:_display_container: 2
2025-08-19 19:08:35,228:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:08:35,228:INFO:create_model() successfully completed......................................
2025-08-19 19:08:35,309:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:35,309:INFO:Creating metrics dataframe
2025-08-19 19:08:35,311:INFO:Initializing Decision Tree Classifier
2025-08-19 19:08:35,311:INFO:Total runtime is 0.01122363011042277 minutes
2025-08-19 19:08:35,311:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:35,311:INFO:Initializing create_model()
2025-08-19 19:08:35,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:35,311:INFO:Checking exceptions
2025-08-19 19:08:35,311:INFO:Importing libraries
2025-08-19 19:08:35,311:INFO:Copying training dataset
2025-08-19 19:08:35,313:INFO:Defining folds
2025-08-19 19:08:35,313:INFO:Declaring metric variables
2025-08-19 19:08:35,313:INFO:Importing untrained model
2025-08-19 19:08:35,313:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:08:35,314:INFO:Starting cross validation
2025-08-19 19:08:35,314:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:35,428:INFO:Calculating mean and std
2025-08-19 19:08:35,428:INFO:Creating metrics dataframe
2025-08-19 19:08:35,429:INFO:Uploading results into container
2025-08-19 19:08:35,430:INFO:Uploading model into container now
2025-08-19 19:08:35,430:INFO:_master_model_container: 4
2025-08-19 19:08:35,430:INFO:_display_container: 2
2025-08-19 19:08:35,430:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:35,430:INFO:create_model() successfully completed......................................
2025-08-19 19:08:35,514:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:35,514:INFO:Creating metrics dataframe
2025-08-19 19:08:35,516:INFO:Initializing SVM - Linear Kernel
2025-08-19 19:08:35,516:INFO:Total runtime is 0.014636548360188802 minutes
2025-08-19 19:08:35,516:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:35,516:INFO:Initializing create_model()
2025-08-19 19:08:35,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:35,516:INFO:Checking exceptions
2025-08-19 19:08:35,516:INFO:Importing libraries
2025-08-19 19:08:35,516:INFO:Copying training dataset
2025-08-19 19:08:35,518:INFO:Defining folds
2025-08-19 19:08:35,518:INFO:Declaring metric variables
2025-08-19 19:08:35,518:INFO:Importing untrained model
2025-08-19 19:08:35,519:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:08:35,519:INFO:Starting cross validation
2025-08-19 19:08:35,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:35,627:INFO:Calculating mean and std
2025-08-19 19:08:35,628:INFO:Creating metrics dataframe
2025-08-19 19:08:35,629:INFO:Uploading results into container
2025-08-19 19:08:35,629:INFO:Uploading model into container now
2025-08-19 19:08:35,629:INFO:_master_model_container: 5
2025-08-19 19:08:35,629:INFO:_display_container: 2
2025-08-19 19:08:35,629:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:08:35,629:INFO:create_model() successfully completed......................................
2025-08-19 19:08:35,711:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:35,712:INFO:Creating metrics dataframe
2025-08-19 19:08:35,713:INFO:Initializing Ridge Classifier
2025-08-19 19:08:35,713:INFO:Total runtime is 0.017925997575124104 minutes
2025-08-19 19:08:35,713:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:35,713:INFO:Initializing create_model()
2025-08-19 19:08:35,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:35,713:INFO:Checking exceptions
2025-08-19 19:08:35,713:INFO:Importing libraries
2025-08-19 19:08:35,713:INFO:Copying training dataset
2025-08-19 19:08:35,715:INFO:Defining folds
2025-08-19 19:08:35,715:INFO:Declaring metric variables
2025-08-19 19:08:35,715:INFO:Importing untrained model
2025-08-19 19:08:35,715:INFO:Ridge Classifier Imported successfully
2025-08-19 19:08:35,715:INFO:Starting cross validation
2025-08-19 19:08:35,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:35,812:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:35,818:INFO:Calculating mean and std
2025-08-19 19:08:35,818:INFO:Creating metrics dataframe
2025-08-19 19:08:35,819:INFO:Uploading results into container
2025-08-19 19:08:35,820:INFO:Uploading model into container now
2025-08-19 19:08:35,820:INFO:_master_model_container: 6
2025-08-19 19:08:35,820:INFO:_display_container: 2
2025-08-19 19:08:35,820:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:08:35,820:INFO:create_model() successfully completed......................................
2025-08-19 19:08:35,905:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:35,905:INFO:Creating metrics dataframe
2025-08-19 19:08:35,907:INFO:Initializing Random Forest Classifier
2025-08-19 19:08:35,907:INFO:Total runtime is 0.021151713530222573 minutes
2025-08-19 19:08:35,907:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:35,907:INFO:Initializing create_model()
2025-08-19 19:08:35,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:35,907:INFO:Checking exceptions
2025-08-19 19:08:35,907:INFO:Importing libraries
2025-08-19 19:08:35,907:INFO:Copying training dataset
2025-08-19 19:08:35,909:INFO:Defining folds
2025-08-19 19:08:35,909:INFO:Declaring metric variables
2025-08-19 19:08:35,909:INFO:Importing untrained model
2025-08-19 19:08:35,909:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:08:35,909:INFO:Starting cross validation
2025-08-19 19:08:35,910:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:36,514:INFO:Calculating mean and std
2025-08-19 19:08:36,515:INFO:Creating metrics dataframe
2025-08-19 19:08:36,516:INFO:Uploading results into container
2025-08-19 19:08:36,516:INFO:Uploading model into container now
2025-08-19 19:08:36,516:INFO:_master_model_container: 7
2025-08-19 19:08:36,516:INFO:_display_container: 2
2025-08-19 19:08:36,517:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:08:36,517:INFO:create_model() successfully completed......................................
2025-08-19 19:08:36,600:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:36,600:INFO:Creating metrics dataframe
2025-08-19 19:08:36,601:INFO:Initializing Quadratic Discriminant Analysis
2025-08-19 19:08:36,602:INFO:Total runtime is 0.03273451328277588 minutes
2025-08-19 19:08:36,602:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:36,602:INFO:Initializing create_model()
2025-08-19 19:08:36,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:36,602:INFO:Checking exceptions
2025-08-19 19:08:36,602:INFO:Importing libraries
2025-08-19 19:08:36,602:INFO:Copying training dataset
2025-08-19 19:08:36,603:INFO:Defining folds
2025-08-19 19:08:36,604:INFO:Declaring metric variables
2025-08-19 19:08:36,604:INFO:Importing untrained model
2025-08-19 19:08:36,604:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:08:36,604:INFO:Starting cross validation
2025-08-19 19:08:36,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:36,636:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,640:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,640:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,643:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,656:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,664:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,671:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,681:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,689:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,695:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:08:36,718:INFO:Calculating mean and std
2025-08-19 19:08:36,718:INFO:Creating metrics dataframe
2025-08-19 19:08:36,719:INFO:Uploading results into container
2025-08-19 19:08:36,719:INFO:Uploading model into container now
2025-08-19 19:08:36,720:INFO:_master_model_container: 8
2025-08-19 19:08:36,720:INFO:_display_container: 2
2025-08-19 19:08:36,720:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:08:36,720:INFO:create_model() successfully completed......................................
2025-08-19 19:08:36,805:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:36,805:INFO:Creating metrics dataframe
2025-08-19 19:08:36,806:INFO:Initializing Ada Boost Classifier
2025-08-19 19:08:36,806:INFO:Total runtime is 0.03615036408106486 minutes
2025-08-19 19:08:36,807:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:36,807:INFO:Initializing create_model()
2025-08-19 19:08:36,807:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:36,807:INFO:Checking exceptions
2025-08-19 19:08:36,807:INFO:Importing libraries
2025-08-19 19:08:36,807:INFO:Copying training dataset
2025-08-19 19:08:36,808:INFO:Defining folds
2025-08-19 19:08:36,808:INFO:Declaring metric variables
2025-08-19 19:08:36,809:INFO:Importing untrained model
2025-08-19 19:08:36,809:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:08:36,809:INFO:Starting cross validation
2025-08-19 19:08:36,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:36,841:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:36,842:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:36,846:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:36,851:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:36,856:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:36,862:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:36,864:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:36,898:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:37,042:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:37,044:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:08:37,193:INFO:Calculating mean and std
2025-08-19 19:08:37,193:INFO:Creating metrics dataframe
2025-08-19 19:08:37,194:INFO:Uploading results into container
2025-08-19 19:08:37,194:INFO:Uploading model into container now
2025-08-19 19:08:37,194:INFO:_master_model_container: 9
2025-08-19 19:08:37,194:INFO:_display_container: 2
2025-08-19 19:08:37,195:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:08:37,195:INFO:create_model() successfully completed......................................
2025-08-19 19:08:37,275:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:37,275:INFO:Creating metrics dataframe
2025-08-19 19:08:37,277:INFO:Initializing Gradient Boosting Classifier
2025-08-19 19:08:37,277:INFO:Total runtime is 0.04398914972941081 minutes
2025-08-19 19:08:37,277:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:37,277:INFO:Initializing create_model()
2025-08-19 19:08:37,277:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:37,277:INFO:Checking exceptions
2025-08-19 19:08:37,277:INFO:Importing libraries
2025-08-19 19:08:37,277:INFO:Copying training dataset
2025-08-19 19:08:37,279:INFO:Defining folds
2025-08-19 19:08:37,279:INFO:Declaring metric variables
2025-08-19 19:08:37,279:INFO:Importing untrained model
2025-08-19 19:08:37,279:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:08:37,279:INFO:Starting cross validation
2025-08-19 19:08:37,280:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:38,493:INFO:Calculating mean and std
2025-08-19 19:08:38,494:INFO:Creating metrics dataframe
2025-08-19 19:08:38,495:INFO:Uploading results into container
2025-08-19 19:08:38,495:INFO:Uploading model into container now
2025-08-19 19:08:38,495:INFO:_master_model_container: 10
2025-08-19 19:08:38,495:INFO:_display_container: 2
2025-08-19 19:08:38,495:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:08:38,495:INFO:create_model() successfully completed......................................
2025-08-19 19:08:38,575:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:38,575:INFO:Creating metrics dataframe
2025-08-19 19:08:38,577:INFO:Initializing Linear Discriminant Analysis
2025-08-19 19:08:38,577:INFO:Total runtime is 0.06565794944763184 minutes
2025-08-19 19:08:38,577:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:38,577:INFO:Initializing create_model()
2025-08-19 19:08:38,577:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:38,577:INFO:Checking exceptions
2025-08-19 19:08:38,577:INFO:Importing libraries
2025-08-19 19:08:38,577:INFO:Copying training dataset
2025-08-19 19:08:38,579:INFO:Defining folds
2025-08-19 19:08:38,579:INFO:Declaring metric variables
2025-08-19 19:08:38,580:INFO:Importing untrained model
2025-08-19 19:08:38,580:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:08:38,580:INFO:Starting cross validation
2025-08-19 19:08:38,580:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:38,686:INFO:Calculating mean and std
2025-08-19 19:08:38,686:INFO:Creating metrics dataframe
2025-08-19 19:08:38,687:INFO:Uploading results into container
2025-08-19 19:08:38,687:INFO:Uploading model into container now
2025-08-19 19:08:38,687:INFO:_master_model_container: 11
2025-08-19 19:08:38,687:INFO:_display_container: 2
2025-08-19 19:08:38,688:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:08:38,688:INFO:create_model() successfully completed......................................
2025-08-19 19:08:38,770:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:38,770:INFO:Creating metrics dataframe
2025-08-19 19:08:38,771:INFO:Initializing Extra Trees Classifier
2025-08-19 19:08:38,771:INFO:Total runtime is 0.06889563004175822 minutes
2025-08-19 19:08:38,771:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:38,771:INFO:Initializing create_model()
2025-08-19 19:08:38,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:38,771:INFO:Checking exceptions
2025-08-19 19:08:38,772:INFO:Importing libraries
2025-08-19 19:08:38,772:INFO:Copying training dataset
2025-08-19 19:08:38,774:INFO:Defining folds
2025-08-19 19:08:38,774:INFO:Declaring metric variables
2025-08-19 19:08:38,774:INFO:Importing untrained model
2025-08-19 19:08:38,774:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:08:38,774:INFO:Starting cross validation
2025-08-19 19:08:38,775:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:39,166:INFO:Calculating mean and std
2025-08-19 19:08:39,166:INFO:Creating metrics dataframe
2025-08-19 19:08:39,167:INFO:Uploading results into container
2025-08-19 19:08:39,168:INFO:Uploading model into container now
2025-08-19 19:08:39,168:INFO:_master_model_container: 12
2025-08-19 19:08:39,168:INFO:_display_container: 2
2025-08-19 19:08:39,168:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:08:39,168:INFO:create_model() successfully completed......................................
2025-08-19 19:08:39,254:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:39,254:INFO:Creating metrics dataframe
2025-08-19 19:08:39,255:INFO:Initializing Extreme Gradient Boosting
2025-08-19 19:08:39,255:INFO:Total runtime is 0.07696596384048462 minutes
2025-08-19 19:08:39,256:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:39,256:INFO:Initializing create_model()
2025-08-19 19:08:39,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:39,256:INFO:Checking exceptions
2025-08-19 19:08:39,256:INFO:Importing libraries
2025-08-19 19:08:39,256:INFO:Copying training dataset
2025-08-19 19:08:39,257:INFO:Defining folds
2025-08-19 19:08:39,257:INFO:Declaring metric variables
2025-08-19 19:08:39,257:INFO:Importing untrained model
2025-08-19 19:08:39,258:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:08:39,258:INFO:Starting cross validation
2025-08-19 19:08:39,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:39,454:INFO:Calculating mean and std
2025-08-19 19:08:39,454:INFO:Creating metrics dataframe
2025-08-19 19:08:39,455:INFO:Uploading results into container
2025-08-19 19:08:39,455:INFO:Uploading model into container now
2025-08-19 19:08:39,455:INFO:_master_model_container: 13
2025-08-19 19:08:39,455:INFO:_display_container: 2
2025-08-19 19:08:39,456:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:08:39,456:INFO:create_model() successfully completed......................................
2025-08-19 19:08:39,538:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:39,539:INFO:Creating metrics dataframe
2025-08-19 19:08:39,540:INFO:Initializing Light Gradient Boosting Machine
2025-08-19 19:08:39,540:INFO:Total runtime is 0.08171041409174602 minutes
2025-08-19 19:08:39,540:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:39,540:INFO:Initializing create_model()
2025-08-19 19:08:39,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:39,540:INFO:Checking exceptions
2025-08-19 19:08:39,540:INFO:Importing libraries
2025-08-19 19:08:39,540:INFO:Copying training dataset
2025-08-19 19:08:39,542:INFO:Defining folds
2025-08-19 19:08:39,543:INFO:Declaring metric variables
2025-08-19 19:08:39,543:INFO:Importing untrained model
2025-08-19 19:08:39,543:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:08:39,543:INFO:Starting cross validation
2025-08-19 19:08:39,544:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:43,413:INFO:Calculating mean and std
2025-08-19 19:08:43,414:INFO:Creating metrics dataframe
2025-08-19 19:08:43,417:INFO:Uploading results into container
2025-08-19 19:08:43,417:INFO:Uploading model into container now
2025-08-19 19:08:43,418:INFO:_master_model_container: 14
2025-08-19 19:08:43,418:INFO:_display_container: 2
2025-08-19 19:08:43,419:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:08:43,419:INFO:create_model() successfully completed......................................
2025-08-19 19:08:43,533:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:43,533:INFO:Creating metrics dataframe
2025-08-19 19:08:43,534:INFO:Initializing CatBoost Classifier
2025-08-19 19:08:43,535:INFO:Total runtime is 0.14828381141026814 minutes
2025-08-19 19:08:43,535:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:43,535:INFO:Initializing create_model()
2025-08-19 19:08:43,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:43,535:INFO:Checking exceptions
2025-08-19 19:08:43,535:INFO:Importing libraries
2025-08-19 19:08:43,535:INFO:Copying training dataset
2025-08-19 19:08:43,537:INFO:Defining folds
2025-08-19 19:08:43,537:INFO:Declaring metric variables
2025-08-19 19:08:43,537:INFO:Importing untrained model
2025-08-19 19:08:43,537:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:08:43,538:INFO:Starting cross validation
2025-08-19 19:08:43,538:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:52,124:INFO:Calculating mean and std
2025-08-19 19:08:52,124:INFO:Creating metrics dataframe
2025-08-19 19:08:52,126:INFO:Uploading results into container
2025-08-19 19:08:52,126:INFO:Uploading model into container now
2025-08-19 19:08:52,126:INFO:_master_model_container: 15
2025-08-19 19:08:52,126:INFO:_display_container: 2
2025-08-19 19:08:52,126:INFO:<catboost.core.CatBoostClassifier object at 0x320cadf60>
2025-08-19 19:08:52,126:INFO:create_model() successfully completed......................................
2025-08-19 19:08:52,211:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:52,211:INFO:Creating metrics dataframe
2025-08-19 19:08:52,212:INFO:Initializing Dummy Classifier
2025-08-19 19:08:52,212:INFO:Total runtime is 0.29291692972183225 minutes
2025-08-19 19:08:52,213:INFO:SubProcess create_model() called ==================================
2025-08-19 19:08:52,213:INFO:Initializing create_model()
2025-08-19 19:08:52,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x30996ad40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:52,213:INFO:Checking exceptions
2025-08-19 19:08:52,213:INFO:Importing libraries
2025-08-19 19:08:52,213:INFO:Copying training dataset
2025-08-19 19:08:52,214:INFO:Defining folds
2025-08-19 19:08:52,215:INFO:Declaring metric variables
2025-08-19 19:08:52,215:INFO:Importing untrained model
2025-08-19 19:08:52,215:INFO:Dummy Classifier Imported successfully
2025-08-19 19:08:52,215:INFO:Starting cross validation
2025-08-19 19:08:52,216:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:52,263:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,263:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,276:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,281:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,287:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,287:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,303:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,306:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,310:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,320:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:08:52,333:INFO:Calculating mean and std
2025-08-19 19:08:52,333:INFO:Creating metrics dataframe
2025-08-19 19:08:52,334:INFO:Uploading results into container
2025-08-19 19:08:52,334:INFO:Uploading model into container now
2025-08-19 19:08:52,334:INFO:_master_model_container: 16
2025-08-19 19:08:52,334:INFO:_display_container: 2
2025-08-19 19:08:52,335:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:08:52,335:INFO:create_model() successfully completed......................................
2025-08-19 19:08:52,420:INFO:SubProcess create_model() end ==================================
2025-08-19 19:08:52,421:INFO:Creating metrics dataframe
2025-08-19 19:08:52,422:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-08-19 19:08:52,423:INFO:Initializing create_model()
2025-08-19 19:08:52,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:52,423:INFO:Checking exceptions
2025-08-19 19:08:52,424:INFO:Importing libraries
2025-08-19 19:08:52,424:INFO:Copying training dataset
2025-08-19 19:08:52,426:INFO:Defining folds
2025-08-19 19:08:52,426:INFO:Declaring metric variables
2025-08-19 19:08:52,426:INFO:Importing untrained model
2025-08-19 19:08:52,426:INFO:Declaring custom model
2025-08-19 19:08:52,426:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:08:52,427:INFO:Cross validation set to False
2025-08-19 19:08:52,427:INFO:Fitting Model
2025-08-19 19:08:52,458:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:52,459:INFO:create_model() successfully completed......................................
2025-08-19 19:08:52,545:INFO:_master_model_container: 16
2025-08-19 19:08:52,545:INFO:_display_container: 2
2025-08-19 19:08:52,545:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:52,546:INFO:compare_models() successfully completed......................................
2025-08-19 19:08:52,547:INFO:Initializing create_model()
2025-08-19 19:08:52,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:52,547:INFO:Checking exceptions
2025-08-19 19:08:52,548:INFO:Importing libraries
2025-08-19 19:08:52,548:INFO:Copying training dataset
2025-08-19 19:08:52,549:INFO:Defining folds
2025-08-19 19:08:52,549:INFO:Declaring metric variables
2025-08-19 19:08:52,549:INFO:Importing untrained model
2025-08-19 19:08:52,550:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:08:52,550:INFO:Starting cross validation
2025-08-19 19:08:52,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:08:52,682:INFO:Calculating mean and std
2025-08-19 19:08:52,682:INFO:Creating metrics dataframe
2025-08-19 19:08:52,683:INFO:Finalizing model
2025-08-19 19:08:52,713:INFO:Uploading results into container
2025-08-19 19:08:52,713:INFO:Uploading model into container now
2025-08-19 19:08:52,713:INFO:_master_model_container: 17
2025-08-19 19:08:52,713:INFO:_display_container: 3
2025-08-19 19:08:52,713:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:52,713:INFO:create_model() successfully completed......................................
2025-08-19 19:08:52,795:INFO:Initializing finalize_model()
2025-08-19 19:08:52,795:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:08:52,796:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-08-19 19:08:52,797:INFO:Initializing create_model()
2025-08-19 19:08:52,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:52,797:INFO:Checking exceptions
2025-08-19 19:08:52,798:INFO:Importing libraries
2025-08-19 19:08:52,798:INFO:Copying training dataset
2025-08-19 19:08:52,798:INFO:Defining folds
2025-08-19 19:08:52,799:INFO:Declaring metric variables
2025-08-19 19:08:52,799:INFO:Importing untrained model
2025-08-19 19:08:52,799:INFO:Declaring custom model
2025-08-19 19:08:52,799:INFO:Decision Tree Classifier Imported successfully
2025-08-19 19:08:52,800:INFO:Cross validation set to False
2025-08-19 19:08:52,800:INFO:Fitting Model
2025-08-19 19:08:52,847:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:08:52,847:INFO:create_model() successfully completed......................................
2025-08-19 19:08:52,939:INFO:_master_model_container: 17
2025-08-19 19:08:52,939:INFO:_display_container: 3
2025-08-19 19:08:52,944:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False)
2025-08-19 19:08:52,944:INFO:finalize_model() successfully completed......................................
2025-08-19 19:08:53,051:INFO:Initializing predict_model()
2025-08-19 19:08:53,051:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=123,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:08:53,051:INFO:Checking exceptions
2025-08-19 19:08:53,051:INFO:Preloading libraries
2025-08-19 19:08:53,052:INFO:Set up data.
2025-08-19 19:08:53,056:INFO:Set up index.
2025-08-19 19:08:53,163:INFO:Initializing create_model()
2025-08-19 19:08:53,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:08:53,163:INFO:Checking exceptions
2025-08-19 19:08:53,164:INFO:Importing libraries
2025-08-19 19:08:53,164:INFO:Copying training dataset
2025-08-19 19:08:53,166:INFO:Defining folds
2025-08-19 19:08:53,166:INFO:Declaring metric variables
2025-08-19 19:08:53,166:INFO:Importing untrained model
2025-08-19 19:08:53,166:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:08:53,166:INFO:Starting cross validation
2025-08-19 19:08:53,167:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:02,954:INFO:Calculating mean and std
2025-08-19 19:09:02,955:INFO:Creating metrics dataframe
2025-08-19 19:09:02,958:INFO:Finalizing model
2025-08-19 19:09:04,408:INFO:Uploading results into container
2025-08-19 19:09:04,408:INFO:Uploading model into container now
2025-08-19 19:09:04,409:INFO:_master_model_container: 18
2025-08-19 19:09:04,409:INFO:_display_container: 5
2025-08-19 19:09:04,409:INFO:<catboost.core.CatBoostClassifier object at 0x119f12cb0>
2025-08-19 19:09:04,409:INFO:create_model() successfully completed......................................
2025-08-19 19:09:04,529:INFO:Initializing finalize_model()
2025-08-19 19:09:04,529:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=<catboost.core.CatBoostClassifier object at 0x119f12cb0>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:04,529:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x119f12cb0>
2025-08-19 19:09:04,531:INFO:Initializing create_model()
2025-08-19 19:09:04,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=<catboost.core.CatBoostClassifier object at 0x119f12cb0>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:04,531:INFO:Checking exceptions
2025-08-19 19:09:04,532:INFO:Importing libraries
2025-08-19 19:09:04,532:INFO:Copying training dataset
2025-08-19 19:09:04,532:INFO:Defining folds
2025-08-19 19:09:04,532:INFO:Declaring metric variables
2025-08-19 19:09:04,532:INFO:Importing untrained model
2025-08-19 19:09:04,532:INFO:Declaring custom model
2025-08-19 19:09:04,532:INFO:CatBoost Classifier Imported successfully
2025-08-19 19:09:04,533:INFO:Cross validation set to False
2025-08-19 19:09:04,533:INFO:Fitting Model
2025-08-19 19:09:06,069:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307a456c0>)],
         verbose=False)
2025-08-19 19:09:06,069:INFO:create_model() successfully completed......................................
2025-08-19 19:09:06,160:INFO:_master_model_container: 18
2025-08-19 19:09:06,160:INFO:_display_container: 5
2025-08-19 19:09:06,165:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307a456c0>)],
         verbose=False)
2025-08-19 19:09:06,165:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:06,260:INFO:Initializing predict_model()
2025-08-19 19:09:06,260:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x307a456c0>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:06,260:INFO:Checking exceptions
2025-08-19 19:09:06,260:INFO:Preloading libraries
2025-08-19 19:09:06,260:INFO:Set up data.
2025-08-19 19:09:06,264:INFO:Set up index.
2025-08-19 19:09:06,372:INFO:Initializing create_model()
2025-08-19 19:09:06,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:06,373:INFO:Checking exceptions
2025-08-19 19:09:06,374:INFO:Importing libraries
2025-08-19 19:09:06,374:INFO:Copying training dataset
2025-08-19 19:09:06,376:INFO:Defining folds
2025-08-19 19:09:06,376:INFO:Declaring metric variables
2025-08-19 19:09:06,376:INFO:Importing untrained model
2025-08-19 19:09:06,377:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:09:06,377:INFO:Starting cross validation
2025-08-19 19:09:06,378:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:06,919:INFO:Calculating mean and std
2025-08-19 19:09:06,919:INFO:Creating metrics dataframe
2025-08-19 19:09:06,920:INFO:Finalizing model
2025-08-19 19:09:07,044:INFO:Uploading results into container
2025-08-19 19:09:07,044:INFO:Uploading model into container now
2025-08-19 19:09:07,045:INFO:_master_model_container: 19
2025-08-19 19:09:07,045:INFO:_display_container: 7
2025-08-19 19:09:07,045:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:09:07,045:INFO:create_model() successfully completed......................................
2025-08-19 19:09:07,128:INFO:Initializing finalize_model()
2025-08-19 19:09:07,128:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:07,128:INFO:Finalizing RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-19 19:09:07,129:INFO:Initializing create_model()
2025-08-19 19:09:07,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:07,129:INFO:Checking exceptions
2025-08-19 19:09:07,130:INFO:Importing libraries
2025-08-19 19:09:07,130:INFO:Copying training dataset
2025-08-19 19:09:07,130:INFO:Defining folds
2025-08-19 19:09:07,130:INFO:Declaring metric variables
2025-08-19 19:09:07,131:INFO:Importing untrained model
2025-08-19 19:09:07,131:INFO:Declaring custom model
2025-08-19 19:09:07,131:INFO:Random Forest Classifier Imported successfully
2025-08-19 19:09:07,132:INFO:Cross validation set to False
2025-08-19 19:09:07,132:INFO:Fitting Model
2025-08-19 19:09:07,263:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:09:07,264:INFO:create_model() successfully completed......................................
2025-08-19 19:09:07,364:INFO:_master_model_container: 19
2025-08-19 19:09:07,364:INFO:_display_container: 7
2025-08-19 19:09:07,369:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-08-19 19:09:07,369:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:07,464:INFO:Initializing predict_model()
2025-08-19 19:09:07,464:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:07,464:INFO:Checking exceptions
2025-08-19 19:09:07,464:INFO:Preloading libraries
2025-08-19 19:09:07,464:INFO:Set up data.
2025-08-19 19:09:07,468:INFO:Set up index.
2025-08-19 19:09:07,604:INFO:Initializing create_model()
2025-08-19 19:09:07,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=ada, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:07,604:INFO:Checking exceptions
2025-08-19 19:09:07,605:INFO:Importing libraries
2025-08-19 19:09:07,605:INFO:Copying training dataset
2025-08-19 19:09:07,606:INFO:Defining folds
2025-08-19 19:09:07,607:INFO:Declaring metric variables
2025-08-19 19:09:07,607:INFO:Importing untrained model
2025-08-19 19:09:07,607:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:09:07,607:INFO:Starting cross validation
2025-08-19 19:09:07,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:07,639:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,654:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,658:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,660:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,675:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,679:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,686:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,712:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,844:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:07,851:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:08,004:INFO:Calculating mean and std
2025-08-19 19:09:08,004:INFO:Creating metrics dataframe
2025-08-19 19:09:08,005:INFO:Finalizing model
2025-08-19 19:09:08,030:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:08,164:INFO:Uploading results into container
2025-08-19 19:09:08,164:INFO:Uploading model into container now
2025-08-19 19:09:08,164:INFO:_master_model_container: 20
2025-08-19 19:09:08,164:INFO:_display_container: 9
2025-08-19 19:09:08,164:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:09:08,164:INFO:create_model() successfully completed......................................
2025-08-19 19:09:08,245:INFO:Initializing finalize_model()
2025-08-19 19:09:08,245:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:08,246:INFO:Finalizing AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-08-19 19:09:08,247:INFO:Initializing create_model()
2025-08-19 19:09:08,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:08,247:INFO:Checking exceptions
2025-08-19 19:09:08,248:INFO:Importing libraries
2025-08-19 19:09:08,248:INFO:Copying training dataset
2025-08-19 19:09:08,248:INFO:Defining folds
2025-08-19 19:09:08,248:INFO:Declaring metric variables
2025-08-19 19:09:08,248:INFO:Importing untrained model
2025-08-19 19:09:08,248:INFO:Declaring custom model
2025-08-19 19:09:08,248:INFO:Ada Boost Classifier Imported successfully
2025-08-19 19:09:08,249:INFO:Cross validation set to False
2025-08-19 19:09:08,249:INFO:Fitting Model
2025-08-19 19:09:08,271:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-08-19 19:09:08,436:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:09:08,436:INFO:create_model() successfully completed......................................
2025-08-19 19:09:08,520:INFO:_master_model_container: 20
2025-08-19 19:09:08,520:INFO:_display_container: 9
2025-08-19 19:09:08,524:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False)
2025-08-19 19:09:08,525:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:08,615:INFO:Initializing predict_model()
2025-08-19 19:09:08,616:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=123))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:08,616:INFO:Checking exceptions
2025-08-19 19:09:08,616:INFO:Preloading libraries
2025-08-19 19:09:08,616:INFO:Set up data.
2025-08-19 19:09:08,620:INFO:Set up index.
2025-08-19 19:09:08,736:INFO:Initializing create_model()
2025-08-19 19:09:08,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:08,737:INFO:Checking exceptions
2025-08-19 19:09:08,738:INFO:Importing libraries
2025-08-19 19:09:08,738:INFO:Copying training dataset
2025-08-19 19:09:08,740:INFO:Defining folds
2025-08-19 19:09:08,740:INFO:Declaring metric variables
2025-08-19 19:09:08,740:INFO:Importing untrained model
2025-08-19 19:09:08,740:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:09:08,740:INFO:Starting cross validation
2025-08-19 19:09:08,741:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:12,628:INFO:Calculating mean and std
2025-08-19 19:09:12,629:INFO:Creating metrics dataframe
2025-08-19 19:09:12,630:INFO:Finalizing model
2025-08-19 19:09:12,657:INFO:[LightGBM] [Info] Number of positive: 480, number of negative: 288
2025-08-19 19:09:12,658:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000354 seconds.
2025-08-19 19:09:12,658:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:09:12,658:INFO:[LightGBM] [Info] Total Bins 6375
2025-08-19 19:09:12,658:INFO:[LightGBM] [Info] Number of data points in the train set: 768, number of used features: 26
2025-08-19 19:09:12,659:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.625000 -> initscore=0.510826
2025-08-19 19:09:12,659:INFO:[LightGBM] [Info] Start training from score 0.510826
2025-08-19 19:09:12,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,662:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,683:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:12,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,200:INFO:Uploading results into container
2025-08-19 19:09:13,201:INFO:Uploading model into container now
2025-08-19 19:09:13,201:INFO:_master_model_container: 21
2025-08-19 19:09:13,201:INFO:_display_container: 11
2025-08-19 19:09:13,202:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:09:13,202:INFO:create_model() successfully completed......................................
2025-08-19 19:09:13,307:INFO:Initializing finalize_model()
2025-08-19 19:09:13,307:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:13,307:INFO:Finalizing LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-08-19 19:09:13,309:INFO:Initializing create_model()
2025-08-19 19:09:13,309:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:13,309:INFO:Checking exceptions
2025-08-19 19:09:13,310:INFO:Importing libraries
2025-08-19 19:09:13,310:INFO:Copying training dataset
2025-08-19 19:09:13,311:INFO:Defining folds
2025-08-19 19:09:13,311:INFO:Declaring metric variables
2025-08-19 19:09:13,311:INFO:Importing untrained model
2025-08-19 19:09:13,311:INFO:Declaring custom model
2025-08-19 19:09:13,312:INFO:Light Gradient Boosting Machine Imported successfully
2025-08-19 19:09:13,312:INFO:Cross validation set to False
2025-08-19 19:09:13,312:INFO:Fitting Model
2025-08-19 19:09:13,339:INFO:[LightGBM] [Info] Number of positive: 588, number of negative: 372
2025-08-19 19:09:13,340:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000404 seconds.
2025-08-19 19:09:13,340:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-08-19 19:09:13,340:INFO:[LightGBM] [Info] Total Bins 6380
2025-08-19 19:09:13,340:INFO:[LightGBM] [Info] Number of data points in the train set: 960, number of used features: 26
2025-08-19 19:09:13,340:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.612500 -> initscore=0.457833
2025-08-19 19:09:13,340:INFO:[LightGBM] [Info] Start training from score 0.457833
2025-08-19 19:09:13,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-08-19 19:09:13,869:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:09:13,870:INFO:create_model() successfully completed......................................
2025-08-19 19:09:13,963:INFO:_master_model_container: 21
2025-08-19 19:09:13,963:INFO:_display_container: 11
2025-08-19 19:09:13,969:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-08-19 19:09:13,969:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:14,059:INFO:Initializing predict_model()
2025-08-19 19:09:14,059:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:14,059:INFO:Checking exceptions
2025-08-19 19:09:14,059:INFO:Preloading libraries
2025-08-19 19:09:14,059:INFO:Set up data.
2025-08-19 19:09:14,064:INFO:Set up index.
2025-08-19 19:09:14,171:INFO:Initializing create_model()
2025-08-19 19:09:14,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:14,171:INFO:Checking exceptions
2025-08-19 19:09:14,172:INFO:Importing libraries
2025-08-19 19:09:14,172:INFO:Copying training dataset
2025-08-19 19:09:14,173:INFO:Defining folds
2025-08-19 19:09:14,173:INFO:Declaring metric variables
2025-08-19 19:09:14,173:INFO:Importing untrained model
2025-08-19 19:09:14,174:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:09:14,174:INFO:Starting cross validation
2025-08-19 19:09:14,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:15,705:INFO:Calculating mean and std
2025-08-19 19:09:15,705:INFO:Creating metrics dataframe
2025-08-19 19:09:15,706:INFO:Finalizing model
2025-08-19 19:09:16,282:INFO:Uploading results into container
2025-08-19 19:09:16,283:INFO:Uploading model into container now
2025-08-19 19:09:16,283:INFO:_master_model_container: 22
2025-08-19 19:09:16,283:INFO:_display_container: 13
2025-08-19 19:09:16,284:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:09:16,284:INFO:create_model() successfully completed......................................
2025-08-19 19:09:16,372:INFO:Initializing finalize_model()
2025-08-19 19:09:16,372:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:16,372:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-08-19 19:09:16,374:INFO:Initializing create_model()
2025-08-19 19:09:16,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:16,374:INFO:Checking exceptions
2025-08-19 19:09:16,375:INFO:Importing libraries
2025-08-19 19:09:16,375:INFO:Copying training dataset
2025-08-19 19:09:16,375:INFO:Defining folds
2025-08-19 19:09:16,375:INFO:Declaring metric variables
2025-08-19 19:09:16,375:INFO:Importing untrained model
2025-08-19 19:09:16,375:INFO:Declaring custom model
2025-08-19 19:09:16,376:INFO:Gradient Boosting Classifier Imported successfully
2025-08-19 19:09:16,376:INFO:Cross validation set to False
2025-08-19 19:09:16,376:INFO:Fitting Model
2025-08-19 19:09:17,086:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:09:17,087:INFO:create_model() successfully completed......................................
2025-08-19 19:09:17,167:INFO:_master_model_container: 22
2025-08-19 19:09:17,167:INFO:_display_container: 13
2025-08-19 19:09:17,173:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:09:17,173:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:17,261:INFO:Initializing predict_model()
2025-08-19 19:09:17,261:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=123, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:17,261:INFO:Checking exceptions
2025-08-19 19:09:17,261:INFO:Preloading libraries
2025-08-19 19:09:17,261:INFO:Set up data.
2025-08-19 19:09:17,265:INFO:Set up index.
2025-08-19 19:09:17,375:INFO:Initializing create_model()
2025-08-19 19:09:17,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:17,375:INFO:Checking exceptions
2025-08-19 19:09:17,376:INFO:Importing libraries
2025-08-19 19:09:17,376:INFO:Copying training dataset
2025-08-19 19:09:17,378:INFO:Defining folds
2025-08-19 19:09:17,378:INFO:Declaring metric variables
2025-08-19 19:09:17,378:INFO:Importing untrained model
2025-08-19 19:09:17,378:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:09:17,378:INFO:Starting cross validation
2025-08-19 19:09:17,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:17,598:INFO:Calculating mean and std
2025-08-19 19:09:17,598:INFO:Creating metrics dataframe
2025-08-19 19:09:17,600:INFO:Finalizing model
2025-08-19 19:09:17,747:INFO:Uploading results into container
2025-08-19 19:09:17,748:INFO:Uploading model into container now
2025-08-19 19:09:17,748:INFO:_master_model_container: 23
2025-08-19 19:09:17,748:INFO:_display_container: 15
2025-08-19 19:09:17,748:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:09:17,748:INFO:create_model() successfully completed......................................
2025-08-19 19:09:17,835:INFO:Initializing finalize_model()
2025-08-19 19:09:17,835:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:17,835:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-08-19 19:09:17,838:INFO:Initializing create_model()
2025-08-19 19:09:17,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:17,838:INFO:Checking exceptions
2025-08-19 19:09:17,839:INFO:Importing libraries
2025-08-19 19:09:17,839:INFO:Copying training dataset
2025-08-19 19:09:17,839:INFO:Defining folds
2025-08-19 19:09:17,839:INFO:Declaring metric variables
2025-08-19 19:09:17,839:INFO:Importing untrained model
2025-08-19 19:09:17,839:INFO:Declaring custom model
2025-08-19 19:09:17,840:INFO:Extreme Gradient Boosting Imported successfully
2025-08-19 19:09:17,841:INFO:Cross validation set to False
2025-08-19 19:09:17,841:INFO:Fitting Model
2025-08-19 19:09:18,030:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:09:18,030:INFO:create_model() successfully completed......................................
2025-08-19 19:09:18,118:INFO:_master_model_container: 23
2025-08-19 19:09:18,118:INFO:_display_container: 15
2025-08-19 19:09:18,124:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False)
2025-08-19 19:09:18,125:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:18,218:INFO:Initializing predict_model()
2025-08-19 19:09:18,218:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                               gamma=None, grow_policy=None,
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None, ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:18,218:INFO:Checking exceptions
2025-08-19 19:09:18,218:INFO:Preloading libraries
2025-08-19 19:09:18,218:INFO:Set up data.
2025-08-19 19:09:18,223:INFO:Set up index.
2025-08-19 19:09:18,332:INFO:Initializing create_model()
2025-08-19 19:09:18,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:18,332:INFO:Checking exceptions
2025-08-19 19:09:18,333:INFO:Importing libraries
2025-08-19 19:09:18,333:INFO:Copying training dataset
2025-08-19 19:09:18,335:INFO:Defining folds
2025-08-19 19:09:18,335:INFO:Declaring metric variables
2025-08-19 19:09:18,335:INFO:Importing untrained model
2025-08-19 19:09:18,335:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:09:18,336:INFO:Starting cross validation
2025-08-19 19:09:18,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:18,871:INFO:Calculating mean and std
2025-08-19 19:09:18,871:INFO:Creating metrics dataframe
2025-08-19 19:09:18,872:INFO:Finalizing model
2025-08-19 19:09:18,985:INFO:Uploading results into container
2025-08-19 19:09:18,985:INFO:Uploading model into container now
2025-08-19 19:09:18,986:INFO:_master_model_container: 24
2025-08-19 19:09:18,986:INFO:_display_container: 17
2025-08-19 19:09:18,986:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:09:18,986:INFO:create_model() successfully completed......................................
2025-08-19 19:09:19,075:INFO:Initializing finalize_model()
2025-08-19 19:09:19,075:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:19,075:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-08-19 19:09:19,076:INFO:Initializing create_model()
2025-08-19 19:09:19,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:19,077:INFO:Checking exceptions
2025-08-19 19:09:19,077:INFO:Importing libraries
2025-08-19 19:09:19,077:INFO:Copying training dataset
2025-08-19 19:09:19,078:INFO:Defining folds
2025-08-19 19:09:19,078:INFO:Declaring metric variables
2025-08-19 19:09:19,078:INFO:Importing untrained model
2025-08-19 19:09:19,078:INFO:Declaring custom model
2025-08-19 19:09:19,078:INFO:Extra Trees Classifier Imported successfully
2025-08-19 19:09:19,079:INFO:Cross validation set to False
2025-08-19 19:09:19,079:INFO:Fitting Model
2025-08-19 19:09:19,190:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:09:19,190:INFO:create_model() successfully completed......................................
2025-08-19 19:09:19,336:INFO:_master_model_container: 24
2025-08-19 19:09:19,336:INFO:_display_container: 17
2025-08-19 19:09:19,358:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2025-08-19 19:09:19,358:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:19,567:INFO:Initializing predict_model()
2025-08-19 19:09:19,567:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:19,567:INFO:Checking exceptions
2025-08-19 19:09:19,567:INFO:Preloading libraries
2025-08-19 19:09:19,568:INFO:Set up data.
2025-08-19 19:09:19,574:INFO:Set up index.
2025-08-19 19:09:19,715:INFO:Initializing create_model()
2025-08-19 19:09:19,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=dummy, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:19,715:INFO:Checking exceptions
2025-08-19 19:09:19,716:INFO:Importing libraries
2025-08-19 19:09:19,716:INFO:Copying training dataset
2025-08-19 19:09:19,718:INFO:Defining folds
2025-08-19 19:09:19,718:INFO:Declaring metric variables
2025-08-19 19:09:19,718:INFO:Importing untrained model
2025-08-19 19:09:19,718:INFO:Dummy Classifier Imported successfully
2025-08-19 19:09:19,718:INFO:Starting cross validation
2025-08-19 19:09:19,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:19,766:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,769:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,772:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,775:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,778:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,781:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,796:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,804:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,808:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,812:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:19,819:INFO:Calculating mean and std
2025-08-19 19:09:19,820:INFO:Creating metrics dataframe
2025-08-19 19:09:19,821:INFO:Finalizing model
2025-08-19 19:09:19,844:INFO:Uploading results into container
2025-08-19 19:09:19,844:INFO:Uploading model into container now
2025-08-19 19:09:19,844:INFO:_master_model_container: 25
2025-08-19 19:09:19,844:INFO:_display_container: 19
2025-08-19 19:09:19,844:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:09:19,844:INFO:create_model() successfully completed......................................
2025-08-19 19:09:19,929:INFO:Initializing finalize_model()
2025-08-19 19:09:19,930:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:19,930:INFO:Finalizing DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-08-19 19:09:19,931:INFO:Initializing create_model()
2025-08-19 19:09:19,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=DummyClassifier(constant=None, random_state=123, strategy='prior'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:19,931:INFO:Checking exceptions
2025-08-19 19:09:19,932:INFO:Importing libraries
2025-08-19 19:09:19,932:INFO:Copying training dataset
2025-08-19 19:09:19,932:INFO:Defining folds
2025-08-19 19:09:19,932:INFO:Declaring metric variables
2025-08-19 19:09:19,932:INFO:Importing untrained model
2025-08-19 19:09:19,932:INFO:Declaring custom model
2025-08-19 19:09:19,932:INFO:Dummy Classifier Imported successfully
2025-08-19 19:09:19,933:INFO:Cross validation set to False
2025-08-19 19:09:19,933:INFO:Fitting Model
2025-08-19 19:09:19,961:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:09:19,961:INFO:create_model() successfully completed......................................
2025-08-19 19:09:20,053:INFO:_master_model_container: 25
2025-08-19 19:09:20,053:INFO:_display_container: 19
2025-08-19 19:09:20,059:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False)
2025-08-19 19:09:20,059:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:20,156:INFO:Initializing predict_model()
2025-08-19 19:09:20,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 DummyClassifier(constant=None, random_state=123,
                                 strategy='prior'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:20,157:INFO:Checking exceptions
2025-08-19 19:09:20,157:INFO:Preloading libraries
2025-08-19 19:09:20,157:INFO:Set up data.
2025-08-19 19:09:20,161:INFO:Set up index.
2025-08-19 19:09:20,178:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:20,280:INFO:Initializing create_model()
2025-08-19 19:09:20,280:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:20,280:INFO:Checking exceptions
2025-08-19 19:09:20,281:INFO:Importing libraries
2025-08-19 19:09:20,281:INFO:Copying training dataset
2025-08-19 19:09:20,283:INFO:Defining folds
2025-08-19 19:09:20,283:INFO:Declaring metric variables
2025-08-19 19:09:20,283:INFO:Importing untrained model
2025-08-19 19:09:20,283:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:09:20,283:INFO:Starting cross validation
2025-08-19 19:09:20,284:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:20,404:INFO:Calculating mean and std
2025-08-19 19:09:20,404:INFO:Creating metrics dataframe
2025-08-19 19:09:20,405:INFO:Finalizing model
2025-08-19 19:09:20,431:INFO:Uploading results into container
2025-08-19 19:09:20,431:INFO:Uploading model into container now
2025-08-19 19:09:20,431:INFO:_master_model_container: 26
2025-08-19 19:09:20,431:INFO:_display_container: 21
2025-08-19 19:09:20,431:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:09:20,431:INFO:create_model() successfully completed......................................
2025-08-19 19:09:20,515:INFO:Initializing finalize_model()
2025-08-19 19:09:20,515:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:20,516:INFO:Finalizing KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-08-19 19:09:20,517:INFO:Initializing create_model()
2025-08-19 19:09:20,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:20,517:INFO:Checking exceptions
2025-08-19 19:09:20,518:INFO:Importing libraries
2025-08-19 19:09:20,518:INFO:Copying training dataset
2025-08-19 19:09:20,518:INFO:Defining folds
2025-08-19 19:09:20,518:INFO:Declaring metric variables
2025-08-19 19:09:20,518:INFO:Importing untrained model
2025-08-19 19:09:20,518:INFO:Declaring custom model
2025-08-19 19:09:20,518:INFO:K Neighbors Classifier Imported successfully
2025-08-19 19:09:20,519:INFO:Cross validation set to False
2025-08-19 19:09:20,519:INFO:Fitting Model
2025-08-19 19:09:20,546:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:09:20,546:INFO:create_model() successfully completed......................................
2025-08-19 19:09:20,631:INFO:_master_model_container: 26
2025-08-19 19:09:20,631:INFO:_display_container: 21
2025-08-19 19:09:20,635:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-08-19 19:09:20,635:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:20,724:INFO:Initializing predict_model()
2025-08-19 19:09:20,724:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:20,724:INFO:Checking exceptions
2025-08-19 19:09:20,724:INFO:Preloading libraries
2025-08-19 19:09:20,724:INFO:Set up data.
2025-08-19 19:09:20,728:INFO:Set up index.
2025-08-19 19:09:20,835:INFO:Initializing create_model()
2025-08-19 19:09:20,836:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:20,836:INFO:Checking exceptions
2025-08-19 19:09:20,837:INFO:Importing libraries
2025-08-19 19:09:20,837:INFO:Copying training dataset
2025-08-19 19:09:20,838:INFO:Defining folds
2025-08-19 19:09:20,838:INFO:Declaring metric variables
2025-08-19 19:09:20,838:INFO:Importing untrained model
2025-08-19 19:09:20,839:INFO:Logistic Regression Imported successfully
2025-08-19 19:09:20,839:INFO:Starting cross validation
2025-08-19 19:09:20,839:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:20,930:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:20,968:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:20,979:INFO:Calculating mean and std
2025-08-19 19:09:20,980:INFO:Creating metrics dataframe
2025-08-19 19:09:20,981:INFO:Finalizing model
2025-08-19 19:09:21,013:INFO:Uploading results into container
2025-08-19 19:09:21,016:INFO:Uploading model into container now
2025-08-19 19:09:21,016:INFO:_master_model_container: 27
2025-08-19 19:09:21,016:INFO:_display_container: 23
2025-08-19 19:09:21,016:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:09:21,016:INFO:create_model() successfully completed......................................
2025-08-19 19:09:21,118:INFO:Initializing finalize_model()
2025-08-19 19:09:21,118:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:21,118:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-19 19:09:21,120:INFO:Initializing create_model()
2025-08-19 19:09:21,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:21,120:INFO:Checking exceptions
2025-08-19 19:09:21,121:INFO:Importing libraries
2025-08-19 19:09:21,121:INFO:Copying training dataset
2025-08-19 19:09:21,121:INFO:Defining folds
2025-08-19 19:09:21,121:INFO:Declaring metric variables
2025-08-19 19:09:21,121:INFO:Importing untrained model
2025-08-19 19:09:21,121:INFO:Declaring custom model
2025-08-19 19:09:21,124:INFO:Logistic Regression Imported successfully
2025-08-19 19:09:21,127:INFO:Cross validation set to False
2025-08-19 19:09:21,127:INFO:Fitting Model
2025-08-19 19:09:21,199:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:09:21,199:INFO:create_model() successfully completed......................................
2025-08-19 19:09:21,290:INFO:_master_model_container: 27
2025-08-19 19:09:21,290:INFO:_display_container: 23
2025-08-19 19:09:21,294:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-19 19:09:21,294:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:21,464:INFO:Initializing predict_model()
2025-08-19 19:09:21,464:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:21,464:INFO:Checking exceptions
2025-08-19 19:09:21,464:INFO:Preloading libraries
2025-08-19 19:09:21,464:INFO:Set up data.
2025-08-19 19:09:21,469:INFO:Set up index.
2025-08-19 19:09:21,603:INFO:Initializing create_model()
2025-08-19 19:09:21,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=ridge, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:21,603:INFO:Checking exceptions
2025-08-19 19:09:21,604:INFO:Importing libraries
2025-08-19 19:09:21,604:INFO:Copying training dataset
2025-08-19 19:09:21,606:INFO:Defining folds
2025-08-19 19:09:21,607:INFO:Declaring metric variables
2025-08-19 19:09:21,607:INFO:Importing untrained model
2025-08-19 19:09:21,607:INFO:Ridge Classifier Imported successfully
2025-08-19 19:09:21,607:INFO:Starting cross validation
2025-08-19 19:09:21,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:21,760:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-19 19:09:21,766:INFO:Calculating mean and std
2025-08-19 19:09:21,767:INFO:Creating metrics dataframe
2025-08-19 19:09:21,768:INFO:Finalizing model
2025-08-19 19:09:21,792:INFO:Uploading results into container
2025-08-19 19:09:21,794:INFO:Uploading model into container now
2025-08-19 19:09:21,794:INFO:_master_model_container: 28
2025-08-19 19:09:21,794:INFO:_display_container: 25
2025-08-19 19:09:21,795:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:09:21,795:INFO:create_model() successfully completed......................................
2025-08-19 19:09:21,934:INFO:Initializing finalize_model()
2025-08-19 19:09:21,934:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:21,934:INFO:Finalizing RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-08-19 19:09:21,936:INFO:Initializing create_model()
2025-08-19 19:09:21,936:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:21,936:INFO:Checking exceptions
2025-08-19 19:09:21,937:INFO:Importing libraries
2025-08-19 19:09:21,937:INFO:Copying training dataset
2025-08-19 19:09:21,937:INFO:Defining folds
2025-08-19 19:09:21,937:INFO:Declaring metric variables
2025-08-19 19:09:21,937:INFO:Importing untrained model
2025-08-19 19:09:21,937:INFO:Declaring custom model
2025-08-19 19:09:21,937:INFO:Ridge Classifier Imported successfully
2025-08-19 19:09:21,938:INFO:Cross validation set to False
2025-08-19 19:09:21,938:INFO:Fitting Model
2025-08-19 19:09:21,993:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:09:21,993:INFO:create_model() successfully completed......................................
2025-08-19 19:09:22,179:INFO:_master_model_container: 28
2025-08-19 19:09:22,179:INFO:_display_container: 25
2025-08-19 19:09:22,184:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False)
2025-08-19 19:09:22,184:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:22,303:INFO:Initializing predict_model()
2025-08-19 19:09:22,303:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True,
                                 fit_intercept=True, max_iter=None,
                                 positive=False, random_state=123,
                                 solver='auto', tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:22,303:INFO:Checking exceptions
2025-08-19 19:09:22,303:INFO:Preloading libraries
2025-08-19 19:09:22,303:INFO:Set up data.
2025-08-19 19:09:22,307:INFO:Set up index.
2025-08-19 19:09:22,452:INFO:Initializing create_model()
2025-08-19 19:09:22,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=lda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:22,452:INFO:Checking exceptions
2025-08-19 19:09:22,453:INFO:Importing libraries
2025-08-19 19:09:22,453:INFO:Copying training dataset
2025-08-19 19:09:22,455:INFO:Defining folds
2025-08-19 19:09:22,455:INFO:Declaring metric variables
2025-08-19 19:09:22,455:INFO:Importing untrained model
2025-08-19 19:09:22,455:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:09:22,455:INFO:Starting cross validation
2025-08-19 19:09:22,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:22,594:INFO:Calculating mean and std
2025-08-19 19:09:22,594:INFO:Creating metrics dataframe
2025-08-19 19:09:22,596:INFO:Finalizing model
2025-08-19 19:09:22,621:INFO:Uploading results into container
2025-08-19 19:09:22,623:INFO:Uploading model into container now
2025-08-19 19:09:22,623:INFO:_master_model_container: 29
2025-08-19 19:09:22,623:INFO:_display_container: 27
2025-08-19 19:09:22,624:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:09:22,624:INFO:create_model() successfully completed......................................
2025-08-19 19:09:22,796:INFO:Initializing finalize_model()
2025-08-19 19:09:22,796:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:22,797:INFO:Finalizing LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-08-19 19:09:22,798:INFO:Initializing create_model()
2025-08-19 19:09:22,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:22,798:INFO:Checking exceptions
2025-08-19 19:09:22,799:INFO:Importing libraries
2025-08-19 19:09:22,799:INFO:Copying training dataset
2025-08-19 19:09:22,799:INFO:Defining folds
2025-08-19 19:09:22,799:INFO:Declaring metric variables
2025-08-19 19:09:22,799:INFO:Importing untrained model
2025-08-19 19:09:22,799:INFO:Declaring custom model
2025-08-19 19:09:22,800:INFO:Linear Discriminant Analysis Imported successfully
2025-08-19 19:09:22,800:INFO:Cross validation set to False
2025-08-19 19:09:22,800:INFO:Fitting Model
2025-08-19 19:09:22,885:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:09:22,885:INFO:create_model() successfully completed......................................
2025-08-19 19:09:23,009:INFO:_master_model_container: 29
2025-08-19 19:09:23,009:INFO:_display_container: 27
2025-08-19 19:09:23,014:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False)
2025-08-19 19:09:23,014:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:23,140:INFO:Initializing predict_model()
2025-08-19 19:09:23,140:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 LinearDiscriminantAnalysis(covariance_estimator=None,
                                            n_components=None, priors=None,
                                            shrinkage=None, solver='svd',
                                            store_covariance=False,
                                            tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:23,141:INFO:Checking exceptions
2025-08-19 19:09:23,141:INFO:Preloading libraries
2025-08-19 19:09:23,141:INFO:Set up data.
2025-08-19 19:09:23,145:INFO:Set up index.
2025-08-19 19:09:23,250:INFO:Initializing create_model()
2025-08-19 19:09:23,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:23,251:INFO:Checking exceptions
2025-08-19 19:09:23,251:INFO:Importing libraries
2025-08-19 19:09:23,251:INFO:Copying training dataset
2025-08-19 19:09:23,254:INFO:Defining folds
2025-08-19 19:09:23,254:INFO:Declaring metric variables
2025-08-19 19:09:23,254:INFO:Importing untrained model
2025-08-19 19:09:23,254:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:09:23,255:INFO:Starting cross validation
2025-08-19 19:09:23,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:23,383:INFO:Calculating mean and std
2025-08-19 19:09:23,384:INFO:Creating metrics dataframe
2025-08-19 19:09:23,385:INFO:Finalizing model
2025-08-19 19:09:23,412:INFO:Uploading results into container
2025-08-19 19:09:23,412:INFO:Uploading model into container now
2025-08-19 19:09:23,413:INFO:_master_model_container: 30
2025-08-19 19:09:23,413:INFO:_display_container: 29
2025-08-19 19:09:23,413:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:09:23,413:INFO:create_model() successfully completed......................................
2025-08-19 19:09:23,500:INFO:Initializing finalize_model()
2025-08-19 19:09:23,500:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:23,500:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-19 19:09:23,501:INFO:Initializing create_model()
2025-08-19 19:09:23,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:23,501:INFO:Checking exceptions
2025-08-19 19:09:23,502:INFO:Importing libraries
2025-08-19 19:09:23,502:INFO:Copying training dataset
2025-08-19 19:09:23,502:INFO:Defining folds
2025-08-19 19:09:23,502:INFO:Declaring metric variables
2025-08-19 19:09:23,503:INFO:Importing untrained model
2025-08-19 19:09:23,503:INFO:Declaring custom model
2025-08-19 19:09:23,503:INFO:SVM - Linear Kernel Imported successfully
2025-08-19 19:09:23,504:INFO:Cross validation set to False
2025-08-19 19:09:23,504:INFO:Fitting Model
2025-08-19 19:09:23,536:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:09:23,536:INFO:create_model() successfully completed......................................
2025-08-19 19:09:23,619:INFO:_master_model_container: 30
2025-08-19 19:09:23,619:INFO:_display_container: 29
2025-08-19 19:09:23,624:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False)
2025-08-19 19:09:23,624:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:23,714:INFO:Initializing predict_model()
2025-08-19 19:09:23,714:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:23,714:INFO:Checking exceptions
2025-08-19 19:09:23,714:INFO:Preloading libraries
2025-08-19 19:09:23,715:INFO:Set up data.
2025-08-19 19:09:23,719:INFO:Set up index.
2025-08-19 19:09:23,824:INFO:Initializing create_model()
2025-08-19 19:09:23,824:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:23,824:INFO:Checking exceptions
2025-08-19 19:09:23,825:INFO:Importing libraries
2025-08-19 19:09:23,825:INFO:Copying training dataset
2025-08-19 19:09:23,827:INFO:Defining folds
2025-08-19 19:09:23,827:INFO:Declaring metric variables
2025-08-19 19:09:23,827:INFO:Importing untrained model
2025-08-19 19:09:23,827:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:09:23,827:INFO:Starting cross validation
2025-08-19 19:09:23,828:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:23,858:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,860:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,865:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,870:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,882:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,883:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,890:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,890:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,907:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,911:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,934:INFO:Calculating mean and std
2025-08-19 19:09:23,935:INFO:Creating metrics dataframe
2025-08-19 19:09:23,936:INFO:Finalizing model
2025-08-19 19:09:23,960:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:23,978:INFO:Uploading results into container
2025-08-19 19:09:23,978:INFO:Uploading model into container now
2025-08-19 19:09:23,978:INFO:_master_model_container: 31
2025-08-19 19:09:23,979:INFO:_display_container: 31
2025-08-19 19:09:23,979:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:09:23,979:INFO:create_model() successfully completed......................................
2025-08-19 19:09:24,086:INFO:Initializing finalize_model()
2025-08-19 19:09:24,087:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:24,087:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-08-19 19:09:24,088:INFO:Initializing create_model()
2025-08-19 19:09:24,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:24,088:INFO:Checking exceptions
2025-08-19 19:09:24,089:INFO:Importing libraries
2025-08-19 19:09:24,089:INFO:Copying training dataset
2025-08-19 19:09:24,089:INFO:Defining folds
2025-08-19 19:09:24,089:INFO:Declaring metric variables
2025-08-19 19:09:24,089:INFO:Importing untrained model
2025-08-19 19:09:24,089:INFO:Declaring custom model
2025-08-19 19:09:24,089:INFO:Quadratic Discriminant Analysis Imported successfully
2025-08-19 19:09:24,090:INFO:Cross validation set to False
2025-08-19 19:09:24,090:INFO:Fitting Model
2025-08-19 19:09:24,148:WARNING:/opt/homebrew/Caskroom/miniforge/base/envs/etri-emotion/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-08-19 19:09:24,191:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:09:24,191:INFO:create_model() successfully completed......................................
2025-08-19 19:09:24,355:INFO:_master_model_container: 31
2025-08-19 19:09:24,355:INFO:_display_container: 31
2025-08-19 19:09:24,362:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-08-19 19:09:24,363:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:24,482:INFO:Initializing predict_model()
2025-08-19 19:09:24,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:24,482:INFO:Checking exceptions
2025-08-19 19:09:24,482:INFO:Preloading libraries
2025-08-19 19:09:24,482:INFO:Set up data.
2025-08-19 19:09:24,487:INFO:Set up index.
2025-08-19 19:09:24,591:INFO:Initializing create_model()
2025-08-19 19:09:24,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=nb, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:24,591:INFO:Checking exceptions
2025-08-19 19:09:24,592:INFO:Importing libraries
2025-08-19 19:09:24,592:INFO:Copying training dataset
2025-08-19 19:09:24,594:INFO:Defining folds
2025-08-19 19:09:24,594:INFO:Declaring metric variables
2025-08-19 19:09:24,594:INFO:Importing untrained model
2025-08-19 19:09:24,594:INFO:Naive Bayes Imported successfully
2025-08-19 19:09:24,594:INFO:Starting cross validation
2025-08-19 19:09:24,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-08-19 19:09:24,758:INFO:Calculating mean and std
2025-08-19 19:09:24,758:INFO:Creating metrics dataframe
2025-08-19 19:09:24,760:INFO:Finalizing model
2025-08-19 19:09:24,784:INFO:Uploading results into container
2025-08-19 19:09:24,784:INFO:Uploading model into container now
2025-08-19 19:09:24,784:INFO:_master_model_container: 32
2025-08-19 19:09:24,784:INFO:_display_container: 33
2025-08-19 19:09:24,784:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:09:24,784:INFO:create_model() successfully completed......................................
2025-08-19 19:09:24,875:INFO:Initializing finalize_model()
2025-08-19 19:09:24,875:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-19 19:09:24,875:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-08-19 19:09:24,876:INFO:Initializing create_model()
2025-08-19 19:09:24,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-19 19:09:24,876:INFO:Checking exceptions
2025-08-19 19:09:24,877:INFO:Importing libraries
2025-08-19 19:09:24,877:INFO:Copying training dataset
2025-08-19 19:09:24,877:INFO:Defining folds
2025-08-19 19:09:24,877:INFO:Declaring metric variables
2025-08-19 19:09:24,877:INFO:Importing untrained model
2025-08-19 19:09:24,877:INFO:Declaring custom model
2025-08-19 19:09:24,878:INFO:Naive Bayes Imported successfully
2025-08-19 19:09:24,878:INFO:Cross validation set to False
2025-08-19 19:09:24,879:INFO:Fitting Model
2025-08-19 19:09:24,907:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:09:24,907:INFO:create_model() successfully completed......................................
2025-08-19 19:09:24,990:INFO:_master_model_container: 32
2025-08-19 19:09:24,990:INFO:_display_container: 33
2025-08-19 19:09:24,995:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-08-19 19:09:24,995:INFO:finalize_model() successfully completed......................................
2025-08-19 19:09:25,082:INFO:Initializing predict_model()
2025-08-19 19:09:25,083:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3076d6b60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['pnn50_mssd', 'hf', 'ln_hf',
                                             'bpm_var', 'vlf_mssd', 'ln_vlf',
                                             'lf', 'lf_mssd', 'lf_autocorr',
                                             'ln_lf', 'ln_lf_autocorr', 'p_pow',
                                             'p_pow_autocorr', 'p_hz...
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['person'],
                                    transformer=TargetEncoder(cols=['person'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x31fc03e20>)
2025-08-19 19:09:25,083:INFO:Checking exceptions
2025-08-19 19:09:25,083:INFO:Preloading libraries
2025-08-19 19:09:25,083:INFO:Set up data.
2025-08-19 19:09:25,087:INFO:Set up index.
